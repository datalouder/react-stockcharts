{"version":3,"sources":["../../src/lib/ZoomButtons.js"],"names":["ZoomButtons","props","handleZoomOut","bind","handleZoomIn","zoom","direction","context","xAxisZoom","xScale","plotData","xAccessor","cx","zoomMultiplier","c","domain","start","end","range","map","x","invert","newStart","newEnd","left","right","foo","i","interval","setInterval","shift","length","clearInterval","chartConfig","width","height","size","heightFromBase","rx","ry","stroke","strokeOpacity","fill","strokeWidth","fillOpacity","textFill","textStrokeWidth","onReset","centerX","Math","round","y","w","h","hLength","wLength","textY","resetX","zoomOut","zoomOutX","moveTo","lineTo","closePath","zoomIn","zoomInX","toString","Component","propTypes","PropTypes","number","isRequired","array","string","fontSize","textDy","func","defaultProps","noop","contextTypes","object"],"mappings":"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","file":"ZoomButtons.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import { mean } from \"d3-array\";\n\nimport { path as d3Path } from 'd3-path';\nimport { interpolateNumber } from 'd3-interpolate';\n\nimport { last, noop } from './utils';\n\nclass ZoomButtons extends Component {\n  constructor(props) {\n    super(props);\n    this.handleZoomOut = this.handleZoomOut.bind(this);\n    this.handleZoomIn = this.handleZoomIn.bind(this);\n    this.zoom = this.zoom.bind(this);\n  }\n  zoom(direction) {\n    const { xAxisZoom, xScale, plotData, xAccessor } = this.context;\n    const cx = xScale(xAccessor(last(plotData)));\n    // mean(xScale.range());\n    const { zoomMultiplier } = this.props;\n\n    const c = direction > 0 ? 1 * zoomMultiplier : 1 / zoomMultiplier;\n\n    const [start, end] = xScale.domain();\n    const [newStart, newEnd] = xScale\n      .range()\n      .map(x => cx + (x - cx) * c)\n      .map(xScale.invert);\n\n    const left = interpolateNumber(start, newStart);\n    const right = interpolateNumber(end, newEnd);\n\n    const foo = [0.25, 0.3, 0.5, 0.6, 0.75, 1].map(i => {\n      return [left(i), right(i)];\n    });\n\n    this.interval = setInterval(() => {\n      xAxisZoom(foo.shift());\n      if (foo.length === 0) {\n        clearInterval(this.interval);\n        delete this.interval;\n      }\n    }, 10);\n  }\n  handleZoomOut() {\n    if (this.interval) return;\n    this.zoom(1);\n  }\n  handleZoomIn() {\n    if (this.interval) return;\n    this.zoom(-1);\n  }\n  render() {\n    const { chartConfig } = this.context;\n    const { width, height } = chartConfig;\n    const { size, heightFromBase, rx, ry } = this.props;\n    const { stroke, strokeOpacity, fill, strokeWidth, fillOpacity } =\n      this.props;\n    const { textFill, textStrokeWidth } = this.props;\n    const { onReset } = this.props;\n    const centerX = Math.round(width / 2);\n    const y = height - heightFromBase;\n\n    const [w, h] = size;\n    const hLength = 5;\n    const wLength = 6;\n\n    const textY = Math.round(y + h / 2);\n\n    const resetX = centerX;\n\n    const zoomOut = d3Path();\n    const zoomOutX = centerX - w - 2 * strokeWidth;\n    zoomOut.moveTo(zoomOutX - wLength, textY);\n    zoomOut.lineTo(zoomOutX + wLength, textY);\n    zoomOut.closePath();\n\n    const zoomIn = d3Path();\n    const zoomInX = centerX + w + 2 * strokeWidth;\n\n    zoomIn.moveTo(zoomInX - wLength, textY);\n    zoomIn.lineTo(zoomInX + wLength, textY);\n\n    zoomIn.moveTo(zoomInX, textY - hLength);\n    zoomIn.lineTo(zoomInX, textY + hLength);\n    // zoomIn.closePath();\n\n    return (\n      <g className=\"react-stockcharts-zoom-button\">\n        <rect\n          x={zoomOutX - w / 2}\n          y={y}\n          rx={rx}\n          ry={ry}\n          height={h}\n          width={w}\n          fill={fill}\n          fillOpacity={fillOpacity}\n          stroke={stroke}\n          strokeOpacity={strokeOpacity}\n          strokeWidth={strokeWidth}\n        />\n        <path\n          d={zoomOut.toString()}\n          stroke={textFill}\n          strokeWidth={textStrokeWidth}\n        />\n        <rect\n          x={resetX - w / 2}\n          y={y}\n          rx={rx}\n          ry={ry}\n          height={h}\n          width={w}\n          fill={fill}\n          fillOpacity={fillOpacity}\n          stroke={stroke}\n          strokeOpacity={strokeOpacity}\n          strokeWidth={strokeWidth}\n        />\n        <g transform={`translate (${resetX}, ${y + h / 4}) scale(.14)`}>\n          <path\n            d=\"M31 13C23.4 5.3 12.8.5 1.1.5c-23.3 0-42.3 19-42.3 42.5s18.9 42.5 42.3 42.5c13.8 0 26-6.6 33.7-16.9l-16.5-1.8C13.5 70.4 7.5 72.5 1 72.5c-16.2 0-29.3-13.2-29.3-29.4S-15.2 13.7 1 13.7c8.1 0 15.4 3.3 20.7 8.6l-10.9 11h32.5V.5L31 13z\"\n            fill={textFill}\n          />\n        </g>\n        <rect\n          x={zoomInX - w / 2}\n          y={y}\n          rx={rx}\n          ry={ry}\n          height={h}\n          width={w}\n          fill={fill}\n          fillOpacity={fillOpacity}\n          stroke={stroke}\n          strokeOpacity={strokeOpacity}\n          strokeWidth={strokeWidth}\n        />\n        <path\n          d={zoomIn.toString()}\n          stroke={textFill}\n          strokeWidth={textStrokeWidth}\n        />\n        <rect\n          className=\"react-stockcharts-enable-interaction out\"\n          onClick={this.handleZoomOut}\n          x={zoomOutX - w / 2}\n          y={y}\n          rx={rx}\n          ry={ry}\n          height={h}\n          width={w}\n          fill=\"none\"\n        />\n        <rect\n          className=\"react-stockcharts-enable-interaction reset\"\n          onClick={onReset}\n          x={resetX - w / 2}\n          y={y}\n          rx={rx}\n          ry={ry}\n          height={h}\n          width={w}\n          fill=\"none\"\n        />\n        <rect\n          className=\"react-stockcharts-enable-interaction in\"\n          onClick={this.handleZoomIn}\n          x={zoomInX - w / 2}\n          y={y}\n          rx={rx}\n          ry={ry}\n          height={h}\n          width={w}\n          fill=\"none\"\n        />\n      </g>\n    );\n  }\n}\n\nZoomButtons.propTypes = {\n  zoomMultiplier: PropTypes.number.isRequired,\n  size: PropTypes.array.isRequired,\n  heightFromBase: PropTypes.number.isRequired,\n  rx: PropTypes.number.isRequired,\n  ry: PropTypes.number.isRequired,\n  stroke: PropTypes.string.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n  strokeOpacity: PropTypes.number.isRequired,\n  fill: PropTypes.string.isRequired,\n  fillOpacity: PropTypes.number.isRequired,\n  fontSize: PropTypes.number.isRequired,\n  textDy: PropTypes.string.isRequired,\n  textFill: PropTypes.string.isRequired,\n  textStrokeWidth: PropTypes.number.isRequired,\n  onReset: PropTypes.func,\n};\n\nZoomButtons.defaultProps = {\n  size: [30, 24],\n  heightFromBase: 50,\n  rx: 3,\n  ry: 3,\n  stroke: '#000000',\n  strokeOpacity: 0.3,\n  strokeWidth: 1,\n  fill: '#D6D6D6',\n  fillOpacity: 0.4,\n  fontSize: 16,\n  textDy: '.3em',\n  textFill: '#000000',\n  textStrokeWidth: 2,\n  zoomMultiplier: 1.5,\n  onReset: noop,\n};\n\nZoomButtons.contextTypes = {\n  xScale: PropTypes.func.isRequired,\n  chartConfig: PropTypes.object.isRequired,\n  plotData: PropTypes.array.isRequired,\n  xAccessor: PropTypes.func.isRequired,\n  xAxisZoom: PropTypes.func.isRequired,\n};\n\nexport default ZoomButtons;\n"]}