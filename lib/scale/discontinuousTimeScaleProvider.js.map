{"version":3,"sources":["../../../src/lib/scale/discontinuousTimeScaleProvider.js"],"names":["discontinuousTimeScaleProviderBuilder","evaluateLevel","d","date","i","formatters","levelDefinition","map","eachLevel","idx","level","length","format","find","l","discontinuousIndexCalculator","windowSize","undefinedValue","initialIndex","row","getTime","startOf30Seconds","startOfMinute","startOf5Minutes","startOf15Minutes","startOf30Minutes","startOfHour","startOfEighthOfADay","startOfQuarterDay","startOfHalfDay","startOfDay","startOfWeek","startOfMonth","startOfQuarter","startOfYear","index","discontinuousIndexCalculatorLocalTime","accumulator","prevDate","nowDate","getSeconds","getMinutes","getHours","getDay","getMonth","getFullYear","console","log","doStuff","realDateAccessor","inputDateAccessor","data","dateAccessor","calculate","source","misc","each","Date","identity","indexAccessor","indexMutator","withIndex","currentFormatters","defaultFormatters","discontinuousTimeScaleProvider","response","inputIndex","xScale","mergedData","combine","finalData","xAccessor","displayXAccessor","x","arguments","utc","offsetInMillis","getTimezoneOffset","setLocale","locale","indexCalculator"],"mappings":"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","file":"discontinuousTimeScaleProvider.js","sourcesContent":["import { timeFormat, timeFormatDefaultLocale } from 'd3-time-format';\n// import { map as d3Map } from \"d3-collection\";\n\nimport financeDiscontinuousScale from './financeDiscontinuousScale';\nimport { slidingWindow, zipper, identity, isNotDefined } from '../utils';\nimport { defaultFormatters, levelDefinition } from './levels';\n\nfunction evaluateLevel(d, date, i, formatters) {\n  return levelDefinition\n    .map((eachLevel, idx) => {\n      return {\n        level: levelDefinition.length - idx - 1,\n        format: formatters[eachLevel(d, date, i)],\n      };\n    })\n    .find(l => !!l.format);\n}\n\nconst discontinuousIndexCalculator = slidingWindow()\n  .windowSize(2)\n  .undefinedValue((d, idx, { initialIndex, formatters }) => {\n    const i = initialIndex;\n    const row = {\n      date: d.getTime(),\n      startOf30Seconds: false,\n      startOfMinute: false,\n      startOf5Minutes: false,\n      startOf15Minutes: false,\n      startOf30Minutes: false,\n      startOfHour: false,\n      startOfEighthOfADay: false,\n      startOfQuarterDay: false,\n      startOfHalfDay: false,\n      startOfDay: true,\n      startOfWeek: false,\n      startOfMonth: false,\n      startOfQuarter: false,\n      startOfYear: false,\n    };\n    const level = evaluateLevel(row, d, i, formatters);\n    return { ...row, index: i, ...level };\n  });\n\nconst discontinuousIndexCalculatorLocalTime =\n  discontinuousIndexCalculator.accumulator(\n    ([prevDate, nowDate], i, idx, { initialIndex, formatters }) => {\n      const startOf30Seconds = nowDate.getSeconds() % 30 === 0;\n\n      const startOfMinute = nowDate.getMinutes() !== prevDate.getMinutes();\n      const startOf5Minutes =\n        startOfMinute && nowDate.getMinutes() % 5 <= prevDate.getMinutes() % 5;\n      const startOf15Minutes =\n        startOfMinute &&\n        nowDate.getMinutes() % 15 <= prevDate.getMinutes() % 15;\n      const startOf30Minutes =\n        startOfMinute &&\n        nowDate.getMinutes() % 30 <= prevDate.getMinutes() % 30;\n\n      const startOfHour = nowDate.getHours() !== prevDate.getHours();\n\n      const startOfEighthOfADay = startOfHour && nowDate.getHours() % 3 === 0;\n      const startOfQuarterDay = startOfHour && nowDate.getHours() % 6 === 0;\n      const startOfHalfDay = startOfHour && nowDate.getHours() % 12 === 0;\n\n      const startOfDay = nowDate.getDay() !== prevDate.getDay();\n      // According to ISO calendar\n      // Sunday = 0, Monday = 1, ... Saturday = 6\n      // day of week of today < day of week of yesterday then today is start of week\n      const startOfWeek = nowDate.getDay() < prevDate.getDay();\n      // month of today != month of yesterday then today is start of month\n      const startOfMonth = nowDate.getMonth() !== prevDate.getMonth();\n      // if start of month and month % 3 === 0 then it is start of quarter\n      const startOfQuarter =\n        startOfMonth && nowDate.getMonth() % 3 <= prevDate.getMonth() % 3;\n      // year of today != year of yesterday then today is start of year\n      const startOfYear = nowDate.getFullYear() !== prevDate.getFullYear();\n\n      const row = {\n        date: nowDate.getTime(),\n        startOf30Seconds,\n        startOfMinute,\n        startOf5Minutes,\n        startOf15Minutes,\n        startOf30Minutes,\n        startOfHour,\n        startOfEighthOfADay,\n        startOfQuarterDay,\n        startOfHalfDay,\n        startOfDay,\n        startOfWeek,\n        startOfMonth,\n        startOfQuarter,\n        startOfYear,\n      };\n      const level = evaluateLevel(row, nowDate, i, formatters);\n      if (level == null) {\n        console.log(row);\n      }\n      return { ...row, index: i + initialIndex, ...level };\n    }\n  );\n\nfunction doStuff(\n  realDateAccessor,\n  inputDateAccessor,\n  initialIndex,\n  formatters\n) {\n  return function (data) {\n    const dateAccessor = realDateAccessor(inputDateAccessor);\n    const calculate = discontinuousIndexCalculatorLocalTime\n      .source(dateAccessor)\n      .misc({ initialIndex, formatters });\n\n    const index = calculate(data).map(each => {\n      const { format } = each;\n      return {\n        // ...each,\n        index: each.index,\n        level: each.level,\n        date: new Date(each.date),\n        format: timeFormat(format),\n      };\n    });\n    /*\n\t\tvar map = d3Map();\n\t\tfor (var i = 0; i < data.length - 1; i++) {\n\n\t\t\tvar nextDate = dateAccessor(data[i + 1]);\n\t\t\tvar nowDate = dateAccessor(data[i]);\n\t\t\tvar diff = nextDate - nowDate;\n\n\t\t\tif (map.has(diff)) {\n\t\t\t\tvar count = parseInt(map.get(diff), 10) + 1;\n\t\t\t\tmap.set(diff, count);\n\t\t\t} else {\n\t\t\t\tmap.set(diff, 1);\n\t\t\t}\n\t\t}\n\n\t\tvar entries = map.entries().sort((a, b) => a.value < b.value);\n\n\t\t// For Renko/p&f\n\n\t\tvar interval = entries[0].value === 1\n\t\t\t? Math.round((dateAccessor(last(data)) - dateAccessor(head(data))) / data.length)\n\t\t\t: parseInt(entries[0].key, 10); */\n\n    // return { index, interval };\n    return { index };\n  };\n}\n\nexport function discontinuousTimeScaleProviderBuilder() {\n  let initialIndex = 0,\n    realDateAccessor = identity;\n  let inputDateAccessor = d => d.date,\n    indexAccessor = d => d.idx,\n    indexMutator = (d, idx) => ({ ...d, idx }),\n    withIndex;\n\n  let currentFormatters = defaultFormatters;\n\n  // eslint-disable-next-line prefer-const\n  let discontinuousTimeScaleProvider = function (data) {\n    /*\n\t\tconsole.warn(\"Are you sure you want to use a discontinuousTimeScale?\"\n\t\t\t+ \" Use this only if you have discontinuous data which\"\n\t\t\t+ \" needs to be displayed as continuous.\"\n\t\t\t+ \" If you have continuous data use a d3 scale like\"\n\t\t\t+ \" `d3.scaleTime`\"\n\t\t);\n\t\t*/\n\n    let index = withIndex;\n\n    if (isNotDefined(index)) {\n      const response = doStuff(\n        realDateAccessor,\n        inputDateAccessor,\n        initialIndex,\n        currentFormatters\n      )(data);\n\n      index = response.index;\n    }\n    // console.log(interval, entries[0].key);\n\n    const inputIndex = index;\n    const xScale = financeDiscontinuousScale(inputIndex);\n\n    const mergedData = zipper().combine(indexMutator);\n\n    const finalData = mergedData(data, inputIndex);\n\n    return {\n      data: finalData,\n      xScale,\n      xAccessor: d => d && indexAccessor(d).index,\n      displayXAccessor: realDateAccessor(inputDateAccessor),\n    };\n  };\n\n  discontinuousTimeScaleProvider.initialIndex = function (x) {\n    if (!arguments.length) {\n      return initialIndex;\n    }\n    initialIndex = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.inputDateAccessor = function (x) {\n    if (!arguments.length) {\n      return inputDateAccessor;\n    }\n    inputDateAccessor = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.indexAccessor = function (x) {\n    if (!arguments.length) {\n      return indexAccessor;\n    }\n    indexAccessor = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.indexMutator = function (x) {\n    if (!arguments.length) {\n      return indexMutator;\n    }\n    indexMutator = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.withIndex = function (x) {\n    if (!arguments.length) {\n      return withIndex;\n    }\n    withIndex = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.utc = function () {\n    realDateAccessor = dateAccessor => d => {\n      const date = dateAccessor(d);\n      // The getTimezoneOffset() method returns the time-zone offset from UTC, in minutes, for the current locale.\n      const offsetInMillis = date.getTimezoneOffset() * 60 * 1000;\n      return new Date(date.getTime() + offsetInMillis);\n    };\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.setLocale = function (\n    locale,\n    formatters = null\n  ) {\n    if (locale) {\n      timeFormatDefaultLocale(locale);\n    }\n    if (formatters) {\n      currentFormatters = formatters;\n    }\n    return discontinuousTimeScaleProvider;\n  };\n\n  discontinuousTimeScaleProvider.indexCalculator = function () {\n    return doStuff(\n      realDateAccessor,\n      inputDateAccessor,\n      initialIndex,\n      currentFormatters\n    );\n  };\n\n  return discontinuousTimeScaleProvider;\n}\n\n/* discontinuousTimeScaleProvider.utc = function(data,\n\t\tdateAccessor,\n\t\tindexAccessor,\n\t\tindexMutator) {\n\tvar utcDateAccessor = d => {\n\t\tvar date = dateAccessor(d);\n\t\t// The getTimezoneOffset() method returns the time-zone offset from UTC, in minutes, for the current locale.\n\t\tvar offsetInMillis = date.getTimezoneOffset() * 60 * 1000;\n\t\treturn new Date(date.getTime() + offsetInMillis);\n\t};\n\treturn discontinuousTimeScaleProvider(data, utcDateAccessor, indexAccessor, indexMutator);\n};*/\n\nexport default discontinuousTimeScaleProviderBuilder();\n"]}