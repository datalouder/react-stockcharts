{"version":3,"sources":["../../../../src/lib/interactive/components/ClickableCircle.js"],"names":["ClickableCircle","props","saveNode","bind","renderSVG","drawOnCanvas","isHover","node","moreProps","mouseXY","r","helper","x","y","mx","my","hover","ctx","stroke","strokeWidth","fill","fillOpacity","strokeOpacity","lineWidth","fillStyle","strokeStyle","beginPath","arc","Math","PI","interactiveCursorClass","show","onDragStart","onDrag","onDragComplete","getMouseCanvas","Component","xyProvider","cx","cy","xScale","yScale","chartConfig","propTypes","PropTypes","func","isRequired","number","string","className","bool","defaultProps","noop","onMove"],"mappings":"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","file":"ClickableCircle.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GenericChartComponent from '../../GenericChartComponent';\nimport { getMouseCanvas } from '../../GenericComponent';\n\nimport { isDefined, noop, hexToRGBA } from '../../utils';\n\nclass ClickableCircle extends Component {\n  constructor(props) {\n    super(props);\n    this.saveNode = this.saveNode.bind(this);\n    this.renderSVG = this.renderSVG.bind(this);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n    this.isHover = this.isHover.bind(this);\n  }\n  saveNode(node) {\n    this.node = node;\n  }\n  isHover(moreProps) {\n    const { mouseXY } = moreProps;\n    // const { r } = this.props;\n    const r = this.props.r + 7;\n    const [x, y] = helper(this.props, moreProps);\n\n    const [mx, my] = mouseXY;\n    const hover = x - r < mx && mx < x + r && y - r < my && my < y + r;\n\n    // console.log(\"hover->\", hover);\n    return hover;\n  }\n  drawOnCanvas(ctx, moreProps) {\n    const { stroke, strokeWidth, fill } = this.props;\n    const { fillOpacity, strokeOpacity } = this.props;\n    const { r } = this.props;\n\n    const [x, y] = helper(this.props, moreProps);\n\n    ctx.lineWidth = strokeWidth;\n    ctx.fillStyle = hexToRGBA(fill, fillOpacity);\n    ctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\n    ctx.beginPath();\n    ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.stroke();\n  }\n  renderSVG(moreProps) {\n    const { stroke, strokeWidth, fill } = this.props;\n    const { fillOpacity, strokeOpacity } = this.props;\n    const { r } = this.props;\n\n    const [x, y] = helper(this.props, moreProps);\n\n    return (\n      <circle\n        cx={x}\n        cy={y}\n        r={r}\n        strokeWidth={strokeWidth}\n        stroke={stroke}\n        strokeOpacity={strokeOpacity}\n        fill={fill}\n        fillOpacity={fillOpacity}\n      />\n    );\n  }\n  render() {\n    const { interactiveCursorClass } = this.props;\n    const { show } = this.props;\n    const { onDragStart, onDrag, onDragComplete } = this.props;\n\n    return show ? (\n      <GenericChartComponent\n        ref={this.saveNode}\n        interactiveCursorClass={interactiveCursorClass}\n        selected\n        isHover={this.isHover}\n        onDragStart={onDragStart}\n        onDrag={onDrag}\n        onDragComplete={onDragComplete}\n        svgDraw={this.renderSVG}\n        canvasDraw={this.drawOnCanvas}\n        canvasToDraw={getMouseCanvas}\n        drawOn={['pan', 'mousemove', 'drag']}\n      />\n    ) : null;\n  }\n}\n\nfunction helper(props, moreProps) {\n  const { xyProvider, cx, cy } = props;\n\n  if (isDefined(xyProvider)) {\n    return xyProvider(moreProps);\n  }\n\n  const {\n    xScale,\n    chartConfig: { yScale },\n  } = moreProps;\n\n  const x = xScale(cx);\n  const y = yScale(cy);\n  return [x, y];\n}\nClickableCircle.propTypes = {\n  xyProvider: PropTypes.func,\n\n  onDragStart: PropTypes.func.isRequired,\n  onDrag: PropTypes.func.isRequired,\n  onDragComplete: PropTypes.func.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n  stroke: PropTypes.string.isRequired,\n  fill: PropTypes.string.isRequired,\n  r: PropTypes.number.isRequired,\n\n  cx: PropTypes.number,\n  cy: PropTypes.number,\n\n  className: PropTypes.string.isRequired,\n  show: PropTypes.bool.isRequired,\n  strokeOpacity: PropTypes.number.isRequired,\n  fillOpacity: PropTypes.number.isRequired,\n  interactiveCursorClass: PropTypes.string,\n};\n\nClickableCircle.defaultProps = {\n  className: 'react-stockcharts-interactive-line-edge',\n  onDragStart: noop,\n  onDrag: noop,\n  onDragComplete: noop,\n  onMove: noop,\n  show: false,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n};\n\nexport default ClickableCircle;\n"]}