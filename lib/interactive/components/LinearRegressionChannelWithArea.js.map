{"version":3,"sources":["../../../../src/lib/interactive/components/LinearRegressionChannelWithArea.js"],"names":["edge1Provider","edge2Provider","LinearRegressionChannelWithArea","props","renderSVG","bind","drawOnCanvas","isHover","moreProps","tolerance","onHover","mouseXY","helper","x1","y1","x2","y2","dy","yDiffs","hovering","reduce","result","diff","ctx","stroke","strokeWidth","fillOpacity","strokeOpacity","fill","lineWidth","strokeStyle","fillStyle","beginPath","moveTo","lineTo","closePath","line","toString","selected","interactiveCursorClass","onUnHover","getMouseCanvas","Component","x1Value","x2Value","type","xScale","yScale","chartConfig","fullData","xAccessor","left","right","startIndex","Math","min","endIndex","max","array","slice","xs","map","d","valueOf","ys","close","n","length","combine","x","y","xys","xSquareds","pow","b","a","newy1","newy2","stdDev","propTypes","PropTypes","any","isRequired","oneOf","string","number","onDragStart","func","onDrag","onDragComplete","defaultClassName","bool","defaultProps","noop"],"mappings":";;;;;;;;;;QAwHgBA,a,GAAAA,a;QAOAC,a,GAAAA,a;;AA/HhB;;;;AACA;;;;AACA;;AACA;;AAEA;;;;AACA;;AACA;;AAEA;;;;;;;;;;IAQMC,+B;;;AACJ,2CAAYC,KAAZ,EAAmB;AAAA;;AAAA,kKACXA,KADW;;AAGjB,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,OAAjB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AACA,UAAKE,OAAL,GAAe,MAAKA,OAAL,CAAaF,IAAb,OAAf;AALiB;AAMlB;;;;4BACOG,S,EAAW;AAAA,mBACc,KAAKL,KADnB;AAAA,UACTM,SADS,UACTA,SADS;AAAA,UACEC,OADF,UACEA,OADF;;;AAGjB,UAAI,sBAAUA,OAAV,CAAJ,EAAwB;AAAA,YACdC,OADc,GACFH,SADE,CACdG,OADc;;AAAA,sBAGSC,OAAO,KAAKT,KAAZ,EAAmBK,SAAnB,CAHT;AAAA,YAGdK,EAHc,WAGdA,EAHc;AAAA,YAGVC,EAHU,WAGVA,EAHU;AAAA,YAGNC,EAHM,WAGNA,EAHM;AAAA,YAGFC,EAHE,WAGFA,EAHE;AAAA,YAGEC,EAHF,WAGEA,EAHF;;AAItB,YAAMC,SAAS,CAAC,CAACD,EAAF,EAAM,CAAN,EAASA,EAAT,CAAf;;AAEA,YAAME,WAAWD,OAAOE,MAAP,CACf,UAACC,MAAD,EAASC,IAAT;AAAA,iBACED,UACA,+BAAY,CAACR,EAAD,EAAKC,KAAKQ,IAAV,CAAZ,EAA6B,CAACP,EAAD,EAAKC,KAAKM,IAAV,CAA7B,EAA8CX,OAA9C,EAAuDF,SAAvD,CAFF;AAAA,SADe,EAIf,KAJe,CAAjB;AAMA,eAAOU,QAAP;AACD;AACD,aAAO,KAAP;AACD;;;iCACYI,G,EAAKf,S,EAAW;AAAA,oBAEzB,KAAKL,KAFoB;AAAA,UACnBqB,MADmB,WACnBA,MADmB;AAAA,UACXC,WADW,WACXA,WADW;AAAA,UACEC,WADF,WACEA,WADF;AAAA,UACeC,aADf,WACeA,aADf;AAAA,UAC8BC,IAD9B,WAC8BA,IAD9B;;AAAA,qBAGIhB,OAAO,KAAKT,KAAZ,EAAmBK,SAAnB,CAHJ;AAAA,UAGnBK,EAHmB,YAGnBA,EAHmB;AAAA,UAGfC,EAHe,YAGfA,EAHe;AAAA,UAGXC,EAHW,YAGXA,EAHW;AAAA,UAGPC,EAHO,YAGPA,EAHO;AAAA,UAGHC,EAHG,YAGHA,EAHG;;AAK3BM,UAAIM,SAAJ,GAAgBJ,WAAhB;AACAF,UAAIO,WAAJ,GAAkB,sBAAUN,MAAV,EAAkBG,aAAlB,CAAlB;AACAJ,UAAIQ,SAAJ,GAAgB,sBAAUH,IAAV,EAAgBF,WAAhB,CAAhB;;AAEAH,UAAIS,SAAJ;AACAT,UAAIU,MAAJ,CAAWpB,EAAX,EAAeC,KAAKG,EAApB;AACAM,UAAIW,MAAJ,CAAWnB,EAAX,EAAeC,KAAKC,EAApB;AACAM,UAAIC,MAAJ;;AAEAD,UAAIS,SAAJ;AACAT,UAAIU,MAAJ,CAAWlB,EAAX,EAAeC,KAAKC,EAApB;AACAM,UAAIW,MAAJ,CAAWrB,EAAX,EAAeC,KAAKG,EAApB;AACAM,UAAIC,MAAJ;;AAEAD,UAAIS,SAAJ;AACAT,UAAIU,MAAJ,CAAWpB,EAAX,EAAeC,KAAKG,EAApB;AACAM,UAAIW,MAAJ,CAAWnB,EAAX,EAAeC,KAAKC,EAApB;AACAM,UAAIW,MAAJ,CAAWnB,EAAX,EAAeC,KAAKC,EAApB;AACAM,UAAIW,MAAJ,CAAWrB,EAAX,EAAeC,KAAKG,EAApB;AACAM,UAAIY,SAAJ;AACAZ,UAAIK,IAAJ;;AAEAL,UAAIS,SAAJ;AACAT,UAAIU,MAAJ,CAAWlB,EAAX,EAAeC,EAAf;AACAO,UAAIW,MAAJ,CAAWrB,EAAX,EAAeC,EAAf;AACAS,UAAIC,MAAJ;AACD;;;8BACShB,S,EAAW;AAAA,oBAEjB,KAAKL,KAFY;AAAA,UACXqB,MADW,WACXA,MADW;AAAA,UACHC,WADG,WACHA,WADG;AAAA,UACUC,WADV,WACUA,WADV;AAAA,UACuBC,aADvB,WACuBA,aADvB;AAAA,UACsCC,IADtC,WACsCA,IADtC;;AAAA,qBAGYhB,OAAO,KAAKT,KAAZ,EAAmBK,SAAnB,CAHZ;AAAA,UAGXK,EAHW,YAGXA,EAHW;AAAA,UAGPC,EAHO,YAGPA,EAHO;AAAA,UAGHC,EAHG,YAGHA,EAHG;AAAA,UAGCC,EAHD,YAGCA,EAHD;AAAA,UAGKC,EAHL,YAGKA,EAHL;;AAInB,UAAMmB,OAAO;AACXX,gCADW;AAEXD,sBAFW;AAGXG;AAHW,OAAb;AAKA,UAAMJ,MAAM,mBAAZ;AACAA,UAAIU,MAAJ,CAAWpB,EAAX,EAAeC,KAAKG,EAApB;AACAM,UAAIW,MAAJ,CAAWnB,EAAX,EAAeC,KAAKC,EAApB;AACAM,UAAIW,MAAJ,CAAWnB,EAAX,EAAeC,KAAKC,EAApB;AACAM,UAAIW,MAAJ,CAAWrB,EAAX,EAAeC,KAAKG,EAApB;AACAM,UAAIY,SAAJ;AACA,aACE;AAAA;AAAA;AACE,2DAAUC,IAAV,IAAgB,IAAIvB,EAApB,EAAwB,IAAIC,KAAKG,EAAjC,EAAqC,IAAIF,EAAzC,EAA6C,IAAIC,KAAKC,EAAtD,IADF;AAEE,2DAAUmB,IAAV,IAAgB,IAAIvB,EAApB,EAAwB,IAAIC,KAAKG,EAAjC,EAAqC,IAAIF,EAAzC,EAA6C,IAAIC,KAAKC,EAAtD,IAFF;AAGE,gDAAM,GAAGM,IAAIc,QAAJ,EAAT,EAAyB,MAAMT,IAA/B,EAAqC,aAAaF,WAAlD,GAHF;AAIE,2DAAUU,IAAV,IAAgB,IAAIvB,EAApB,EAAwB,IAAIC,EAA5B,EAAgC,IAAIC,EAApC,EAAwC,IAAIC,EAA5C;AAJF,OADF;AAQD;;;6BACQ;AAAA,oBACsC,KAAKb,KAD3C;AAAA,UACCmC,QADD,WACCA,QADD;AAAA,UACWC,sBADX,WACWA,sBADX;AAAA,oBAEwB,KAAKpC,KAF7B;AAAA,UAECO,OAFD,WAECA,OAFD;AAAA,UAEU8B,SAFV,WAEUA,SAFV;;;AAIP,aACE,8BAAC,+BAAD;AACE,iBAAS,KAAKjC,OADhB;AAEE,iBAAS,KAAKH,SAFhB;AAGE,sBAAcqC,gCAHhB;AAIE,oBAAY,KAAKnC,YAJnB;AAKE,gCAAwBiC,sBAL1B;AAME,kBAAUD,QANZ;AAOE,iBAAS5B,OAPX;AAQE,mBAAW8B,SARb;AASE,gBAAQ,CAAC,WAAD,EAAc,YAAd,EAA4B,KAA5B,EAAmC,MAAnC;AATV,QADF;AAaD;;;;EApG2CE,gB;;AAuGvC,SAAS1C,aAAT,CAAuBG,KAAvB,EAA8B;AACnC,SAAO,UAAUK,SAAV,EAAqB;AAAA,mBACPI,OAAOT,KAAP,EAAcK,SAAd,CADO;AAAA,QAClBK,EADkB,YAClBA,EADkB;AAAA,QACdC,EADc,YACdA,EADc;;AAE1B,WAAO,CAACD,EAAD,EAAKC,EAAL,CAAP;AACD,GAHD;AAID;;AAEM,SAASb,aAAT,CAAuBE,KAAvB,EAA8B;AACnC,SAAO,UAAUK,SAAV,EAAqB;AAAA,mBACPI,OAAOT,KAAP,EAAcK,SAAd,CADO;AAAA,QAClBO,EADkB,YAClBA,EADkB;AAAA,QACdC,EADc,YACdA,EADc;;AAE1B,WAAO,CAACD,EAAD,EAAKC,EAAL,CAAP;AACD,GAHD;AAID;;AAED,SAASJ,MAAT,CAAgBT,KAAhB,EAAuBK,SAAvB,EAAkC;AAAA,MACxBmC,OADwB,GACGxC,KADH,CACxBwC,OADwB;AAAA,MACfC,OADe,GACGzC,KADH,CACfyC,OADe;AAAA,MACNC,IADM,GACG1C,KADH,CACN0C,IADM;AAAA,MAI9BC,MAJ8B,GAO5BtC,SAP4B,CAI9BsC,MAJ8B;AAAA,MAKfC,MALe,GAO5BvC,SAP4B,CAK9BwC,WAL8B,CAKfD,MALe;AAAA,MAM9BE,QAN8B,GAO5BzC,SAP4B,CAM9ByC,QAN8B;AAAA,MAQxBC,SARwB,GAQV1C,SARU,CAQxB0C,SARwB;;AAUhC;;;;;;;;AAVgC,8BAkBf,kCAAsBD,QAAtB,EAAgCN,OAAhC,EAAyCO,SAAzC,CAlBe;AAAA,MAkBxBC,IAlBwB,yBAkBxBA,IAlBwB;;AAAA,+BAmBd,kCAAsBF,QAAtB,EAAgCL,OAAhC,EAAyCM,SAAzC,CAnBc;AAAA,MAmBxBE,KAnBwB,0BAmBxBA,KAnBwB;;AAqBhC,MAAMC,aAAaC,KAAKC,GAAL,CAASJ,IAAT,EAAeC,KAAf,CAAnB;AACA,MAAMI,WAAWF,KAAKG,GAAL,CAASN,IAAT,EAAeC,KAAf,IAAwB,CAAzC;;AAEA,MAAMM,QAAQT,SAASU,KAAT,CAAeN,UAAf,EAA2BG,QAA3B,CAAd;;AAEA,MAAMI,KAAKF,MAAMG,GAAN,CAAU;AAAA,WAAKX,UAAUY,CAAV,EAAaC,OAAb,EAAL;AAAA,GAAV,CAAX;AACA,MAAMC,KAAKN,MAAMG,GAAN,CAAU;AAAA,WAAKC,EAAEG,KAAP;AAAA,GAAV,CAAX;AACA,MAAMC,IAAIR,MAAMS,MAAhB;;AAEA,MAAMC,UAAU,qBAASA,OAAT,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUD,IAAIC,CAAd;AAAA,GAAjB,CAAhB;;AAEA,MAAMC,MAAMH,QAAQR,EAAR,EAAYI,EAAZ,CAAZ;AACA,MAAMQ,YAAYZ,GAAGC,GAAH,CAAO;AAAA,WAAKP,KAAKmB,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAAL;AAAA,GAAP,CAAlB;;AAEA,MAAMK,IACJ,CAACR,IAAI,kBAAIK,GAAJ,CAAJ,GAAe,kBAAIX,EAAJ,IAAU,kBAAII,EAAJ,CAA1B,KACCE,IAAI,kBAAIM,SAAJ,CAAJ,GAAqBlB,KAAKmB,GAAL,CAAS,kBAAIb,EAAJ,CAAT,EAAkB,CAAlB,CADtB,CADF;AAGA,MAAMe,IAAI,CAAC,kBAAIX,EAAJ,IAAUU,IAAI,kBAAId,EAAJ,CAAf,IAA0BM,CAApC;;AAEA,MAAMU,QAAQD,IAAID,IAAI/B,OAAtB;AACA,MAAMkC,QAAQF,IAAID,IAAI9B,OAAtB;;AAEA,MAAM/B,KAAKiC,OAAOH,OAAP,CAAX;AACA,MAAM7B,KAAKiC,OAAO6B,KAAP,CAAX;AACA,MAAM7D,KAAK+B,OAAOF,OAAP,CAAX;AACA,MAAM5B,KAAK+B,OAAO8B,KAAP,CAAX;;AAEA,MAAMC,SAASjC,SAAS,IAAT,GAAgB,wBAAUa,KAAV,EAAiB;AAAA,WAAKI,EAAEG,KAAP;AAAA,GAAjB,CAAhB,GAAiD,CAAhE;;AAEA,MAAMhD,KAAK8B,OAAO6B,QAAQE,MAAf,IAAyBhE,EAApC;;AAEA,SAAO;AACLD,UADK;AAELC,UAFK;AAGLC,UAHK;AAILC,UAJK;AAKLC;AALK,GAAP;AAOD;;AAEDf,gCAAgC6E,SAAhC,GAA4C;AAC1CpC,WAASqC,oBAAUC,GAAV,CAAcC,UADmB;AAE1CtC,WAASoC,oBAAUC,GAAV,CAAcC,UAFmB;;AAI1CrC,QAAMmC,oBAAUG,KAAV,CAAgB,CACpB,IADoB,EACd;AACN,QAFoB,CAAhB,CAEI;AAFJ,IAGHD,UAPuC;;AAS1C3C,0BAAwByC,oBAAUI,MATQ;AAU1C5D,UAAQwD,oBAAUI,MAAV,CAAiBF,UAViB;AAW1CzD,eAAauD,oBAAUK,MAAV,CAAiBH,UAXY;AAY1CtD,QAAMoD,oBAAUI,MAAV,CAAiBF,UAZmB;AAa1CxD,eAAasD,oBAAUK,MAAV,CAAiBH,UAbY;AAc1CvD,iBAAeqD,oBAAUK,MAAV,CAAiBH,UAdU;;AAgB1CI,eAAaN,oBAAUO,IAAV,CAAeL,UAhBc;AAiB1CM,UAAQR,oBAAUO,IAAV,CAAeL,UAjBmB;AAkB1CO,kBAAgBT,oBAAUO,IAAV,CAAeL,UAlBW;;AAoB1CxE,WAASsE,oBAAUO,IApBuB;AAqB1C/C,aAAWwC,oBAAUO,IArBqB;;AAuB1CG,oBAAkBV,oBAAUI,MAvBc;;AAyB1C3E,aAAWuE,oBAAUK,MAAV,CAAiBH,UAzBc;AA0B1C5C,YAAU0C,oBAAUW,IAAV,CAAeT;AA1BiB,CAA5C;;AA6BAhF,gCAAgC0F,YAAhC,GAA+C;AAC7CN,eAAaO,WADgC;AAE7CL,UAAQK,WAFqC;AAG7CJ,kBAAgBI,WAH6B;;AAK7ChD,QAAM,IALuC,EAKjC;;AAEZpB,eAAa,CAPgC;AAQ7ChB,aAAW,CARkC;AAS7C6B,YAAU;AATmC,CAA/C;;kBAYepC,+B","file":"LinearRegressionChannelWithArea.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { sum, deviation } from 'd3-array';\nimport { path as d3Path } from 'd3-path';\n\nimport GenericChartComponent from '../../GenericChartComponent';\nimport { getMouseCanvas } from '../../GenericComponent';\nimport { isHovering2 } from './StraightLine';\n\nimport {\n  isDefined,\n  getClosestItemIndexes,\n  noop,\n  zipper,\n  hexToRGBA,\n} from '../../utils';\n\nclass LinearRegressionChannelWithArea extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderSVG = this.renderSVG.bind(this);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n    this.isHover = this.isHover.bind(this);\n  }\n  isHover(moreProps) {\n    const { tolerance, onHover } = this.props;\n\n    if (isDefined(onHover)) {\n      const { mouseXY } = moreProps;\n\n      const { x1, y1, x2, y2, dy } = helper(this.props, moreProps);\n      const yDiffs = [-dy, 0, dy];\n\n      const hovering = yDiffs.reduce(\n        (result, diff) =>\n          result ||\n          isHovering2([x1, y1 + diff], [x2, y2 + diff], mouseXY, tolerance),\n        false\n      );\n      return hovering;\n    }\n    return false;\n  }\n  drawOnCanvas(ctx, moreProps) {\n    const { stroke, strokeWidth, fillOpacity, strokeOpacity, fill } =\n      this.props;\n    const { x1, y1, x2, y2, dy } = helper(this.props, moreProps);\n\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n    ctx.fillStyle = hexToRGBA(fill, fillOpacity);\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1 - dy);\n    ctx.lineTo(x2, y2 - dy);\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.moveTo(x2, y2 + dy);\n    ctx.lineTo(x1, y1 + dy);\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1 - dy);\n    ctx.lineTo(x2, y2 - dy);\n    ctx.lineTo(x2, y2 + dy);\n    ctx.lineTo(x1, y1 + dy);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.moveTo(x2, y2);\n    ctx.lineTo(x1, y1);\n    ctx.stroke();\n  }\n  renderSVG(moreProps) {\n    const { stroke, strokeWidth, fillOpacity, strokeOpacity, fill } =\n      this.props;\n    const { x1, y1, x2, y2, dy } = helper(this.props, moreProps);\n    const line = {\n      strokeWidth,\n      stroke,\n      strokeOpacity,\n    };\n    const ctx = d3Path();\n    ctx.moveTo(x1, y1 - dy);\n    ctx.lineTo(x2, y2 - dy);\n    ctx.lineTo(x2, y2 + dy);\n    ctx.lineTo(x1, y1 + dy);\n    ctx.closePath();\n    return (\n      <g>\n        <line {...line} x1={x1} y1={y1 - dy} x2={x2} y2={y2 - dy} />\n        <line {...line} x1={x1} y1={y1 + dy} x2={x2} y2={y2 + dy} />\n        <path d={ctx.toString()} fill={fill} fillOpacity={fillOpacity} />\n        <line {...line} x1={x1} y1={y1} x2={x2} y2={y2} />\n      </g>\n    );\n  }\n  render() {\n    const { selected, interactiveCursorClass } = this.props;\n    const { onHover, onUnHover } = this.props;\n\n    return (\n      <GenericChartComponent\n        isHover={this.isHover}\n        svgDraw={this.renderSVG}\n        canvasToDraw={getMouseCanvas}\n        canvasDraw={this.drawOnCanvas}\n        interactiveCursorClass={interactiveCursorClass}\n        selected={selected}\n        onHover={onHover}\n        onUnHover={onUnHover}\n        drawOn={['mousemove', 'mouseleave', 'pan', 'drag']}\n      />\n    );\n  }\n}\n\nexport function edge1Provider(props) {\n  return function (moreProps) {\n    const { x1, y1 } = helper(props, moreProps);\n    return [x1, y1];\n  };\n}\n\nexport function edge2Provider(props) {\n  return function (moreProps) {\n    const { x2, y2 } = helper(props, moreProps);\n    return [x2, y2];\n  };\n}\n\nfunction helper(props, moreProps) {\n  const { x1Value, x2Value, type } = props;\n\n  const {\n    xScale,\n    chartConfig: { yScale },\n    fullData,\n  } = moreProps;\n  const { xAccessor } = moreProps;\n\n  /*\n\thttp://www.metastock.com/Customer/Resources/TAAZ/?p=65\n\ty = a + bx\n\tn = length of array\n\tb = (n * sum(x*y) - sum(xs) * sum(ys)) / (n * sum(xSquareds) - (sum(xs) ^ 2))\n\ta = (sum of closes)\n\t*/\n\n  const { left } = getClosestItemIndexes(fullData, x1Value, xAccessor);\n  const { right } = getClosestItemIndexes(fullData, x2Value, xAccessor);\n\n  const startIndex = Math.min(left, right);\n  const endIndex = Math.max(left, right) + 1;\n\n  const array = fullData.slice(startIndex, endIndex);\n\n  const xs = array.map(d => xAccessor(d).valueOf());\n  const ys = array.map(d => d.close);\n  const n = array.length;\n\n  const combine = zipper().combine((x, y) => x * y);\n\n  const xys = combine(xs, ys);\n  const xSquareds = xs.map(x => Math.pow(x, 2));\n\n  const b =\n    (n * sum(xys) - sum(xs) * sum(ys)) /\n    (n * sum(xSquareds) - Math.pow(sum(xs), 2));\n  const a = (sum(ys) - b * sum(xs)) / n;\n\n  const newy1 = a + b * x1Value;\n  const newy2 = a + b * x2Value;\n\n  const x1 = xScale(x1Value);\n  const y1 = yScale(newy1);\n  const x2 = xScale(x2Value);\n  const y2 = yScale(newy2);\n\n  const stdDev = type === 'SD' ? deviation(array, d => d.close) : 0;\n\n  const dy = yScale(newy1 - stdDev) - y1;\n\n  return {\n    x1,\n    y1,\n    x2,\n    y2,\n    dy,\n  };\n}\n\nLinearRegressionChannelWithArea.propTypes = {\n  x1Value: PropTypes.any.isRequired,\n  x2Value: PropTypes.any.isRequired,\n\n  type: PropTypes.oneOf([\n    'SD', // standard deviation channel\n    'Raff', // Raff Regression Channel\n  ]).isRequired,\n\n  interactiveCursorClass: PropTypes.string,\n  stroke: PropTypes.string.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n  fill: PropTypes.string.isRequired,\n  fillOpacity: PropTypes.number.isRequired,\n  strokeOpacity: PropTypes.number.isRequired,\n\n  onDragStart: PropTypes.func.isRequired,\n  onDrag: PropTypes.func.isRequired,\n  onDragComplete: PropTypes.func.isRequired,\n\n  onHover: PropTypes.func,\n  onUnHover: PropTypes.func,\n\n  defaultClassName: PropTypes.string,\n\n  tolerance: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n};\n\nLinearRegressionChannelWithArea.defaultProps = {\n  onDragStart: noop,\n  onDrag: noop,\n  onDragComplete: noop,\n\n  type: 'SD', // standard dev\n\n  strokeWidth: 1,\n  tolerance: 4,\n  selected: false,\n};\n\nexport default LinearRegressionChannelWithArea;\n"]}