{"version":3,"sources":["../../../../src/lib/interactive/components/InteractiveYCoordinate.js"],"names":["InteractiveYCoordinate","props","renderSVG","bind","drawOnCanvas","isHover","moreProps","onHover","values","helper","x1","x2","y","rect","mouseXY","mouseX","mouseY","x","width","height","Math","abs","ctx","bgFill","bgOpacity","textFill","fontFamily","fontSize","fontStyle","fontWeight","stroke","strokeWidth","strokeOpacity","strokeDasharray","text","textBox","edge","selected","hovering","strokeStyle","beginPath","lineWidth","textBaseline","textAlign","font","padding","left","measureText","right","closeIcon","setLineDash","moveTo","lineTo","fillStyle","fillRect","strokeRect","fillText","newEdge","opacity","yValue","displayFormat","yCoord","Error","interactiveCursorClass","onUnHover","onDragStart","onDrag","onDragComplete","getMouseCanvas","Component","chartConfig","yScale","round","propTypes","PropTypes","string","isRequired","number","oneOfType","object","func","defaultClassName","tolerance","bool","defaultProps","noop"],"mappings":"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","file":"InteractiveYCoordinate.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GenericChartComponent from '../../GenericChartComponent';\nimport { getMouseCanvas } from '../../GenericComponent';\nimport {\n  isDefined,\n  noop,\n  hexToRGBA,\n  getStrokeDasharrayCanvas,\n} from '../../utils';\nimport { drawOnCanvas } from '../../coordinates/EdgeCoordinateV3';\nimport { getYCoordinate } from '../../coordinates/MouseCoordinateY';\n\nclass InteractiveYCoordinate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderSVG = this.renderSVG.bind(this);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n    this.isHover = this.isHover.bind(this);\n  }\n  isHover(moreProps) {\n    const { onHover } = this.props;\n\n    if (isDefined(onHover)) {\n      const values = helper(this.props, moreProps);\n      if (values == null) return false;\n\n      const { x1, x2, y, rect } = values;\n      const {\n        mouseXY: [mouseX, mouseY],\n      } = moreProps;\n\n      if (\n        mouseX >= rect.x &&\n        mouseX <= rect.x + this.width &&\n        mouseY >= rect.y &&\n        mouseY <= rect.y + rect.height\n      ) {\n        return true;\n      }\n      if (x1 <= mouseX && x2 >= mouseX && Math.abs(mouseY - y) < 4) {\n        return true;\n      }\n    }\n    return false;\n  }\n  drawOnCanvas(ctx, moreProps) {\n    const {\n      bgFill,\n      bgOpacity,\n\n      textFill,\n      fontFamily,\n      fontSize,\n\n      fontStyle,\n      fontWeight,\n      stroke,\n      strokeWidth,\n      strokeOpacity,\n      strokeDasharray,\n      text,\n      textBox,\n      edge,\n    } = this.props;\n\n    const { selected, hovering } = this.props;\n\n    const values = helper(this.props, moreProps);\n    if (values == null) return;\n\n    const { x1, x2, y, rect } = values;\n\n    ctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\n    ctx.beginPath();\n    if (selected || hovering) {\n      ctx.lineWidth = strokeWidth + 1;\n    } else {\n      ctx.lineWidth = strokeWidth;\n    }\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = 'start';\n    ctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n\n    this.width =\n      textBox.padding.left +\n      ctx.measureText(text).width +\n      textBox.padding.right +\n      textBox.closeIcon.padding.left +\n      textBox.closeIcon.width +\n      textBox.closeIcon.padding.right;\n\n    ctx.setLineDash(getStrokeDasharrayCanvas(strokeDasharray));\n    ctx.moveTo(x1, y);\n    ctx.lineTo(rect.x, y);\n\n    ctx.moveTo(rect.x + this.width, y);\n    ctx.lineTo(x2, y);\n    ctx.stroke();\n\n    ctx.setLineDash([]);\n\n    ctx.fillStyle = hexToRGBA(bgFill, bgOpacity);\n\n    ctx.fillRect(rect.x, rect.y, this.width, rect.height);\n    ctx.strokeRect(rect.x, rect.y, this.width, rect.height);\n\n    ctx.fillStyle = textFill;\n\n    ctx.beginPath();\n    ctx.fillText(text, rect.x + 10, y);\n    const newEdge = {\n      ...edge,\n      textFill,\n      fontFamily,\n      fontSize,\n      opacity: bgOpacity,\n    };\n    const yValue = edge.displayFormat(this.props.yValue);\n    const yCoord = getYCoordinate(y, yValue, newEdge, moreProps);\n    drawOnCanvas(ctx, yCoord);\n  }\n  renderSVG() {\n    throw new Error('svg not implemented');\n  }\n  render() {\n    const { interactiveCursorClass } = this.props;\n    const { onHover, onUnHover } = this.props;\n    const { onDragStart, onDrag, onDragComplete } = this.props;\n\n    return (\n      <GenericChartComponent\n        clip={false}\n        xxxyyy\n        isHover={this.isHover}\n        svgDraw={this.renderSVG}\n        canvasToDraw={getMouseCanvas}\n        canvasDraw={this.drawOnCanvas}\n        interactiveCursorClass={interactiveCursorClass}\n        /* selected={selected} */\n        enableDragOnHover\n        onDragStart={onDragStart}\n        onDrag={onDrag}\n        onDragComplete={onDragComplete}\n        onHover={onHover}\n        onUnHover={onUnHover}\n        drawOn={['mousemove', 'mouseleave', 'pan', 'drag']}\n      />\n    );\n  }\n}\n\nfunction helper(props, moreProps) {\n  const { yValue, textBox } = props;\n\n  const {\n    chartConfig: { width, yScale, height },\n  } = moreProps;\n\n  const y = Math.round(yScale(yValue));\n\n  if (y >= 0 && y <= height) {\n    const rect = {\n      x: textBox.left,\n      y: y - textBox.height / 2,\n      height: textBox.height,\n    };\n    return {\n      x1: 0,\n      x2: width,\n      y,\n      rect,\n    };\n  }\n}\n\nInteractiveYCoordinate.propTypes = {\n  bgFill: PropTypes.string.isRequired,\n  bgOpacity: PropTypes.number.isRequired,\n\n  stroke: PropTypes.string.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n  strokeOpacity: PropTypes.number.isRequired,\n  strokeDasharray: PropTypes.string.isRequired,\n\n  textFill: PropTypes.string.isRequired,\n  fontFamily: PropTypes.string.isRequired,\n  fontSize: PropTypes.number.isRequired,\n  fontWeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    .isRequired,\n  fontStyle: PropTypes.string.isRequired,\n\n  text: PropTypes.string.isRequired,\n  edge: PropTypes.object.isRequired,\n  textBox: PropTypes.object.isRequired,\n  yValue: PropTypes.number.isRequired,\n\n  onDragStart: PropTypes.func.isRequired,\n  onDrag: PropTypes.func.isRequired,\n  onDragComplete: PropTypes.func.isRequired,\n  onHover: PropTypes.func,\n  onUnHover: PropTypes.func,\n\n  defaultClassName: PropTypes.string,\n  interactiveCursorClass: PropTypes.string,\n\n  tolerance: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  hovering: PropTypes.bool.isRequired,\n};\n\nInteractiveYCoordinate.defaultProps = {\n  onDragStart: noop,\n  onDrag: noop,\n  onDragComplete: noop,\n\n  fontWeight: 'normal', // standard dev\n\n  strokeWidth: 1,\n  tolerance: 4,\n  selected: false,\n  hovering: false,\n};\n\nexport default InteractiveYCoordinate;\n"]}