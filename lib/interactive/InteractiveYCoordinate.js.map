{"version":3,"sources":["../../../src/lib/interactive/InteractiveYCoordinate.js"],"names":["InteractiveYCoordinate","props","handleDrag","bind","handleDragComplete","handleDelete","terminate","saveNodeType","getSelectionState","nodes","state","index","yValue","setState","override","moreProps","yCoordinateList","newAlertList","map","each","idx","selected","draggedAlert","onDragComplete","xyValue","current","start","end","onDelete","id","Component","propTypes","onChoosePosition","PropTypes","func","isRequired","onSelect","defaultPriceCoordinate","shape","bgFill","string","bgOpacity","number","stroke","strokeDasharray","oneOf","strokeDashTypes","strokeOpacity","strokeWidth","textFill","fontFamily","fontWeight","fontStyle","fontSize","text","textBox","height","left","padding","right","closeIcon","width","edge","fill","fillOpacity","hoverText","object","array","enabled","bool","defaultProps","noop","orient","at","arrowWidth","dx","rectWidth","rectHeight","displayFormat","HoverTextNearMouse","enable","bgHeight","bgWidth","contextTypes","subscribe","unsubscribe","generateSubscriptionId","chartId","oneOfType"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;AACA;;AAEA;;AAMA;;;;AACA;;;;;;;;;;;;IAEMA,sB;;;AACJ,kCAAYC,KAAZ,EAAmB;AAAA;;AAAA,gJACXA,KADW;;AAGjB,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,OAAlB;AACA,UAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBD,IAAxB,OAA1B;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,OAApB;AACA,UAAKG,SAAL,GAAiBA,kBAAUH,IAAV,OAAjB;;AAEA,UAAKI,YAAL,GAAoBA,qBAAaJ,IAAb,OAApB;AACA,UAAKK,iBAAL,GACE,uCAA0B,iBAA1B,EAA6CL,IAA7C,OADF;;AAGA,UAAKM,KAAL,GAAa,EAAb;AACA,UAAKC,KAAL,GAAa,EAAb;AAbiB;AAclB;;;;+BACUC,K,EAAOC,M,EAAQ;AACxB,WAAKC,QAAL,CAAc;AACZC,kBAAU;AACRH,sBADQ;AAERC;AAFQ;AADE,OAAd;AAMD;;;uCACkBG,S,EAAW;AAAA;;AAAA,UACpBD,QADoB,GACP,KAAKJ,KADE,CACpBI,QADoB;;AAE5B,UAAI,sBAAUA,QAAV,CAAJ,EAAyB;AAAA,YACfE,eADe,GACK,KAAKf,KADV,CACfe,eADe;;AAEvB,YAAMC,eAAeD,gBAAgBE,GAAhB,CAAoB,UAACC,IAAD,EAAOC,GAAP,EAAe;AACtD,cAAMC,WAAWD,QAAQN,SAASH,KAAlC;AACA,iBAAOU,wBAEEF,IAFF;AAGDP,oBAAQE,SAASF,MAHhB;AAIDS;AAJC,4BAOEF,IAPF;AAQDE;AARC,YAAP;AAUD,SAZoB,CAArB;AAaA,YAAMC,eAAeL,aAAaH,SAASH,KAAtB,CAArB;AACA,aAAKE,QAAL,CACE;AACEC,oBAAU;AADZ,SADF,EAIE,YAAM;AACJ,iBAAKb,KAAL,CAAWsB,cAAX,CAA0BN,YAA1B,EAAwCF,SAAxC,EAAmDO,YAAnD;AACD,SANH;AAQD;AACF;;;mCACcE,O,EAAS;AAAA,UACdC,OADc,GACF,KAAKf,KADH,CACde,OADc;;;AAGtB,UAAI,sBAAUA,OAAV,KAAsB,sBAAUA,QAAQC,KAAlB,CAA1B,EAAoD;AAClD,aAAKb,QAAL,CAAc;AACZY,mBAAS;AACPC,mBAAOD,QAAQC,KADR;AAEPC,iBAAKH;AAFE;AADG,SAAd;AAMD;AACF;;;iCACYb,K,EAAOI,S,EAAW;AAAA,mBACS,KAAKd,KADd;AAAA,UACrB2B,QADqB,UACrBA,QADqB;AAAA,UACXZ,eADW,UACXA,eADW;;AAE7BY,eAASZ,gBAAgBL,KAAhB,CAAT,EAAiCI,SAAjC;AACD;;;6BACQ;AAAA;;AAAA,UACCC,eADD,GACqB,KAAKf,KAD1B,CACCe,eADD;AAAA,UAECF,QAFD,GAEc,KAAKJ,KAFnB,CAECI,QAFD;;AAGP,aACE;AAAA;AAAA;AACGE,wBAAgBE,GAAhB,CAAoB,UAACC,IAAD,EAAOC,GAAP,EAAe;AAClC,cAAMnB,QAAQkB,IAAd;AACA,iBACE,8BAAC,oCAAD;AACE,iBAAKA,KAAKU,EADZ;AAEE,iBAAK,OAAKtB,YAAL,CAAkBa,GAAlB,CAFP;AAGE,mBAAOA;AAHT,aAIMnB,KAJN;AAKE,sBAAUkB,KAAKE,QALjB;AAME,oBAAQ,kCACNP,QADM,EAENM,GAFM,EAGN,QAHM,EAIND,KAAKP,MAJC,CANV;AAYE,sBAAU,OAAKP,YAZjB;AAaE,oBAAQ,OAAKH,UAbf;AAcE,4BAAgB,OAAKE,kBAdvB;AAeE,mCAAsB;AAfxB,aADF;AAmBD,SArBA;AADH,OADF;AA0BD;;;;EAjGkC0B,gB;;AAoGrC9B,uBAAuB+B,SAAvB,GAAmC;AACjCC,oBAAkBC,oBAAUC,IAAV,CAAeC,UADA;AAEjCZ,kBAAgBU,oBAAUC,IAAV,CAAeC,UAFE;AAGjCC,YAAUH,oBAAUC,IAHa;AAIjCN,YAAUK,oBAAUC,IAJa;;AAMjCG,0BAAwBJ,oBAAUK,KAAV,CAAgB;AACtCC,YAAQN,oBAAUO,MAAV,CAAiBL,UADa;AAEtCM,eAAWR,oBAAUS,MAAV,CAAiBP,UAFU;;AAItCQ,YAAQV,oBAAUO,MAAV,CAAiBL,UAJa;AAKtCS,qBAAiBX,oBAAUY,KAAV,CAAgBC,sBAAhB,EAAiCX,UALZ;AAMtCY,mBAAed,oBAAUS,MAAV,CAAiBP,UANM;AAOtCa,iBAAaf,oBAAUS,MAAV,CAAiBP,UAPQ;;AAStCc,cAAUhB,oBAAUO,MAAV,CAAiBL,UATW;AAUtCe,gBAAYjB,oBAAUO,MAAV,CAAiBL,UAVS;AAWtCgB,gBAAYlB,oBAAUO,MAAV,CAAiBL,UAXS;AAYtCiB,eAAWnB,oBAAUO,MAAV,CAAiBL,UAZU;AAatCkB,cAAUpB,oBAAUS,MAAV,CAAiBP,UAbW;AActCmB,UAAMrB,oBAAUO,MAAV,CAAiBL,UAde;;AAgBtCoB,aAAStB,oBAAUK,KAAV,CAAgB;AACvBkB,cAAQvB,oBAAUS,MAAV,CAAiBP,UADF;AAEvBsB,YAAMxB,oBAAUS,MAAV,CAAiBP,UAFA;AAGvBuB,eAASzB,oBAAUK,KAAV,CAAgB;AACvBmB,cAAMxB,oBAAUS,MAAV,CAAiBP,UADA;AAEvBwB,eAAO1B,oBAAUS,MAAV,CAAiBP;AAFD,OAAhB,CAHc;AAOvByB,iBAAW3B,oBAAUK,KAAV,CAAgB;AACzBoB,iBAASzB,oBAAUK,KAAV,CAAgB;AACvBmB,gBAAMxB,oBAAUS,MAAV,CAAiBP,UADA;AAEvBwB,iBAAO1B,oBAAUS,MAAV,CAAiBP;AAFD,SAAhB,CADgB;AAKzB0B,eAAO5B,oBAAUS,MAAV,CAAiBP;AALC,OAAhB;AAPY,KAAhB,EAcNA,UA9BmC;AA+BtC2B,UAAM7B,oBAAUK,KAAV,CAAgB;AACpBK,cAAQV,oBAAUO,MAAV,CAAiBL,UADL;AAEpBY,qBAAed,oBAAUS,MAAV,CAAiBP,UAFZ;AAGpBa,mBAAaf,oBAAUS,MAAV,CAAiBP,UAHV;;AAKpB4B,YAAM9B,oBAAUO,MAAV,CAAiBL,UALH;AAMpB6B,mBAAa/B,oBAAUS,MAAV,CAAiBP;AANV,KAAhB;AA/BgC,GAAhB,EAuCrBA,UA7C8B;;AA+CjC8B,aAAWhC,oBAAUiC,MAAV,CAAiB/B,UA/CK;AAgDjCnB,mBAAiBiB,oBAAUkC,KAAV,CAAgBhC,UAhDA;AAiDjCiC,WAASnC,oBAAUoC,IAAV,CAAelC;AAjDS,CAAnC;;AAoDAnC,uBAAuBsE,YAAvB,GAAsC;AACpCtC,oBAAkBuC,WADkB;AAEpChD,kBAAgBgD,WAFoB;AAGpCnC,YAAUmC,WAH0B;AAIpC3C,YAAU2C,WAJ0B;;AAMpClC,0BAAwB;AACtBE,YAAQ,SADc;AAEtBE,eAAW,CAFW;;AAItBE,YAAQ,SAJc;AAKtBI,mBAAe,CALO;AAMtBH,qBAAiB,YANK;AAOtBI,iBAAa,CAPS;;AAStBC,cAAU,SATY;AAUtBC,gBAAY,8CAVU;AAWtBG,cAAU,EAXY;AAYtBD,eAAW,QAZW;AAatBD,gBAAY,QAbU;AActBG,UAAM,OAdgB;AAetBC,aAAS;AACPC,cAAQ,EADD;AAEPC,YAAM,EAFC;AAGPC,eAAS,EAAED,MAAM,EAAR,EAAYE,OAAO,CAAnB,EAHF;AAIPC,iBAAW;AACTF,iBAAS,EAAED,MAAM,CAAR,EAAWE,OAAO,CAAlB,EADA;AAETE,eAAO;AAFE;AAJJ,KAfa;AAwBtBC,UAAM;AACJnB,cAAQ,SADJ;AAEJI,qBAAe,CAFX;AAGJC,mBAAa,CAHT;;AAKJe,YAAM,SALF;AAMJC,mBAAa,CANT;AAOJQ,cAAQ,OAPJ;AAQJC,UAAI,OARA;AASJC,kBAAY,EATR;AAUJC,UAAI,CAVA;AAWJC,iBAAW,EAXP;AAYJC,kBAAY,EAZR;AAaJC,qBAAe,sBAAO,KAAP;AAbX;AAxBgB,GANY;AA8CpCb,0BACKc,6BAAmBT,YADxB;AAEEU,YAAQ,IAFV;AAGEC,cAAU,EAHZ;AAIEC,aAAS,GAJX;AAKE5B,UAAM;AALR,IA9CoC;AAqDpCtC,mBAAiB;AArDmB,CAAtC;;AAwDAhB,uBAAuBmF,YAAvB,GAAsC;AACpCC,aAAWnD,oBAAUC,IAAV,CAAeC,UADU;AAEpCkD,eAAapD,oBAAUC,IAAV,CAAeC,UAFQ;AAGpCmD,0BAAwBrD,oBAAUC,IAAV,CAAeC,UAHH;AAIpCoD,WAAStD,oBAAUuD,SAAV,CAAoB,CAACvD,oBAAUS,MAAX,EAAmBT,oBAAUO,MAA7B,CAApB,EAA0DL;AAJ/B,CAAtC;;kBAOenC,sB","file":"InteractiveYCoordinate.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { format } from 'd3-format';\nimport { isDefined, noop, strokeDashTypes } from '../utils';\n\nimport {\n  getValueFromOverride,\n  terminate,\n  saveNodeType,\n  isHoverForInteractiveType,\n} from './utils';\nimport EachInteractiveYCoordinate from './wrapper/EachInteractiveYCoordinate';\nimport HoverTextNearMouse from './components/HoverTextNearMouse';\n\nclass InteractiveYCoordinate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrag = this.handleDrag.bind(this);\n    this.handleDragComplete = this.handleDragComplete.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.terminate = terminate.bind(this);\n\n    this.saveNodeType = saveNodeType.bind(this);\n    this.getSelectionState =\n      isHoverForInteractiveType('yCoordinateList').bind(this);\n\n    this.nodes = [];\n    this.state = {};\n  }\n  handleDrag(index, yValue) {\n    this.setState({\n      override: {\n        index,\n        yValue,\n      },\n    });\n  }\n  handleDragComplete(moreProps) {\n    const { override } = this.state;\n    if (isDefined(override)) {\n      const { yCoordinateList } = this.props;\n      const newAlertList = yCoordinateList.map((each, idx) => {\n        const selected = idx === override.index;\n        return selected\n          ? {\n              ...each,\n              yValue: override.yValue,\n              selected,\n            }\n          : {\n              ...each,\n              selected,\n            };\n      });\n      const draggedAlert = newAlertList[override.index];\n      this.setState(\n        {\n          override: null,\n        },\n        () => {\n          this.props.onDragComplete(newAlertList, moreProps, draggedAlert);\n        }\n      );\n    }\n  }\n  handleDrawLine(xyValue) {\n    const { current } = this.state;\n\n    if (isDefined(current) && isDefined(current.start)) {\n      this.setState({\n        current: {\n          start: current.start,\n          end: xyValue,\n        },\n      });\n    }\n  }\n  handleDelete(index, moreProps) {\n    const { onDelete, yCoordinateList } = this.props;\n    onDelete(yCoordinateList[index], moreProps);\n  }\n  render() {\n    const { yCoordinateList } = this.props;\n    const { override } = this.state;\n    return (\n      <g>\n        {yCoordinateList.map((each, idx) => {\n          const props = each;\n          return (\n            <EachInteractiveYCoordinate\n              key={each.id}\n              ref={this.saveNodeType(idx)}\n              index={idx}\n              {...props}\n              selected={each.selected}\n              yValue={getValueFromOverride(\n                override,\n                idx,\n                'yValue',\n                each.yValue\n              )}\n              onDelete={this.handleDelete}\n              onDrag={this.handleDrag}\n              onDragComplete={this.handleDragComplete}\n              edgeInteractiveCursor=\"react-stockcharts-move-cursor\"\n            />\n          );\n        })}\n      </g>\n    );\n  }\n}\n\nInteractiveYCoordinate.propTypes = {\n  onChoosePosition: PropTypes.func.isRequired,\n  onDragComplete: PropTypes.func.isRequired,\n  onSelect: PropTypes.func,\n  onDelete: PropTypes.func,\n\n  defaultPriceCoordinate: PropTypes.shape({\n    bgFill: PropTypes.string.isRequired,\n    bgOpacity: PropTypes.number.isRequired,\n\n    stroke: PropTypes.string.isRequired,\n    strokeDasharray: PropTypes.oneOf(strokeDashTypes).isRequired,\n    strokeOpacity: PropTypes.number.isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n\n    textFill: PropTypes.string.isRequired,\n    fontFamily: PropTypes.string.isRequired,\n    fontWeight: PropTypes.string.isRequired,\n    fontStyle: PropTypes.string.isRequired,\n    fontSize: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n\n    textBox: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      left: PropTypes.number.isRequired,\n      padding: PropTypes.shape({\n        left: PropTypes.number.isRequired,\n        right: PropTypes.number.isRequired,\n      }),\n      closeIcon: PropTypes.shape({\n        padding: PropTypes.shape({\n          left: PropTypes.number.isRequired,\n          right: PropTypes.number.isRequired,\n        }),\n        width: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    edge: PropTypes.shape({\n      stroke: PropTypes.string.isRequired,\n      strokeOpacity: PropTypes.number.isRequired,\n      strokeWidth: PropTypes.number.isRequired,\n\n      fill: PropTypes.string.isRequired,\n      fillOpacity: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n\n  hoverText: PropTypes.object.isRequired,\n  yCoordinateList: PropTypes.array.isRequired,\n  enabled: PropTypes.bool.isRequired,\n};\n\nInteractiveYCoordinate.defaultProps = {\n  onChoosePosition: noop,\n  onDragComplete: noop,\n  onSelect: noop,\n  onDelete: noop,\n\n  defaultPriceCoordinate: {\n    bgFill: '#FFFFFF',\n    bgOpacity: 1,\n\n    stroke: '#6574CD',\n    strokeOpacity: 1,\n    strokeDasharray: 'ShortDash2',\n    strokeWidth: 1,\n\n    textFill: '#6574CD',\n    fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    text: 'Alert',\n    textBox: {\n      height: 24,\n      left: 20,\n      padding: { left: 10, right: 5 },\n      closeIcon: {\n        padding: { left: 5, right: 8 },\n        width: 8,\n      },\n    },\n    edge: {\n      stroke: '#6574CD',\n      strokeOpacity: 1,\n      strokeWidth: 1,\n\n      fill: '#FFFFFF',\n      fillOpacity: 1,\n      orient: 'right',\n      at: 'right',\n      arrowWidth: 10,\n      dx: 0,\n      rectWidth: 50,\n      rectHeight: 20,\n      displayFormat: format('.2f'),\n    },\n  },\n  hoverText: {\n    ...HoverTextNearMouse.defaultProps,\n    enable: true,\n    bgHeight: 18,\n    bgWidth: 175,\n    text: 'Click and drag the edge circles',\n  },\n  yCoordinateList: [],\n};\n\nInteractiveYCoordinate.contextTypes = {\n  subscribe: PropTypes.func.isRequired,\n  unsubscribe: PropTypes.func.isRequired,\n  generateSubscriptionId: PropTypes.func.isRequired,\n  chartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n};\n\nexport default InteractiveYCoordinate;\n"]}