{"version":3,"sources":["../../../../src/lib/interactive/wrapper/EachLinearRegressionChannel.js"],"names":["getNewXY","EachLinearRegressionChannel","props","handleEdge1Drag","bind","handleEdge2Drag","handleHover","isHover","saveNodeType","nodes","state","hover","moreProps","index","onDrag","snapTo","x2Value","x1Value","hovering","setState","appearance","edgeInteractiveCursor","hoverText","interactive","selected","onDragComplete","stroke","strokeWidth","strokeOpacity","fill","fillOpacity","r","edgeStrokeWidth","edgeFill","edgeStroke","hoverHandler","onHover","onUnHover","hoverTextEnabled","enable","hoverTextSelected","selectedText","hoverTextUnselected","text","restHoverTextProps","Component","xScale","xAccessor","plotData","mouseXY","currentItem","x","y","propTypes","defaultClassName","PropTypes","string","any","isRequired","number","shape","func","bool","object","defaultProps","noop","HoverTextNearMouse","bgHeight","bgWidth"],"mappings":"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","file":"EachLinearRegressionChannel.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { noop } from '../../utils';\nimport { getCurrentItem } from '../../utils/ChartDataUtil';\nimport { saveNodeType, isHover } from '../utils';\n\nimport HoverTextNearMouse from '../components/HoverTextNearMouse';\nimport {\n  default as LinearRegressionChannelWithArea,\n  edge1Provider,\n  edge2Provider,\n} from '../components/LinearRegressionChannelWithArea';\n\nimport ClickableCircle from '../components/ClickableCircle';\n\nclass EachLinearRegressionChannel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEdge1Drag = this.handleEdge1Drag.bind(this);\n    this.handleEdge2Drag = this.handleEdge2Drag.bind(this);\n\n    this.handleHover = this.handleHover.bind(this);\n\n    this.isHover = isHover.bind(this);\n    this.saveNodeType = saveNodeType.bind(this);\n    this.nodes = {};\n\n    this.state = {\n      hover: false,\n    };\n  }\n  handleEdge1Drag(moreProps) {\n    const { index, onDrag, snapTo } = this.props;\n    const { x2Value } = this.props;\n\n    const [x1Value] = getNewXY(moreProps, snapTo);\n\n    onDrag(index, {\n      x1Value,\n      x2Value,\n    });\n  }\n  handleEdge2Drag(moreProps) {\n    const { index, onDrag, snapTo } = this.props;\n    const { x1Value } = this.props;\n\n    const [x2Value] = getNewXY(moreProps, snapTo);\n\n    onDrag(index, {\n      x1Value,\n      x2Value,\n    });\n  }\n  handleHover(moreProps) {\n    if (this.state.hover !== moreProps.hovering) {\n      this.setState({\n        hover: moreProps.hovering,\n      });\n    }\n  }\n  render() {\n    const {\n      x1Value,\n      x2Value,\n      appearance,\n      edgeInteractiveCursor,\n      hoverText,\n      interactive,\n      selected,\n      onDragComplete,\n    } = this.props;\n    const {\n      stroke,\n      strokeWidth,\n      strokeOpacity,\n      fill,\n      fillOpacity,\n      r,\n      edgeStrokeWidth,\n      edgeFill,\n      edgeStroke,\n    } = appearance;\n    const { hover } = this.state;\n\n    const hoverHandler = interactive\n      ? { onHover: this.handleHover, onUnHover: this.handleHover }\n      : {};\n\n    const {\n      enable: hoverTextEnabled,\n      selectedText: hoverTextSelected,\n      text: hoverTextUnselected,\n      ...restHoverTextProps\n    } = hoverText;\n\n    return (\n      <g>\n        <LinearRegressionChannelWithArea\n          ref={this.saveNodeType('area')}\n          selected={selected || hover}\n          {...hoverHandler}\n          x1Value={x1Value}\n          x2Value={x2Value}\n          fill={fill}\n          stroke={stroke}\n          strokeWidth={hover || selected ? strokeWidth + 1 : strokeWidth}\n          strokeOpacity={strokeOpacity}\n          fillOpacity={fillOpacity}\n        />\n        <ClickableCircle\n          ref={this.saveNodeType('edge1')}\n          show={selected || hover}\n          xyProvider={edge1Provider(this.props)}\n          r={r}\n          fill={edgeFill}\n          stroke={edgeStroke}\n          strokeWidth={edgeStrokeWidth}\n          interactiveCursorClass={edgeInteractiveCursor}\n          onDrag={this.handleEdge1Drag}\n          onDragComplete={onDragComplete}\n        />\n        <ClickableCircle\n          ref={this.saveNodeType('edge2')}\n          show={selected || hover}\n          xyProvider={edge2Provider(this.props)}\n          r={r}\n          fill={edgeFill}\n          stroke={edgeStroke}\n          strokeWidth={edgeStrokeWidth}\n          interactiveCursorClass={edgeInteractiveCursor}\n          onDrag={this.handleEdge2Drag}\n          onDragComplete={onDragComplete}\n        />\n        <HoverTextNearMouse\n          show={hoverTextEnabled && hover}\n          {...restHoverTextProps}\n          text={selected ? hoverTextSelected : hoverTextUnselected}\n        />\n      </g>\n    );\n  }\n}\n\nexport function getNewXY(moreProps, snapTo) {\n  const { xScale, xAccessor, plotData, mouseXY } = moreProps;\n\n  const currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n  const x = xAccessor(currentItem);\n  const y = snapTo(currentItem);\n\n  return [x, y];\n}\n\nEachLinearRegressionChannel.propTypes = {\n  defaultClassName: PropTypes.string,\n\n  x1Value: PropTypes.any.isRequired,\n  x2Value: PropTypes.any.isRequired,\n\n  index: PropTypes.number,\n\n  appearance: PropTypes.shape({\n    stroke: PropTypes.string.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    strokeOpacity: PropTypes.number.isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    fill: PropTypes.string.isRequired,\n    edgeStrokeWidth: PropTypes.number.isRequired,\n    edgeStroke: PropTypes.string.isRequired,\n    edgeFill: PropTypes.string.isRequired,\n    r: PropTypes.number.isRequired,\n  }).isRequired,\n\n  edgeInteractiveCursor: PropTypes.string,\n  onDrag: PropTypes.func.isRequired,\n  onDragComplete: PropTypes.func.isRequired,\n  snapTo: PropTypes.func,\n  interactive: PropTypes.bool.isRequired,\n  selected: PropTypes.bool.isRequired,\n\n  hoverText: PropTypes.object.isRequired,\n};\n\nEachLinearRegressionChannel.defaultProps = {\n  onDrag: noop,\n  onDragComplete: noop,\n\n  appearance: {\n    stroke: '#000000',\n    fillOpacity: 0.7,\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    fill: '#8AAFE2',\n    edgeStrokeWidth: 2,\n    edgeStroke: '#000000',\n    edgeFill: '#FFFFFF',\n    r: 5,\n  },\n  interactive: true,\n  selected: false,\n  hoverText: {\n    ...HoverTextNearMouse.defaultProps,\n    enable: true,\n    bgHeight: 18,\n    bgWidth: 175,\n    text: 'Click and drag the edge circles',\n  },\n};\n\nexport default EachLinearRegressionChannel;\n"]}