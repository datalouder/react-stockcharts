{"version":3,"sources":["../../../../src/lib/interactive/wrapper/EachText.js"],"names":["EachText","props","handleHover","bind","handleDragStart","handleDrag","isHover","saveNodeType","nodes","state","hover","moreProps","position","mouseXY","yScale","chartConfig","xScale","mouseX","mouseY","textCX","textCY","dx","dy","dragStartPosition","index","onDrag","xAccessor","plotData","xValue","invert","xyValue","hovering","setState","bgFill","bgOpacity","bgStroke","bgStrokeWidth","textFill","fontFamily","fontSize","fontWeight","fontStyle","text","hoverText","selected","onDragComplete","hoverHandler","onHover","onUnHover","hoverTextEnabled","enable","hoverTextSelected","selectedText","hoverTextUnselected","restHoverTextProps","Component","propTypes","PropTypes","number","array","isRequired","string","bool","func","object","defaultProps","noop","fill","HoverTextNearMouse","bgHeight","bgWidth"],"mappings":"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","file":"EachText.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { noop } from '../../utils';\nimport { saveNodeType, isHover } from '../utils';\nimport { getXValue } from '../../utils/ChartDataUtil';\n\nimport HoverTextNearMouse from '../components/HoverTextNearMouse';\nimport InteractiveText from '../components/InteractiveText';\n\nclass EachText extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleHover = this.handleHover.bind(this);\n\n    this.handleDragStart = this.handleDragStart.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n\n    this.isHover = isHover.bind(this);\n    this.saveNodeType = saveNodeType.bind(this);\n    this.nodes = {};\n\n    this.state = {\n      hover: false,\n    };\n  }\n  handleDragStart(moreProps) {\n    const { position } = this.props;\n    const { mouseXY } = moreProps;\n    const {\n      chartConfig: { yScale },\n      xScale,\n    } = moreProps;\n    const [mouseX, mouseY] = mouseXY;\n\n    const [textCX, textCY] = position;\n    const dx = mouseX - xScale(textCX);\n    const dy = mouseY - yScale(textCY);\n\n    this.dragStartPosition = {\n      position,\n      dx,\n      dy,\n    };\n  }\n  handleDrag(moreProps) {\n    const { index, onDrag } = this.props;\n    const {\n      mouseXY: [, mouseY],\n      chartConfig: { yScale },\n      xAccessor,\n      mouseXY,\n      plotData,\n      xScale,\n    } = moreProps;\n\n    const { dx, dy } = this.dragStartPosition;\n    const xValue = xScale.invert(\n      xScale(getXValue(xScale, xAccessor, mouseXY, plotData)) - dx\n    );\n    // xScale.invert(xScale(xAccessor(currentItem)) - dx);\n    const xyValue = [xValue, yScale.invert(mouseY - dy)];\n\n    onDrag(index, xyValue);\n  }\n  handleHover(moreProps) {\n    if (this.state.hover !== moreProps.hovering) {\n      this.setState({\n        hover: moreProps.hovering,\n      });\n    }\n  }\n  render() {\n    const {\n      position,\n      bgFill,\n      bgOpacity,\n      bgStroke,\n      bgStrokeWidth,\n      textFill,\n      fontFamily,\n      fontSize,\n      fontWeight,\n      fontStyle,\n      text,\n      hoverText,\n      selected,\n      onDragComplete,\n    } = this.props;\n    const { hover } = this.state;\n\n    const hoverHandler = {\n      onHover: this.handleHover,\n      onUnHover: this.handleHover,\n    };\n\n    const {\n      enable: hoverTextEnabled,\n      selectedText: hoverTextSelected,\n      text: hoverTextUnselected,\n      ...restHoverTextProps\n    } = hoverText;\n\n    return (\n      <g>\n        <InteractiveText\n          ref={this.saveNodeType('text')}\n          selected={selected || hover}\n          interactiveCursorClass=\"react-stockcharts-move-cursor\"\n          {...hoverHandler}\n          onDragStart={this.handleDragStart}\n          onDrag={this.handleDrag}\n          onDragComplete={onDragComplete}\n          position={position}\n          bgFill={bgFill}\n          bgOpacity={bgOpacity}\n          bgStroke={bgStroke || textFill}\n          bgStrokeWidth={bgStrokeWidth}\n          textFill={textFill}\n          fontFamily={fontFamily}\n          fontStyle={fontStyle}\n          fontWeight={fontWeight}\n          fontSize={fontSize}\n          text={text}\n        />\n        <HoverTextNearMouse\n          show={hoverTextEnabled && hover}\n          {...restHoverTextProps}\n          text={selected ? hoverTextSelected : hoverTextUnselected}\n        />\n      </g>\n    );\n  }\n}\n/*\nexport function getNewXY(moreProps, snapTo) {\n\tconst { xScale, xAccessor, plotData, mouseXY } = moreProps;\n\n\tconst currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n\tconst x = xAccessor(currentItem);\n\tconst y = snapTo(currentItem);\n\n\treturn [x, y];\n}\n */\nEachText.propTypes = {\n  index: PropTypes.number,\n\n  position: PropTypes.array.isRequired,\n  bgFill: PropTypes.string.isRequired,\n  bgOpacity: PropTypes.number.isRequired,\n  bgStrokeWidth: PropTypes.number.isRequired,\n  bgStroke: PropTypes.string,\n  textFill: PropTypes.string.isRequired,\n\n  fontWeight: PropTypes.string.isRequired,\n  fontFamily: PropTypes.string.isRequired,\n  fontStyle: PropTypes.string.isRequired,\n  fontSize: PropTypes.number.isRequired,\n\n  text: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n\n  onDrag: PropTypes.func.isRequired,\n  onDragComplete: PropTypes.func.isRequired,\n\n  hoverText: PropTypes.object.isRequired,\n};\n\nEachText.defaultProps = {\n  onDrag: noop,\n  onDragComplete: noop,\n  bgOpacity: 1,\n  bgStrokeWidth: 1,\n  selected: false,\n  fill: '#8AAFE2',\n  hoverText: {\n    ...HoverTextNearMouse.defaultProps,\n    enable: true,\n    bgHeight: 'auto',\n    bgWidth: 'auto',\n    text: 'Click to select object',\n  },\n};\n\nexport default EachText;\n"]}