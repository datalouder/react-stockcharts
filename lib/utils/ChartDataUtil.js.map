{"version":3,"sources":["../../../src/lib/utils/ChartDataUtil.js"],"names":["getChartOrigin","getDimensions","getNewChartConfig","getCurrentCharts","getChartConfigWithUpdatedYScales","getCurrentItem","getXValue","origin","contextWidth","contextHeight","originCoordinates","chartProps","width","height","chartHeight","availableHeight","values","func","obj","d","isArraySize2AndNumber","yExtentsProp","Array","isArray","length","a","b","innerDimension","children","existingChartConfig","React","Children","map","each","type","toString","Chart","defaultProps","props","id","padding","yExtents","yScaleProp","yScale","flipYScale","yExtentsCalculator","copy","yPan","yPanEnabled","functor","undefined","prevChartConfig","originalYExtentsProp","domain","filter","chartConfig","mouseXY","currentCharts","top","eachConfig","bottom","config","setRange","scale","rangeRoundPoints","invert","isNaN","Error","rangeRound","range","yDomainFromYExtents","plotData","yValues","eachExtent","allYValues","realYDomain","xDomain","dy","chartsToPan","xAccessor","displayXAccessor","fullData","yDomains","yDomainDY","prevYDomain","combine","another","indexOf","newYScale","updatedChartConfig","xScale","xValue","item","idx","x","Math","abs","reduce","value","round"],"mappings":"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","file":"ChartDataUtil.js","sourcesContent":["import React from 'react';\nimport { extent } from 'd3-array';\nimport { set } from 'd3-collection';\nimport flattenDeep from 'lodash.flattendeep';\n\nimport Chart from '../Chart';\n\nimport {\n  last,\n  isObject,\n  getClosestItem,\n  zipper,\n  isDefined,\n  isNotDefined,\n  functor,\n  mapObject,\n  find,\n  shallowEqual,\n} from './index';\n\nexport function getChartOrigin(origin, contextWidth, contextHeight) {\n  const originCoordinates =\n    typeof origin === 'function' ? origin(contextWidth, contextHeight) : origin;\n  return originCoordinates;\n}\n\nexport function getDimensions({ width, height }, chartProps) {\n  const chartHeight = chartProps.height || height;\n\n  return {\n    availableHeight: height,\n    width,\n    height: chartHeight,\n  };\n}\n\nfunction values(func) {\n  return d => {\n    const obj = func(d);\n    if (isObject(obj)) {\n      return mapObject(obj);\n    }\n    return obj;\n  };\n}\n\nfunction isArraySize2AndNumber(yExtentsProp) {\n  if (Array.isArray(yExtentsProp) && yExtentsProp.length === 2) {\n    const [a, b] = yExtentsProp;\n    return typeof a == 'number' && typeof b == 'number';\n  }\n  return false;\n}\n\nexport function getNewChartConfig(\n  innerDimension,\n  children,\n  existingChartConfig = []\n) {\n  return React.Children.map(children, each => {\n    if (each && each.type.toString() === Chart.toString()) {\n      const chartProps = {\n        ...Chart.defaultProps,\n        ...each.props,\n      };\n      const {\n        id,\n        origin,\n        padding,\n        yExtents: yExtentsProp,\n        yScale: yScaleProp,\n        flipYScale,\n        yExtentsCalculator,\n      } = chartProps;\n\n      const yScale = yScaleProp.copy();\n      const { width, height, availableHeight } = getDimensions(\n        innerDimension,\n        chartProps\n      );\n\n      const { yPan } = chartProps;\n      let { yPanEnabled } = chartProps;\n      // var { yMousePointerRectWidth: rectWidth, yMousePointerRectHeight: rectHeight, yMousePointerArrowWidth: arrowWidth } = each.props;\n      // var mouseCoordinates = { at, yDisplayFormat, rectHeight, rectWidth, arrowWidth };\n      const yExtents = isDefined(yExtentsProp)\n        ? (Array.isArray(yExtentsProp) ? yExtentsProp : [yExtentsProp]).map(\n            functor\n          )\n        : undefined;\n\n      const prevChartConfig = find(existingChartConfig, d => d.id === id);\n\n      if (isArraySize2AndNumber(yExtentsProp)) {\n        if (\n          isDefined(prevChartConfig) &&\n          prevChartConfig.yPan &&\n          prevChartConfig.yPanEnabled &&\n          yPan &&\n          yPanEnabled &&\n          shallowEqual(prevChartConfig.originalYExtentsProp, yExtentsProp)\n        ) {\n          // console.log(prevChartConfig.originalYExtentsProp, yExtentsProp)\n          // console.log(prevChartConfig.yScale.domain())\n          yScale.domain(prevChartConfig.yScale.domain());\n        } else {\n          const [a, b] = yExtentsProp;\n          yScale.domain([a, b]);\n        }\n      } else if (isDefined(prevChartConfig) && prevChartConfig.yPanEnabled) {\n        if (isArraySize2AndNumber(prevChartConfig.originalYExtentsProp)) {\n          // do nothing\n        } else {\n          yScale.domain(prevChartConfig.yScale.domain());\n          yPanEnabled = true;\n        }\n      }\n\n      return {\n        id,\n        origin: functor(origin)(width, availableHeight),\n        padding,\n        originalYExtentsProp: yExtentsProp,\n        yExtents,\n        yExtentsCalculator,\n        flipYScale,\n        // yScale: setRange(yScale.copy(), height, padding, flipYScale),\n        yScale: yScale,\n        yPan,\n        yPanEnabled,\n        // mouseCoordinates,\n        width,\n        height,\n      };\n    }\n    return undefined;\n  }).filter(each => isDefined(each));\n}\nexport function getCurrentCharts(chartConfig, mouseXY) {\n  const currentCharts = chartConfig\n    .filter(eachConfig => {\n      const top = eachConfig.origin[1];\n      const bottom = top + eachConfig.height;\n      return mouseXY[1] > top && mouseXY[1] < bottom;\n    })\n    .map(config => config.id);\n\n  return currentCharts;\n}\n\nfunction setRange(scale, height, padding, flipYScale) {\n  if (scale.rangeRoundPoints || isNotDefined(scale.invert)) {\n    if (isNaN(padding))\n      throw new Error('padding has to be a number for ordinal scale');\n    if (scale.rangeRoundPoints)\n      scale.rangeRoundPoints(flipYScale ? [0, height] : [height, 0], padding);\n    if (scale.rangeRound)\n      scale.range(flipYScale ? [0, height] : [height, 0]).padding(padding);\n  } else {\n    const { top, bottom } = isNaN(padding)\n      ? padding\n      : { top: padding, bottom: padding };\n\n    scale.range(flipYScale ? [top, height - bottom] : [height - bottom, top]);\n  }\n  return scale;\n}\n\nfunction yDomainFromYExtents(yExtents, yScale, plotData) {\n  const yValues = yExtents.map(eachExtent => plotData.map(values(eachExtent)));\n\n  const allYValues = flattenDeep(yValues);\n  // console.log(allYValues)\n  const realYDomain = yScale.invert\n    ? extent(allYValues)\n    : set(allYValues).values();\n\n  return realYDomain;\n}\n\nexport function getChartConfigWithUpdatedYScales(\n  chartConfig,\n  { plotData, xAccessor, displayXAccessor, fullData },\n  xDomain,\n  dy,\n  chartsToPan\n) {\n  const yDomains = chartConfig.map(\n    ({ yExtentsCalculator, yExtents, yScale }) => {\n      const realYDomain = isDefined(yExtentsCalculator)\n        ? yExtentsCalculator({\n            plotData,\n            xDomain,\n            xAccessor,\n            displayXAccessor,\n            fullData,\n          })\n        : yDomainFromYExtents(yExtents, yScale, plotData);\n\n      // console.log(\"yScale.domain() ->\", yScale.domain())\n\n      const yDomainDY = isDefined(dy)\n        ? yScale\n            .range()\n            .map(each => each - dy)\n            .map(yScale.invert)\n        : yScale.domain();\n      return {\n        realYDomain,\n        yDomainDY,\n        prevYDomain: yScale.domain(),\n      };\n    }\n  );\n\n  const combine = zipper().combine(\n    (config, { realYDomain, yDomainDY, prevYDomain }) => {\n      const {\n        id,\n        padding,\n        height,\n        yScale,\n        yPan,\n        flipYScale,\n        yPanEnabled = false,\n      } = config;\n\n      const another = isDefined(chartsToPan)\n        ? chartsToPan.indexOf(id) > -1\n        : true;\n      const domain =\n        yPan && yPanEnabled ? (another ? yDomainDY : prevYDomain) : realYDomain;\n\n      // console.log(id, yPan, yPanEnabled, another);\n      // console.log(domain, realYDomain, prevYDomain);\n      const newYScale = setRange(\n        yScale.copy().domain(domain),\n        height,\n        padding,\n        flipYScale\n      );\n      return {\n        ...config,\n        yScale: newYScale,\n        realYDomain: realYDomain,\n      };\n      // return { ...config, yScale: yScale.copy().domain(domain).range([height - padding, padding]) };\n    }\n  );\n\n  const updatedChartConfig = combine(chartConfig, yDomains);\n  // console.error(yDomains, dy, chartsToPan, updatedChartConfig.map(d => d.yScale.domain()));\n  // console.log(updatedChartConfig.map(d => ({ id: d.id, domain: d.yScale.domain() })))\n\n  return updatedChartConfig;\n}\n\nexport function getCurrentItem(xScale, xAccessor, mouseXY, plotData) {\n  let xValue, item;\n  if (xScale.invert) {\n    xValue = xScale.invert(mouseXY[0]);\n    item = getClosestItem(plotData, xValue, xAccessor);\n  } else {\n    const d = xScale\n      .range()\n      .map((d, idx) => ({ x: Math.abs(d - mouseXY[0]), idx }))\n      .reduce((a, b) => (a.x < b.x ? a : b));\n    item = isDefined(d) ? plotData[d.idx] : plotData[0];\n    // console.log(d, item);\n  }\n  return item;\n}\n\nexport function getXValue(xScale, xAccessor, mouseXY, plotData) {\n  let xValue, item;\n  if (xScale.invert) {\n    xValue = xScale.invert(mouseXY[0]);\n    if (xValue > xAccessor(last(plotData)) && xScale.value) {\n      return Math.round(xValue);\n    } else {\n      item = getClosestItem(plotData, xValue, xAccessor);\n    }\n  } else {\n    const d = xScale\n      .range()\n      .map((d, idx) => ({ x: Math.abs(d - mouseXY[0]), idx }))\n      .reduce((a, b) => (a.x < b.x ? a : b));\n    item = isDefined(d) ? plotData[d.idx] : plotData[0];\n    // console.log(d, item);\n  }\n  return xAccessor(item);\n}\n"]}