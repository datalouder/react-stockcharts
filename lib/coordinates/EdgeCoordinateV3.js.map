{"version":3,"sources":["../../../src/lib/coordinates/EdgeCoordinateV3.js"],"names":["renderSVG","drawOnCanvas","props","className","edge","helper","line","coordinateBase","coordinate","opacity","stroke","strokeDasharray","x1","y1","x2","y2","rectWidth","rectHeight","arrowWidth","path","orient","edgeXRect","edgeYRect","strokeOpacity","strokeWidth","fill","edgeXText","edgeYText","textAnchor","fontFamily","fontSize","textFill","displayCoordinate","show","type","edgeAt","hideLine","lineStrokeDasharray","lineStroke","lineOpacity","rectRadius","dx","dy","undefined","ctx","font","textBaseline","width","Math","round","measureText","dashArray","split","map","d","setLineDash","strokeStyle","lineWidth","beginPath","moveTo","lineTo","fillStyle","x","y","halfHeight","closePath","roundRect","rect","textAlign","fillText","height","radius","quadraticCurveTo"],"mappings":"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","file":"EdgeCoordinateV3.js","sourcesContent":["import React from 'react';\n\nimport { hexToRGBA, isDefined, getStrokeDasharray } from '../utils';\n\n/* eslint-disable react/prop-types */\nexport function renderSVG(props) {\n  const { className } = props;\n\n  const edge = helper(props);\n  if (edge === null) return null;\n  let line, coordinateBase, coordinate;\n\n  if (isDefined(edge.line)) {\n    line = (\n      <line\n        className=\"react-stockcharts-cross-hair\"\n        strokeOpacity={edge.line.opacity}\n        stroke={edge.line.stroke}\n        strokeDasharray={getStrokeDasharray(edge.line.strokeDasharray)}\n        x1={edge.line.x1}\n        y1={edge.line.y1}\n        x2={edge.line.x2}\n        y2={edge.line.y2}\n      />\n    );\n  }\n  if (isDefined(edge.coordinateBase)) {\n    const { rectWidth, rectHeight, arrowWidth } = edge.coordinateBase;\n\n    const path =\n      edge.orient === 'left'\n        ? `M0,0L0,${rectHeight}L${rectWidth},${rectHeight}L${\n            rectWidth + arrowWidth\n          },10L${rectWidth},0L0,0L0,0`\n        : `M0,${arrowWidth}L${arrowWidth},${rectHeight}L${\n            rectWidth + arrowWidth\n          },${rectHeight}L${\n            rectWidth + arrowWidth\n          },0L${arrowWidth},0L0,${arrowWidth}`;\n\n    coordinateBase =\n      edge.orient === 'left' || edge.orient === 'right' ? (\n        <g\n          key={1}\n          transform={`translate(${edge.coordinateBase.edgeXRect},${edge.coordinateBase.edgeYRect})`}\n        >\n          <path\n            d={path}\n            className=\"react-stockchart-text-background\"\n            height={rectHeight}\n            width={rectWidth}\n            stroke={edge.coordinateBase.stroke}\n            strokeLinejoin=\"miter\"\n            strokeOpacity={edge.coordinateBase.strokeOpacity}\n            strokeWidth={edge.coordinateBase.strokeWidth}\n            fill={edge.coordinateBase.fill}\n            fillOpacity={edge.coordinateBase.opacity}\n          />\n        </g>\n      ) : (\n        <rect\n          key={1}\n          className=\"react-stockchart-text-background\"\n          x={edge.coordinateBase.edgeXRect}\n          y={edge.coordinateBase.edgeYRect}\n          height={rectHeight}\n          width={rectWidth}\n          fill={edge.coordinateBase.fill}\n          opacity={edge.coordinateBase.opacity}\n        />\n      );\n\n    coordinate = (\n      <text\n        key={2}\n        x={edge.coordinate.edgeXText}\n        y={edge.coordinate.edgeYText}\n        textAnchor={edge.coordinate.textAnchor}\n        fontFamily={edge.coordinate.fontFamily}\n        fontSize={edge.coordinate.fontSize}\n        dy=\".32em\"\n        fill={edge.coordinate.textFill}\n      >\n        {edge.coordinate.displayCoordinate}\n      </text>\n    );\n  }\n  return (\n    <g className={className}>\n      {line}\n      {coordinateBase}\n      {coordinate}\n    </g>\n  );\n}\n/* eslint-enable react/prop-types */\n\nfunction helper(props) {\n  const {\n    coordinate: displayCoordinate,\n    show,\n    type,\n    orient,\n    edgeAt,\n    hideLine,\n    lineStrokeDasharray,\n  } = props;\n  const {\n    fill,\n    opacity,\n    fontFamily,\n    fontSize,\n    textFill,\n    lineStroke,\n    lineOpacity,\n  } = props;\n  const { stroke, strokeOpacity, strokeWidth } = props;\n  const { arrowWidth, rectWidth, rectHeight, rectRadius } = props;\n  const { x1, y1, x2, y2, dx } = props;\n\n  if (!show) return null;\n\n  let coordinateBase, coordinate;\n  if (isDefined(displayCoordinate)) {\n    const textAnchor = 'middle'; // TODO: Below it is necessary to implement logic for the possibility of alignment from the right or from the left.\n\n    let edgeXRect, edgeYRect, edgeXText, edgeYText;\n\n    if (type === 'horizontal') {\n      edgeXRect =\n        dx + (orient === 'right' ? edgeAt + 1 : edgeAt - rectWidth - 1);\n      edgeYRect = y1 - rectHeight / 2 - strokeWidth;\n      edgeXText =\n        dx +\n        (orient === 'right' ? edgeAt + rectWidth / 2 : edgeAt - rectWidth / 2);\n      edgeYText = y1;\n    } else {\n      const dy = orient === 'bottom' ? strokeWidth - 1 : -strokeWidth + 1;\n      edgeXRect = x1 - rectWidth / 2;\n      edgeYRect = (orient === 'bottom' ? edgeAt : edgeAt - rectHeight) + dy;\n      edgeXText = x1;\n      edgeYText =\n        (orient === 'bottom'\n          ? edgeAt + rectHeight / 2\n          : edgeAt - rectHeight / 2) + dy;\n    }\n\n    coordinateBase = {\n      edgeXRect,\n      edgeYRect,\n      rectHeight: rectHeight + strokeWidth,\n      rectWidth,\n      rectRadius,\n      fill,\n      opacity,\n      arrowWidth,\n      stroke,\n      strokeOpacity,\n      strokeWidth,\n    };\n    coordinate = {\n      edgeXText,\n      edgeYText,\n      textAnchor,\n      fontFamily,\n      fontSize,\n      textFill,\n      displayCoordinate,\n    };\n  }\n\n  const line = hideLine\n    ? undefined\n    : {\n        opacity: lineOpacity,\n        stroke: lineStroke,\n        strokeDasharray: lineStrokeDasharray,\n        x1,\n        y1,\n        x2,\n        y2,\n      };\n\n  return {\n    coordinateBase,\n    coordinate,\n    line,\n    orient,\n  };\n}\n\nexport function drawOnCanvas(ctx, props) {\n  const { fontSize, fontFamily } = props;\n\n  ctx.font = `${fontSize}px ${fontFamily}`;\n  ctx.textBaseline = 'middle';\n  const width = Math.round(ctx.measureText(props.coordinate).width + 10);\n\n  const edge = helper({ ...props, rectWidth: width });\n\n  if (edge === null) return;\n\n  if (isDefined(edge.line)) {\n    const dashArray = getStrokeDasharray(edge.line.strokeDasharray)\n      .split(',')\n      .map(d => +d);\n    ctx.setLineDash(dashArray);\n    ctx.strokeStyle = hexToRGBA(edge.line.stroke, edge.line.opacity);\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(edge.line.x1, edge.line.y1);\n    ctx.lineTo(edge.line.x2, edge.line.y2);\n    ctx.stroke();\n  }\n\n  ctx.setLineDash([]);\n  if (isDefined(edge.coordinateBase)) {\n    const { rectWidth, rectHeight, rectRadius, arrowWidth } =\n      edge.coordinateBase;\n\n    ctx.fillStyle = hexToRGBA(\n      edge.coordinateBase.fill,\n      edge.coordinateBase.opacity\n    );\n    if (isDefined(edge.coordinateBase.stroke)) {\n      ctx.strokeStyle = hexToRGBA(\n        edge.coordinateBase.stroke,\n        edge.coordinateBase.strokeOpacity\n      );\n      ctx.lineWidth = edge.coordinateBase.strokeWidth;\n    }\n\n    let x = edge.coordinateBase.edgeXRect;\n    const y = edge.coordinateBase.edgeYRect;\n    const halfHeight = rectHeight / 2;\n\n    ctx.beginPath();\n    if (edge.orient === 'right') {\n      x -= arrowWidth;\n      ctx.moveTo(x, y + halfHeight);\n      ctx.lineTo(x + arrowWidth, y);\n      ctx.lineTo(x + rectWidth + arrowWidth, y);\n      ctx.lineTo(x + rectWidth + arrowWidth, y + rectHeight);\n      ctx.lineTo(x + arrowWidth, y + rectHeight);\n      ctx.closePath();\n    } else if (edge.orient === 'left') {\n      // x += arrowWidth;\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + rectWidth, y);\n      ctx.lineTo(x + rectWidth + arrowWidth, y + halfHeight);\n      ctx.lineTo(x + rectWidth, y + rectHeight);\n      ctx.lineTo(x, y + rectHeight);\n      ctx.closePath();\n    } else {\n      // console.error(x, y, rectWidth, rectHeight)\n      if (rectRadius) {\n        roundRect(ctx, x, y, rectWidth, rectHeight, 3);\n      } else {\n        ctx.rect(x, y, rectWidth, rectHeight);\n      }\n    }\n    ctx.fill();\n\n    if (isDefined(edge.coordinateBase.stroke)) {\n      ctx.stroke();\n    }\n\n    ctx.fillStyle = edge.coordinate.textFill;\n    ctx.textAlign =\n      edge.coordinate.textAnchor === 'middle'\n        ? 'center'\n        : edge.coordinate.textAnchor;\n    ctx.fillText(\n      edge.coordinate.displayCoordinate,\n      edge.coordinate.edgeXText,\n      edge.coordinate.edgeYText\n    );\n  }\n}\n\nfunction roundRect(ctx, x, y, width, height, radius) {\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.lineTo(x + width - radius, y);\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n  ctx.lineTo(x + width, y + height - radius);\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n  ctx.lineTo(x + radius, y + height);\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n  ctx.lineTo(x, y + radius);\n  ctx.quadraticCurveTo(x, y, x + radius, y);\n  ctx.closePath();\n}\n\n// export default EdgeCoordinate;\n"]}