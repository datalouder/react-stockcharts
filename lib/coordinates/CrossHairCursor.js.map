{"version":3,"sources":["../../../src/lib/coordinates/CrossHairCursor.js"],"names":["CrossHairCursor","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","lines","helper","context","margin","ratio","originX","left","originY","top","save","setTransform","scale","translate","forEach","dashArray","line","strokeDasharray","split","map","d","strokeStyle","stroke","opacity","setLineDash","beginPath","moveTo","x1","y1","lineTo","x2","y2","restore","className","idx","rest","getMouseCanvas","Component","propTypes","PropTypes","string","oneOf","strokeDashTypes","contextTypes","object","isRequired","number","customX","xScale","xAccessor","currentItem","mouseXY","snapX","x","Math","round","defaultProps","show","height","width","line1","line2"],"mappings":"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","file":"CrossHairCursor.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport GenericComponent, { getMouseCanvas } from '../GenericComponent';\n\nimport {\n  hexToRGBA,\n  isDefined,\n  isNotDefined,\n  strokeDashTypes,\n  getStrokeDasharray,\n} from '../utils';\n\nclass CrossHairCursor extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n  }\n  drawOnCanvas(ctx, moreProps) {\n    const lines = helper(this.props, moreProps);\n\n    if (isDefined(lines)) {\n      const { margin, ratio } = this.context;\n      const originX = 0.5 * ratio + margin.left;\n      const originY = 0.5 * ratio + margin.top;\n\n      ctx.save();\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.scale(ratio, ratio);\n\n      ctx.translate(originX, originY);\n\n      lines.forEach(line => {\n        const dashArray = getStrokeDasharray(line.strokeDasharray)\n          .split(',')\n          .map(d => +d);\n\n        ctx.strokeStyle = hexToRGBA(line.stroke, line.opacity);\n        ctx.setLineDash(dashArray);\n        ctx.beginPath();\n        ctx.moveTo(line.x1, line.y1);\n        ctx.lineTo(line.x2, line.y2);\n        ctx.stroke();\n      });\n\n      ctx.restore();\n    }\n  }\n  renderSVG(moreProps) {\n    const { className } = this.props;\n    const lines = helper(this.props, moreProps);\n\n    if (isNotDefined(lines)) return null;\n\n    return (\n      <g className={`react-stockcharts-crosshair ${className}`}>\n        {lines.map(({ strokeDasharray, ...rest }, idx) => (\n          <line\n            key={idx}\n            strokeDasharray={getStrokeDasharray(strokeDasharray)}\n            {...rest}\n          />\n        ))}\n      </g>\n    );\n  }\n  render() {\n    return (\n      <GenericComponent\n        svgDraw={this.renderSVG}\n        clip={false}\n        canvasDraw={this.drawOnCanvas}\n        canvasToDraw={getMouseCanvas}\n        drawOn={['mousemove', 'pan', 'drag']}\n      />\n    );\n  }\n}\n\nCrossHairCursor.propTypes = {\n  className: PropTypes.string,\n  strokeDasharray: PropTypes.oneOf(strokeDashTypes),\n};\n\nCrossHairCursor.contextTypes = {\n  margin: PropTypes.object.isRequired,\n  ratio: PropTypes.number.isRequired,\n  // xScale for getting update event upon pan end, this is needed to get past the PureComponent shouldComponentUpdate\n  // xScale: PropTypes.func.isRequired,\n};\n\nfunction customX(props, moreProps) {\n  const { xScale, xAccessor, currentItem, mouseXY } = moreProps;\n  const { snapX } = props;\n  const x = snapX ? Math.round(xScale(xAccessor(currentItem))) : mouseXY[0];\n  return x;\n}\n\nCrossHairCursor.defaultProps = {\n  stroke: '#000000',\n  opacity: 0.3,\n  strokeDasharray: 'ShortDash',\n  snapX: true,\n  customX,\n};\n\nfunction helper(props, moreProps) {\n  const { mouseXY, currentItem, show, height, width } = moreProps;\n\n  const { customX, stroke, opacity, strokeDasharray } = props;\n\n  if (!show || isNotDefined(currentItem)) return null;\n\n  const line1 = {\n    x1: 0,\n    x2: width,\n    y1: mouseXY[1],\n    y2: mouseXY[1],\n    stroke,\n    strokeDasharray,\n    opacity,\n  };\n  const x = customX(props, moreProps);\n\n  const line2 = {\n    x1: x,\n    x2: x,\n    y1: 0,\n    y2: height,\n    stroke,\n    strokeDasharray,\n    opacity,\n  };\n  return [line1, line2];\n}\n\nexport default CrossHairCursor;\n"]}