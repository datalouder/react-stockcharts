{"version":3,"sources":["../../../src/lib/series/StraightLine.js"],"names":["StraightLine","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","type","stroke","strokeWidth","opacity","strokeDasharray","yValue","xValue","xScale","chartConfig","yScale","width","height","beginPath","strokeStyle","lineWidth","getLineCoordinates","x1","y1","x2","y2","setLineDash","split","moveTo","lineTo","getAxisCanvas","className","lineCoordinates","Component","Math","round","propTypes","PropTypes","string","oneOf","number","strokeDashTypes","isRequired","propName","Error","defaultProps"],"mappings":"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","file":"StraightLine.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  hexToRGBA,\n  isDefined,\n  isNotDefined,\n  strokeDashTypes,\n  getStrokeDasharray,\n} from '../utils';\n\nimport GenericChartComponent from '../GenericChartComponent';\nimport { getAxisCanvas } from '../GenericComponent';\n\nclass StraightLine extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n  }\n  drawOnCanvas(ctx, moreProps) {\n    const { type, stroke, strokeWidth, opacity, strokeDasharray } = this.props;\n    const { yValue, xValue } = this.props;\n    const { xScale } = moreProps;\n    const {\n      chartConfig: { yScale, width, height },\n    } = moreProps;\n\n    ctx.beginPath();\n\n    ctx.strokeStyle = hexToRGBA(stroke, opacity);\n    ctx.lineWidth = strokeWidth;\n\n    const { x1, y1, x2, y2 } = getLineCoordinates(\n      type,\n      xScale,\n      yScale,\n      xValue,\n      yValue,\n      width,\n      height\n    );\n\n    ctx.setLineDash(getStrokeDasharray(strokeDasharray).split(','));\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n  }\n  render() {\n    return (\n      <GenericChartComponent\n        svgDraw={this.renderSVG}\n        canvasDraw={this.drawOnCanvas}\n        canvasToDraw={getAxisCanvas}\n        drawOn={['pan']}\n      />\n    );\n  }\n  renderSVG(moreProps) {\n    const { width, height } = moreProps;\n    const {\n      xScale,\n      chartConfig: { yScale },\n    } = moreProps;\n\n    const { className } = this.props;\n    const { type, stroke, strokeWidth, opacity, strokeDasharray } = this.props;\n    const { yValue, xValue } = this.props;\n\n    const lineCoordinates = getLineCoordinates(\n      type,\n      xScale,\n      yScale,\n      xValue,\n      yValue,\n      width,\n      height\n    );\n\n    return (\n      <line\n        className={className}\n        strokeDasharray={getStrokeDasharray(strokeDasharray)}\n        stroke={stroke}\n        strokeWidth={strokeWidth}\n        strokeOpacity={opacity}\n        {...lineCoordinates}\n      />\n    );\n  }\n}\n\nfunction getLineCoordinates(\n  type,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  width,\n  height\n) {\n  return type === 'horizontal'\n    ? {\n        x1: 0,\n        y1: Math.round(yScale(yValue)),\n        x2: width,\n        y2: Math.round(yScale(yValue)),\n      }\n    : {\n        x1: Math.round(xScale(xValue)),\n        y1: 0,\n        x2: Math.round(xScale(xValue)),\n        y2: height,\n      };\n}\n\nStraightLine.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.oneOf(['vertical', 'horizontal']),\n  stroke: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  strokeDasharray: PropTypes.oneOf(strokeDashTypes),\n  opacity: PropTypes.number.isRequired,\n  yValue: function (props, propName /* , componentName */) {\n    if (props.type === 'vertical' && isDefined(props[propName]))\n      return new Error(\n        'Do not define `yValue` when type is `vertical`, define the `xValue` prop'\n      );\n    if (props.type === 'horizontal' && isNotDefined(props[propName]))\n      return new Error('when type = `horizontal` `yValue` is required');\n    // if (isDefined(props[propName]) && typeof props[propName] !== \"number\") return new Error(\"prop `yValue` accepts a number\");\n  },\n  xValue: function (props, propName /* , componentName */) {\n    if (props.type === 'horizontal' && isDefined(props[propName]))\n      return new Error(\n        'Do not define `xValue` when type is `horizontal`, define the `yValue` prop'\n      );\n    if (props.type === 'vertical' && isNotDefined(props[propName]))\n      return new Error('when type = `vertical` `xValue` is required');\n    // if (isDefined(props[propName]) && typeof props[propName] !== \"number\") return new Error(\"prop `xValue` accepts a number\");\n  },\n};\n\nStraightLine.defaultProps = {\n  className: 'line ',\n  type: 'horizontal',\n  stroke: '#000000',\n  opacity: 0.5,\n  strokeWidth: 1,\n  strokeDasharray: 'Solid',\n};\n\nexport default StraightLine;\n"]}