{"version":3,"sources":["../../../src/lib/series/RenkoSeries.js"],"names":["RenkoSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","xScale","yScale","chartConfig","plotData","yAccessor","candles","getRenko","clip","getAxisCanvas","map","each","idx","className","fill","x","y","width","height","Component","propTypes","classNames","PropTypes","shape","up","string","down","stroke","partial","func","isRequired","bool","defaultProps","open","d","high","low","close","renko","forEach","beginPath","strokeStyle","fillStyle","rect","closePath","length","candleWidth","filter","ohlc","Math","max","abs","svgfill","fullyFormed"],"mappings":"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","file":"RenkoSeries.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport GenericChartComponent from '../GenericChartComponent';\nimport { getAxisCanvas } from '../GenericComponent';\n\nimport { isDefined } from '../utils';\n\nclass RenkoSeries extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n  }\n  drawOnCanvas(ctx, moreProps) {\n    const { xAccessor } = moreProps;\n    const {\n      xScale,\n      chartConfig: { yScale },\n      plotData,\n    } = moreProps;\n\n    const { yAccessor } = this.props;\n\n    const candles = getRenko(\n      this.props,\n      plotData,\n      xScale,\n      xAccessor,\n      yScale,\n      yAccessor\n    );\n\n    drawOnCanvas(ctx, candles);\n  }\n  render() {\n    const { clip } = this.props;\n\n    return (\n      <GenericChartComponent\n        clip={clip}\n        svgDraw={this.renderSVG}\n        canvasDraw={this.drawOnCanvas}\n        canvasToDraw={getAxisCanvas}\n        drawOn={['pan']}\n      />\n    );\n  }\n  renderSVG(moreProps) {\n    const { xAccessor } = moreProps;\n    const {\n      xScale,\n      chartConfig: { yScale },\n      plotData,\n    } = moreProps;\n\n    const { yAccessor } = this.props;\n\n    const candles = getRenko(\n      this.props,\n      plotData,\n      xScale,\n      xAccessor,\n      yScale,\n      yAccessor\n    ).map((each, idx) => (\n      <rect\n        key={idx}\n        className={each.className}\n        fill={each.fill}\n        x={each.x}\n        y={each.y}\n        width={each.width}\n        height={each.height}\n      />\n    ));\n\n    return (\n      <g>\n        <g className=\"candle\">{candles}</g>\n      </g>\n    );\n  }\n}\n\nRenkoSeries.propTypes = {\n  classNames: PropTypes.shape({\n    up: PropTypes.string,\n    down: PropTypes.string,\n  }),\n  stroke: PropTypes.shape({\n    up: PropTypes.string,\n    down: PropTypes.string,\n  }),\n  fill: PropTypes.shape({\n    up: PropTypes.string,\n    down: PropTypes.string,\n    partial: PropTypes.string,\n  }),\n  yAccessor: PropTypes.func.isRequired,\n  clip: PropTypes.bool.isRequired,\n};\n\nRenkoSeries.defaultProps = {\n  classNames: {\n    up: 'up',\n    down: 'down',\n  },\n  stroke: {\n    up: 'none',\n    down: 'none',\n  },\n  fill: {\n    up: '#6BA583',\n    down: '#E60000',\n    partial: '#4682B4',\n  },\n  yAccessor: d => ({ open: d.open, high: d.high, low: d.low, close: d.close }),\n  clip: true,\n};\n\nfunction drawOnCanvas(ctx, renko) {\n  renko.forEach(d => {\n    ctx.beginPath();\n\n    ctx.strokeStyle = d.stroke;\n    ctx.fillStyle = d.fill;\n\n    ctx.rect(d.x, d.y, d.width, d.height);\n    ctx.closePath();\n    ctx.fill();\n  });\n}\n\nfunction getRenko(props, plotData, xScale, xAccessor, yScale, yAccessor) {\n  const { classNames, fill } = props;\n  const width =\n    xScale(xAccessor(plotData[plotData.length - 1])) -\n    xScale(xAccessor(plotData[0]));\n\n  const candleWidth = width / (plotData.length - 1);\n  const candles = plotData\n    .filter(d => isDefined(yAccessor(d).close))\n    .map(d => {\n      const ohlc = yAccessor(d);\n      const x = xScale(xAccessor(d)) - 0.5 * candleWidth,\n        y = yScale(Math.max(ohlc.open, ohlc.close)),\n        height = Math.abs(yScale(ohlc.open) - yScale(ohlc.close)),\n        className = ohlc.open <= ohlc.close ? classNames.up : classNames.down;\n\n      const svgfill = d.fullyFormed\n        ? ohlc.open <= ohlc.close\n          ? fill.up\n          : fill.down\n        : fill.partial;\n\n      return {\n        className: className,\n        fill: svgfill,\n        x: x,\n        y: y,\n        height: height,\n        width: candleWidth,\n      };\n    });\n  return candles;\n}\n\nexport default RenkoSeries;\n"]}