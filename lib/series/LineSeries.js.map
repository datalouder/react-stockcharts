{"version":3,"sources":["../../../src/lib/series/LineSeries.js"],"names":["LineSeries","props","renderSVG","bind","drawOnCanvas","isHover","moreProps","highlightOnHover","yAccessor","hoverTolerance","mouseXY","currentItem","xScale","plotData","chartConfig","yScale","origin","xAccessor","x","y","radius","invert","left","right","cy","cx","hovering1","Math","pow","l","r","x1","y1","x2","y2","m","b","desiredY","round","hovering2","ctx","stroke","strokeOpacity","strokeWidth","hoverStrokeWidth","defined","strokeDasharray","interpolation","canvasClip","connectNulls","hovering","save","lineWidth","strokeStyle","setLineDash","split","dataSeries","d","curve","beginPath","context","restore","style","fill","className","onHover","onUnHover","hoverProps","drawOn","canvasToDraw","getMouseCanvas","getAxisCanvas","onClick","onDoubleClick","onContextMenu","Component","propTypes","PropTypes","string","number","func","oneOf","strokeDashTypes","bool","object","defaultProps","isNaN","e","console","log"],"mappings":"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","file":"LineSeries.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { line as d3Line } from 'd3-shape';\n\nimport GenericChartComponent from '../GenericChartComponent';\nimport { getAxisCanvas, getMouseCanvas } from '../GenericComponent';\n\nimport {\n  isDefined,\n  getClosestItemIndexes,\n  strokeDashTypes,\n  getStrokeDasharray,\n  hexToRGBA,\n} from '../utils';\n\nclass LineSeries extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n    this.isHover = this.isHover.bind(this);\n  }\n  isHover(moreProps) {\n    // console.log(\"HERE\")\n    const { highlightOnHover, yAccessor, hoverTolerance } = this.props;\n\n    if (!highlightOnHover) return false;\n\n    const { mouseXY, currentItem, xScale, plotData } = moreProps;\n    const {\n      chartConfig: { yScale, origin },\n    } = moreProps;\n\n    const { xAccessor } = moreProps;\n\n    const [x, y] = mouseXY;\n    const radius = hoverTolerance;\n\n    const { left, right } = getClosestItemIndexes(\n      plotData,\n      xScale.invert(x),\n      xAccessor\n    );\n    if (left === right) {\n      const cy = yScale(yAccessor(currentItem)) + origin[1];\n      const cx = xScale(xAccessor(currentItem)) + origin[0];\n\n      const hovering1 =\n        Math.pow(x - cx, 2) + Math.pow(y - cy, 2) < Math.pow(radius, 2);\n\n      return hovering1;\n    } else {\n      const l = plotData[left];\n      const r = plotData[right];\n      const x1 = xScale(xAccessor(l)) + origin[0];\n      const y1 = yScale(yAccessor(l)) + origin[1];\n      const x2 = xScale(xAccessor(r)) + origin[0];\n      const y2 = yScale(yAccessor(r)) + origin[1];\n\n      // y = m * x + b\n      const m /* slope */ = (y2 - y1) / (x2 - x1);\n      const b /* y intercept */ = -1 * m * x1 + y1;\n\n      const desiredY = Math.round(m * x + b);\n\n      const hovering2 = y >= desiredY - radius && y <= desiredY + radius;\n\n      return hovering2;\n    }\n  }\n  drawOnCanvas(ctx, moreProps) {\n    const {\n      yAccessor,\n      stroke,\n      strokeOpacity,\n      strokeWidth,\n      hoverStrokeWidth,\n      defined,\n      strokeDasharray,\n      interpolation,\n      canvasClip,\n    } = this.props;\n\n    const { connectNulls } = this.props;\n\n    const { xAccessor } = moreProps;\n    const {\n      xScale,\n      chartConfig: { yScale },\n      plotData,\n      hovering,\n    } = moreProps;\n\n    if (canvasClip) {\n      ctx.save();\n      canvasClip(ctx, moreProps);\n    }\n\n    ctx.lineWidth = hovering ? hoverStrokeWidth : strokeWidth;\n\n    ctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n    ctx.setLineDash(getStrokeDasharray(strokeDasharray).split(','));\n\n    const dataSeries = d3Line()\n      .x(d => Math.round(xScale(xAccessor(d))))\n      .y(d => Math.round(yScale(yAccessor(d))));\n\n    if (isDefined(interpolation)) {\n      dataSeries.curve(interpolation);\n    }\n    if (!connectNulls) {\n      dataSeries.defined(d => defined(yAccessor(d)));\n    }\n\n    ctx.beginPath();\n    dataSeries.context(ctx)(plotData);\n    ctx.stroke();\n\n    if (canvasClip) {\n      ctx.restore();\n    }\n  }\n  renderSVG(moreProps) {\n    const {\n      yAccessor,\n      stroke,\n      strokeOpacity,\n      strokeWidth,\n      hoverStrokeWidth,\n      defined,\n      strokeDasharray,\n    } = this.props;\n    const { connectNulls } = this.props;\n    const { interpolation, style } = this.props;\n    const { xAccessor, chartConfig } = moreProps;\n\n    const { xScale, plotData, hovering } = moreProps;\n\n    const { yScale } = chartConfig;\n    const dataSeries = d3Line()\n      .x(d => Math.round(xScale(xAccessor(d))))\n      .y(d => Math.round(yScale(yAccessor(d))));\n\n    if (isDefined(interpolation)) {\n      dataSeries.curve(interpolation);\n    }\n    if (!connectNulls) {\n      dataSeries.defined(d => defined(yAccessor(d)));\n    }\n    const d = dataSeries(plotData);\n\n    const { fill, className } = this.props;\n\n    return (\n      <path\n        style={style}\n        className={`${className} ${stroke ? '' : ' line-stroke'}`}\n        d={d}\n        stroke={stroke}\n        strokeOpacity={strokeOpacity}\n        strokeWidth={hovering ? hoverStrokeWidth : strokeWidth}\n        strokeDasharray={getStrokeDasharray(strokeDasharray)}\n        fill={fill}\n      />\n    );\n  }\n  render() {\n    const { highlightOnHover, onHover, onUnHover } = this.props;\n    const hoverProps =\n      highlightOnHover || onHover || onUnHover\n        ? {\n            isHover: this.isHover,\n            drawOn: ['mousemove', 'pan'],\n            canvasToDraw: getMouseCanvas,\n          }\n        : {\n            drawOn: ['pan'],\n            canvasToDraw: getAxisCanvas,\n          };\n\n    return (\n      <GenericChartComponent\n        svgDraw={this.renderSVG}\n        canvasDraw={this.drawOnCanvas}\n        onClickWhenHover={this.props.onClick}\n        onDoubleClickWhenHover={this.props.onDoubleClick}\n        onContextMenuWhenHover={this.props.onContextMenu}\n        onHover={this.props.onHover}\n        onUnHover={this.props.onUnHover}\n        {...hoverProps}\n      />\n    );\n  }\n}\n\n/*\nfunction segment(points, ctx) {\n\tctx.beginPath();\n\n\tconst [x, y] = first(points);\n\tctx.moveTo(x, y);\n\tfor (let i = 1; i < points.length; i++) {\n\t\tconst [x1, y1] = points[i];\n\t\tctx.lineTo(x1, y1);\n\t}\n\n\tctx.stroke();\n}\n*/\n\nLineSeries.propTypes = {\n  className: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  strokeOpacity: PropTypes.number,\n  stroke: PropTypes.string,\n  hoverStrokeWidth: PropTypes.number,\n  fill: PropTypes.string,\n  defined: PropTypes.func,\n  hoverTolerance: PropTypes.number,\n  strokeDasharray: PropTypes.oneOf(strokeDashTypes),\n  highlightOnHover: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onHover: PropTypes.func,\n  onUnHover: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  yAccessor: PropTypes.func,\n  connectNulls: PropTypes.bool,\n  interpolation: PropTypes.func,\n  canvasClip: PropTypes.func,\n  style: PropTypes.object,\n};\n\nLineSeries.defaultProps = {\n  className: 'line ',\n  strokeWidth: 1,\n  strokeOpacity: 1,\n  hoverStrokeWidth: 4,\n  fill: 'none',\n  stroke: '#4682B4',\n  strokeDasharray: 'Solid',\n  defined: d => !isNaN(d),\n  hoverTolerance: 6,\n  highlightOnHover: false,\n  connectNulls: false,\n  onClick: function (e) {\n    console.log('Click', e);\n  },\n  onDoubleClick: function (e) {\n    console.log('Double Click', e);\n  },\n  onContextMenu: function (e) {\n    console.log('Right Click', e);\n  },\n};\n\nexport default LineSeries;\n"]}