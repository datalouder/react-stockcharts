{"version":3,"sources":["../../../src/lib/indicator/baseIndicator.js"],"names":["id","i","accessor","stroke","fill","echo","type","baseIndicator","x","arguments","length"],"mappings":";;;;;;kBAIe,YAAY;AACzB,MAAIA,KAAKC,GAAT;AAAA,MACEC,iBADF;AAAA,MAEEC,eAFF;AAAA,MAGEC,aAHF;AAAA,MAIEC,aAJF;AAAA,MAKEC,aALF;;AAOA,WAASC,aAAT,GAAyB,CAAE;;AAE3BA,gBAAcP,EAAd,GAAmB,UAAUQ,CAAV,EAAa;AAC9B,QAAI,CAACC,UAAUC,MAAf,EAAuB,OAAOV,EAAP;AACvBA,SAAKQ,CAAL;AACA,WAAOD,aAAP;AACD,GAJD;AAKAA,gBAAcL,QAAd,GAAyB,UAAUM,CAAV,EAAa;AACpC,QAAI,CAACC,UAAUC,MAAf,EAAuB,OAAOR,QAAP;AACvBA,eAAWM,CAAX;AACA,WAAOD,aAAP;AACD,GAJD;AAKAA,gBAAcJ,MAAd,GAAuB,UAAUK,CAAV,EAAa;AAClC,QAAI,CAACC,UAAUC,MAAf,EACE,OAAO,CAACP,MAAD,GAAWA,SAAS,0BAAcH,EAAd,CAApB,GAAyCG,MAAhD;AACFA,aAASK,CAAT;AACA,WAAOD,aAAP;AACD,GALD;AAMAA,gBAAcH,IAAd,GAAqB,UAAUI,CAAV,EAAa;AAChC,QAAI,CAACC,UAAUC,MAAf,EAAuB,OAAO,CAACN,IAAD,GAASA,OAAO,0BAAcJ,EAAd,CAAhB,GAAqCI,IAA5C;AACvBA,WAAOI,CAAP;AACA,WAAOD,aAAP;AACD,GAJD;AAKAA,gBAAcF,IAAd,GAAqB,UAAUG,CAAV,EAAa;AAChC,QAAI,CAACC,UAAUC,MAAf,EAAuB,OAAOL,IAAP;AACvBA,WAAOG,CAAP;AACA,WAAOD,aAAP;AACD,GAJD;AAKAA,gBAAcD,IAAd,GAAqB,UAAUE,CAAV,EAAa;AAChC,QAAI,CAACC,UAAUC,MAAf,EAAuB,OAAOJ,IAAP;AACvBA,WAAOE,CAAP;AACA,WAAOD,aAAP;AACD,GAJD;AAKA,SAAOA,aAAP;AACD,C;;AA9CD;;AAEA,IAAIN,IAAI,CAAR","file":"baseIndicator.js","sourcesContent":["import { overlayColors } from '../utils';\n\nlet i = 0;\n\nexport default function () {\n  let id = i++,\n    accessor,\n    stroke,\n    fill,\n    echo,\n    type;\n\n  function baseIndicator() {}\n\n  baseIndicator.id = function (x) {\n    if (!arguments.length) return id;\n    id = x;\n    return baseIndicator;\n  };\n  baseIndicator.accessor = function (x) {\n    if (!arguments.length) return accessor;\n    accessor = x;\n    return baseIndicator;\n  };\n  baseIndicator.stroke = function (x) {\n    if (!arguments.length)\n      return !stroke ? (stroke = overlayColors(id)) : stroke;\n    stroke = x;\n    return baseIndicator;\n  };\n  baseIndicator.fill = function (x) {\n    if (!arguments.length) return !fill ? (fill = overlayColors(id)) : fill;\n    fill = x;\n    return baseIndicator;\n  };\n  baseIndicator.echo = function (x) {\n    if (!arguments.length) return echo;\n    echo = x;\n    return baseIndicator;\n  };\n  baseIndicator.type = function (x) {\n    if (!arguments.length) return type;\n    type = x;\n    return baseIndicator;\n  };\n  return baseIndicator;\n}\n"]}