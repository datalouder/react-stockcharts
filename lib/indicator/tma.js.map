{"version":3,"sources":["../../../src/lib/indicator/tma.js"],"names":["base","type","ALGORITHM_TYPE","accessor","d","tma","underlyingAlgorithm","mergedAlgorithm","algorithm","merge","datum","indicator","data","options","Error"],"mappings":";;;;;;kBAQe,YAAY;AACzB,MAAMA,OAAO,+BACVC,IADU,CACLC,cADK,EAEVC,QAFU,CAED;AAAA,WAAKC,EAAEC,GAAP;AAAA,GAFC,CAAb;;AAIA,MAAMC,sBAAsB,sBAA5B;;AAEA,MAAMC,kBAAkB,oBACrBC,SADqB,CACXF,mBADW,EAErBG,KAFqB,CAEf,UAACC,KAAD,EAAQC,SAAR,EAAsB;AAC3BD,UAAML,GAAN,GAAYM,SAAZ;AACD,GAJqB,CAAxB;;AAMA,MAAMA,YAAY,SAAZA,SAAY,CAAUC,IAAV,EAA2C;AAAA,QAA3BC,OAA2B,uEAAjB,EAAEJ,OAAO,IAAT,EAAiB;;AAC3D,QAAII,QAAQJ,KAAZ,EAAmB;AACjB,UAAI,CAACT,KAAKG,QAAL,EAAL,EACE,MAAM,IAAIW,KAAJ,yBACkBZ,cADlB,yBAAN;AAGF,aAAOK,gBAAgBK,IAAhB,CAAP;AACD;AACD,WAAON,oBAAoBM,IAApB,CAAP;AACD,GATD;AAUA,qBAAOD,SAAP,EAAkBX,IAAlB,EAAwB,IAAxB,EAA8B,UAA9B,EAA0C,QAA1C,EAAoD,MAApD,EAA4D,MAA5D,EAAoE,MAApE;AACA,qBAAOW,SAAP,EAAkBL,mBAAlB,EAAuC,iBAAvC;AACA,qBAAOK,SAAP,EAAkBL,mBAAlB,EAAuC,SAAvC;AACA,qBAAOK,SAAP,EAAkBJ,eAAlB,EAAmC,OAAnC,EAA4C,eAA5C;;AAEA,SAAOI,SAAP;AACD,C;;AArCD;;AAEA;;AAEA;;;;;;AAEA,IAAMT,iBAAiB,KAAvB","file":"tma.js","sourcesContent":["import { rebind, merge } from '../utils';\n\nimport { tma } from '../calculator';\n\nimport baseIndicator from './baseIndicator';\n\nconst ALGORITHM_TYPE = 'TMA';\n\nexport default function () {\n  const base = baseIndicator()\n    .type(ALGORITHM_TYPE)\n    .accessor(d => d.tma);\n\n  const underlyingAlgorithm = tma();\n\n  const mergedAlgorithm = merge()\n    .algorithm(underlyingAlgorithm)\n    .merge((datum, indicator) => {\n      datum.tma = indicator;\n    });\n\n  const indicator = function (data, options = { merge: true }) {\n    if (options.merge) {\n      if (!base.accessor())\n        throw new Error(\n          `Set an accessor to ${ALGORITHM_TYPE} before calculating`\n        );\n      return mergedAlgorithm(data);\n    }\n    return underlyingAlgorithm(data);\n  };\n  rebind(indicator, base, 'id', 'accessor', 'stroke', 'fill', 'echo', 'type');\n  rebind(indicator, underlyingAlgorithm, 'undefinedLength');\n  rebind(indicator, underlyingAlgorithm, 'options');\n  rebind(indicator, mergedAlgorithm, 'merge', 'skipUndefined');\n\n  return indicator;\n}\n"]}