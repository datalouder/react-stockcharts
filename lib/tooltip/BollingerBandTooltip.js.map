{"version":3,"sources":["../../../src/lib/tooltip/BollingerBandTooltip.js"],"names":["BollingerBandTooltip","props","renderSVG","bind","moreProps","onClick","displayFormat","yAccessor","options","textFill","labelFill","displayValuesFor","chartConfig","width","height","currentItem","top","middle","bottom","item","originProp","origin","x","y","sourcePath","windowSize","multiplier","movingAverageType","tooltipLabel","tooltipValue","className","fontFamily","fontSize","Component","propTypes","PropTypes","string","func","isRequired","array","shape","number","defaultProps"],"mappings":"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","file":"BollingerBandTooltip.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'd3-format';\nimport displayValuesFor from './displayValuesFor';\nimport GenericChartComponent from '../GenericChartComponent';\n\nimport { isDefined, functor } from '../utils';\nimport ToolTipText from './ToolTipText';\nimport ToolTipTSpanLabel from './ToolTipTSpanLabel';\n\nclass BollingerBandTooltip extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n  }\n  renderSVG(moreProps) {\n    const { onClick, displayFormat, yAccessor, options, textFill, labelFill } =\n      this.props;\n    const { displayValuesFor } = this.props;\n\n    const {\n      chartConfig: { width, height },\n    } = moreProps;\n\n    const currentItem = displayValuesFor(this.props, moreProps);\n\n    let top, middle, bottom;\n    top = middle = bottom = 'n/a';\n\n    if (isDefined(currentItem) && isDefined(yAccessor(currentItem))) {\n      const item = yAccessor(currentItem);\n      top = displayFormat(item.top);\n      middle = displayFormat(item.middle);\n      bottom = displayFormat(item.bottom);\n    }\n\n    const { origin: originProp } = this.props;\n    const origin = functor(originProp);\n    const [x, y] = origin(width, height);\n\n    const { sourcePath, windowSize, multiplier, movingAverageType } = options;\n    const tooltipLabel = `BB(${sourcePath}, ${windowSize}, ${multiplier}, ${movingAverageType}): `;\n    const tooltipValue = `${top}, ${middle}, ${bottom}`;\n    return (\n      <g\n        transform={`translate(${x}, ${y})`}\n        className={this.props.className}\n        onClick={onClick}\n      >\n        <ToolTipText\n          x={0}\n          y={0}\n          fontFamily={this.props.fontFamily}\n          fontSize={this.props.fontSize}\n        >\n          <ToolTipTSpanLabel fill={labelFill}>{tooltipLabel}</ToolTipTSpanLabel>\n          <tspan fill={textFill}>{tooltipValue}</tspan>\n        </ToolTipText>\n      </g>\n    );\n  }\n  render() {\n    return (\n      <GenericChartComponent\n        clip={false}\n        svgDraw={this.renderSVG}\n        drawOn={['mousemove']}\n      />\n    );\n  }\n}\n\nBollingerBandTooltip.propTypes = {\n  className: PropTypes.string,\n  yAccessor: PropTypes.func.isRequired,\n  displayValuesFor: PropTypes.func,\n  displayFormat: PropTypes.func.isRequired,\n  origin: PropTypes.array.isRequired,\n  onClick: PropTypes.func,\n  options: PropTypes.shape({\n    sourcePath: PropTypes.string.isRequired,\n    windowSize: PropTypes.number.isRequired,\n    multiplier: PropTypes.number.isRequired,\n    movingAverageType: PropTypes.string.isRequired,\n  }).isRequired,\n  textFill: PropTypes.string,\n  labelFill: PropTypes.string,\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.number,\n};\n\nBollingerBandTooltip.defaultProps = {\n  className:\n    'react-stockcharts-tooltip react-stockcharts-bollingerband-tooltip',\n  displayFormat: format('.2f'),\n  displayValuesFor: displayValuesFor,\n  origin: [0, 10],\n};\n\nexport default BollingerBandTooltip;\n"]}