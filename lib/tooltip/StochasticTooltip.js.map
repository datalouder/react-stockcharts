{"version":3,"sources":["../../../src/lib/tooltip/StochasticTooltip.js"],"names":["StochasticTooltip","props","renderSVG","bind","moreProps","onClick","fontFamily","fontSize","yAccessor","displayFormat","label","className","options","appearance","labelFill","displayValuesFor","chartConfig","width","height","currentItem","stroke","stochastic","K","D","originProp","origin","x","y","kLine","windowSize","kWindowSize","dLine","dWindowSize","Component","propTypes","PropTypes","oneOfType","array","func","isRequired","string","number","shape","defaultProps"],"mappings":"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","file":"StochasticTooltip.js","sourcesContent":["import { format } from 'd3-format';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport displayValuesFor from './displayValuesFor';\nimport GenericChartComponent from '../GenericChartComponent';\n\nimport { functor } from '../utils';\n\nimport ToolTipText from './ToolTipText';\nimport ToolTipTSpanLabel from './ToolTipTSpanLabel';\n\nclass StochasticTooltip extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n  }\n  renderSVG(moreProps) {\n    const { onClick, fontFamily, fontSize, yAccessor, displayFormat, label } =\n      this.props;\n    const { className, options, appearance, labelFill } = this.props;\n    const { displayValuesFor } = this.props;\n    const {\n      chartConfig: { width, height },\n    } = moreProps;\n\n    const currentItem = displayValuesFor(this.props, moreProps);\n    const { stroke } = appearance;\n    const stochastic = currentItem && yAccessor(currentItem);\n\n    const K =\n      (stochastic && stochastic.K && displayFormat(stochastic.K)) || 'n/a';\n    const D =\n      (stochastic && stochastic.D && displayFormat(stochastic.D)) || 'n/a';\n\n    const { origin: originProp } = this.props;\n    const origin = functor(originProp);\n    const [x, y] = origin(width, height);\n\n    return (\n      <g\n        className={className}\n        transform={`translate(${x}, ${y})`}\n        onClick={onClick}\n      >\n        <ToolTipText x={0} y={0} fontFamily={fontFamily} fontSize={fontSize}>\n          <ToolTipTSpanLabel\n            fill={labelFill}\n          >{`${label} %K(`}</ToolTipTSpanLabel>\n          <tspan\n            fill={stroke.kLine}\n          >{`${options.windowSize}, ${options.kWindowSize}`}</tspan>\n          <ToolTipTSpanLabel fill={labelFill}>): </ToolTipTSpanLabel>\n          <tspan fill={stroke.kLine}>{K}</tspan>\n          <ToolTipTSpanLabel fill={labelFill}> %D (</ToolTipTSpanLabel>\n          <tspan fill={stroke.dLine}>{options.dWindowSize}</tspan>\n          <ToolTipTSpanLabel fill={labelFill}>): </ToolTipTSpanLabel>\n          <tspan fill={stroke.dLine}>{D}</tspan>\n        </ToolTipText>\n      </g>\n    );\n  }\n  render() {\n    return (\n      <GenericChartComponent\n        clip={false}\n        svgDraw={this.renderSVG}\n        drawOn={['mousemove']}\n      />\n    );\n  }\n}\n\nStochasticTooltip.propTypes = {\n  origin: PropTypes.oneOfType([PropTypes.array, PropTypes.func]).isRequired,\n  className: PropTypes.string,\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.number,\n  labelFill: PropTypes.string,\n\n  onClick: PropTypes.func,\n  yAccessor: PropTypes.func.isRequired,\n  options: PropTypes.shape({\n    windowSize: PropTypes.number.isRequired,\n    kWindowSize: PropTypes.number.isRequired,\n    dWindowSize: PropTypes.number.isRequired,\n  }).isRequired,\n  appearance: PropTypes.shape({\n    stroke: {\n      dLine: PropTypes.string.isRequired,\n      kLine: PropTypes.string.isRequired,\n    }.isRequired,\n  }).isRequired,\n  displayFormat: PropTypes.func.isRequired,\n  displayValuesFor: PropTypes.func,\n  label: PropTypes.string.isRequired,\n};\n\nStochasticTooltip.defaultProps = {\n  displayFormat: format('.2f'),\n  displayValuesFor: displayValuesFor,\n  origin: [0, 0],\n  className: 'react-stockcharts-tooltip',\n  label: 'STO',\n};\n\nexport default StochasticTooltip;\n"]}