{"version":3,"sources":["../../../src/lib/tooltip/RSITooltip.js"],"names":["RSITooltip","props","renderSVG","bind","moreProps","onClick","fontFamily","fontSize","yAccessor","displayFormat","className","options","labelFill","textFill","displayValuesFor","chartConfig","width","height","currentItem","rsi","value","originProp","origin","x","y","tooltipLabel","windowSize","Component","propTypes","PropTypes","oneOfType","array","func","isRequired","shape","number","string","defaultProps"],"mappings":"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","file":"RSITooltip.js","sourcesContent":["import { format } from 'd3-format';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport displayValuesFor from './displayValuesFor';\nimport GenericChartComponent from '../GenericChartComponent';\n\nimport { isDefined, functor } from '../utils';\nimport ToolTipText from './ToolTipText';\nimport ToolTipTSpanLabel from './ToolTipTSpanLabel';\n\nclass RSITooltip extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n  }\n  renderSVG(moreProps) {\n    const {\n      onClick,\n      fontFamily,\n      fontSize,\n      yAccessor,\n      displayFormat,\n      className,\n    } = this.props;\n    const { options, labelFill, textFill } = this.props;\n    const { displayValuesFor } = this.props;\n    const {\n      chartConfig: { width, height },\n    } = moreProps;\n\n    const currentItem = displayValuesFor(this.props, moreProps);\n    const rsi = isDefined(currentItem) && yAccessor(currentItem);\n    const value = (rsi && displayFormat(rsi)) || 'n/a';\n\n    const { origin: originProp } = this.props;\n    const origin = functor(originProp);\n    const [x, y] = origin(width, height);\n\n    const tooltipLabel = `RSI (${options.windowSize}): `;\n    return (\n      <g\n        className={className}\n        transform={`translate(${x}, ${y})`}\n        onClick={onClick}\n      >\n        <ToolTipText x={0} y={0} fontFamily={fontFamily} fontSize={fontSize}>\n          <ToolTipTSpanLabel fill={labelFill}>{tooltipLabel}</ToolTipTSpanLabel>\n          <tspan fill={textFill}>{value}</tspan>\n        </ToolTipText>\n      </g>\n    );\n  }\n  render() {\n    return (\n      <GenericChartComponent\n        clip={false}\n        svgDraw={this.renderSVG}\n        drawOn={['mousemove']}\n      />\n    );\n  }\n}\n\nRSITooltip.propTypes = {\n  origin: PropTypes.oneOfType([PropTypes.array, PropTypes.func]).isRequired,\n  options: PropTypes.shape({\n    windowSize: PropTypes.number.isRequired,\n  }).isRequired,\n  className: PropTypes.string,\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.number,\n  onClick: PropTypes.func,\n  yAccessor: PropTypes.func.isRequired,\n  displayFormat: PropTypes.func.isRequired,\n  displayValuesFor: PropTypes.func,\n  textFill: PropTypes.string,\n  labelFill: PropTypes.string,\n};\n\nRSITooltip.defaultProps = {\n  displayFormat: format('.2f'),\n  displayValuesFor: displayValuesFor,\n  origin: [0, 0],\n  className: 'react-stockcharts-tooltip',\n};\n\nexport default RSITooltip;\n"]}