{"version":3,"sources":["../../../../src/lib/axes/AxisLine.js"],"names":["React","Component","PropTypes","first","last","hexToRGBA","AxisLine","props","orient","outerTickSize","fill","stroke","strokeWidth","className","shapeRendering","opacity","range","sign","d","propTypes","string","isRequired","scale","func","number","array","defaultProps","drawOnCanvasStatic","ctx","xAxis","lineWidth","strokeStyle","beginPath","moveTo","lineTo"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,SAAtB,QAAuC,UAAvC;;AAEA;;;;;;;;;;;IAUMC,Q;;;;;;;;;;;6BACK;AAAA,mBAWH,KAAKC,KAXF;AAAA,UAELC,MAFK,UAELA,MAFK;AAAA,UAGLC,aAHK,UAGLA,aAHK;AAAA,UAILC,IAJK,UAILA,IAJK;AAAA,UAKLC,MALK,UAKLA,MALK;AAAA,UAMLC,WANK,UAMLA,WANK;AAAA,UAOLC,SAPK,UAOLA,SAPK;AAAA,UAQLC,cARK,UAQLA,cARK;AAAA,UASLC,OATK,UASLA,OATK;AAAA,UAULC,KAVK,UAULA,KAVK;;AAYP,UAAMC,OAAOT,WAAW,KAAX,IAAoBA,WAAW,MAA/B,GAAwC,CAAC,CAAzC,GAA6C,CAA1D;;AAEA;;AAEA,UAAIU,UAAJ;;AAEA,UAAIV,WAAW,QAAX,IAAuBA,WAAW,KAAtC,EAA6C;AAC3CU,YACE,MACAF,MAAM,CAAN,CADA,GAEA,GAFA,GAGAC,OAAOR,aAHP,GAIA,KAJA,GAKAO,MAAM,CAAN,CALA,GAMA,GANA,GAOAC,OAAOR,aART;AASD,OAVD,MAUO;AACLS,YACE,MACAD,OAAOR,aADP,GAEA,GAFA,GAGAO,MAAM,CAAN,CAHA,GAIA,KAJA,GAKAA,MAAM,CAAN,CALA,GAMA,GANA,GAOAC,OAAOR,aART;AASD;;AAED,aACE;AACE,mBAAWI,SADb;AAEE,wBAAgBC,cAFlB;AAGE,WAAGI,CAHL;AAIE,cAAMR,IAJR;AAKE,iBAASK,OALX;AAME,gBAAQJ,MANV;AAOE,qBAAaC;AAPf,QADF;AAWD;;;;EApDoBX,S;;AAuDvBK,SAASa,SAAT,GAAqB;AACnBN,aAAWX,UAAUkB,MADF;AAEnBN,kBAAgBZ,UAAUkB,MAFP;AAGnBZ,UAAQN,UAAUkB,MAAV,CAAiBC,UAHN;AAInBC,SAAOpB,UAAUqB,IAAV,CAAeF,UAJH;AAKnBZ,iBAAeP,UAAUsB,MALN;AAMnBd,QAAMR,UAAUkB,MANG;AAOnBT,UAAQT,UAAUkB,MAPC;AAQnBR,eAAaV,UAAUsB,MARJ;AASnBT,WAASb,UAAUsB,MATA;AAUnBR,SAAOd,UAAUuB;AAVE,CAArB;;AAaAnB,SAASoB,YAAT,GAAwB;AACtBb,aAAW,6BADW;AAEtBC,kBAAgB,YAFM;AAGtBL,iBAAe,CAHO;AAItBC,QAAM,MAJgB;AAKtBC,UAAQ,SALc;AAMtBC,eAAa,CANS;AAOtBG,WAAS;AAPa,CAAxB;;AAUAT,SAASqB,kBAAT,GAA8B,UAACpB,KAAD,EAAQqB,GAAR,CAAY,qBAAZ,EAAsC;AAClErB,uBAAaD,SAASoB,YAAtB,EAAuCnB,KAAvC;;AADkE,gBAGKA,KAHL;AAAA,MAG1DC,MAH0D,WAG1DA,MAH0D;AAAA,MAGlDC,aAHkD,WAGlDA,aAHkD;AAAA,MAGnCE,MAHmC,WAGnCA,MAHmC;AAAA,MAG3BC,WAH2B,WAG3BA,WAH2B;AAAA,MAGdG,OAHc,WAGdA,OAHc;AAAA,MAGLC,KAHK,WAGLA,KAHK;;;AAKlE,MAAMC,OAAOT,WAAW,KAAX,IAAoBA,WAAW,MAA/B,GAAwC,CAAC,CAAzC,GAA6C,CAA1D;AACA,MAAMqB,QAAQrB,WAAW,QAAX,IAAuBA,WAAW,KAAhD;;AAEA;;AAEAoB,MAAIE,SAAJ,GAAgBlB,WAAhB;AACAgB,MAAIG,WAAJ,GAAkB1B,UAAUM,MAAV,EAAkBI,OAAlB,CAAlB;;AAEAa,MAAII,SAAJ;;AAEA,MAAIH,KAAJ,EAAW;AACTD,QAAIK,MAAJ,CAAW9B,MAAMa,KAAN,CAAX,EAAyBC,OAAOR,aAAhC;AACAmB,QAAIM,MAAJ,CAAW/B,MAAMa,KAAN,CAAX,EAAyB,CAAzB;AACAY,QAAIM,MAAJ,CAAW9B,KAAKY,KAAL,CAAX,EAAwB,CAAxB;AACAY,QAAIM,MAAJ,CAAW9B,KAAKY,KAAL,CAAX,EAAwBC,OAAOR,aAA/B;AACD,GALD,MAKO;AACLmB,QAAIK,MAAJ,CAAWhB,OAAOR,aAAlB,EAAiCN,MAAMa,KAAN,CAAjC;AACAY,QAAIM,MAAJ,CAAW,CAAX,EAAc/B,MAAMa,KAAN,CAAd;AACAY,QAAIM,MAAJ,CAAW,CAAX,EAAc9B,KAAKY,KAAL,CAAd;AACAY,QAAIM,MAAJ,CAAWjB,OAAOR,aAAlB,EAAiCL,KAAKY,KAAL,CAAjC;AACD;AACDY,MAAIjB,MAAJ;;AAEA;AACD,CA7BD;;AA+BA,eAAeL,QAAf","file":"AxisLine.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { first, last, hexToRGBA } from '../utils';\n\n/*\nfunction d3_scaleExtent(domain) {\n\tvar start = domain[0], stop = domain[domain.length - 1];\n\treturn start < stop ? [start, stop] : [stop, start];\n}\n\nfunction d3_scaleRange(scale) {\n\treturn scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n}\n*/\nclass AxisLine extends Component {\n  render() {\n    const {\n      orient,\n      outerTickSize,\n      fill,\n      stroke,\n      strokeWidth,\n      className,\n      shapeRendering,\n      opacity,\n      range,\n    } = this.props;\n    const sign = orient === 'top' || orient === 'left' ? -1 : 1;\n\n    // var range = d3_scaleRange(scale);\n\n    let d;\n\n    if (orient === 'bottom' || orient === 'top') {\n      d =\n        'M' +\n        range[0] +\n        ',' +\n        sign * outerTickSize +\n        'V0H' +\n        range[1] +\n        'V' +\n        sign * outerTickSize;\n    } else {\n      d =\n        'M' +\n        sign * outerTickSize +\n        ',' +\n        range[0] +\n        'H0V' +\n        range[1] +\n        'H' +\n        sign * outerTickSize;\n    }\n\n    return (\n      <path\n        className={className}\n        shapeRendering={shapeRendering}\n        d={d}\n        fill={fill}\n        opacity={opacity}\n        stroke={stroke}\n        strokeWidth={strokeWidth}\n      ></path>\n    );\n  }\n}\n\nAxisLine.propTypes = {\n  className: PropTypes.string,\n  shapeRendering: PropTypes.string,\n  orient: PropTypes.string.isRequired,\n  scale: PropTypes.func.isRequired,\n  outerTickSize: PropTypes.number,\n  fill: PropTypes.string,\n  stroke: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  opacity: PropTypes.number,\n  range: PropTypes.array,\n};\n\nAxisLine.defaultProps = {\n  className: 'react-stockcharts-axis-line',\n  shapeRendering: 'crispEdges',\n  outerTickSize: 0,\n  fill: 'none',\n  stroke: '#000000',\n  strokeWidth: 1,\n  opacity: 1,\n};\n\nAxisLine.drawOnCanvasStatic = (props, ctx /* , xScale, yScale*/) => {\n  props = { ...AxisLine.defaultProps, ...props };\n\n  const { orient, outerTickSize, stroke, strokeWidth, opacity, range } = props;\n\n  const sign = orient === 'top' || orient === 'left' ? -1 : 1;\n  const xAxis = orient === 'bottom' || orient === 'top';\n\n  // var range = d3_scaleRange(xAxis ? xScale : yScale);\n\n  ctx.lineWidth = strokeWidth;\n  ctx.strokeStyle = hexToRGBA(stroke, opacity);\n\n  ctx.beginPath();\n\n  if (xAxis) {\n    ctx.moveTo(first(range), sign * outerTickSize);\n    ctx.lineTo(first(range), 0);\n    ctx.lineTo(last(range), 0);\n    ctx.lineTo(last(range), sign * outerTickSize);\n  } else {\n    ctx.moveTo(sign * outerTickSize, first(range));\n    ctx.lineTo(0, first(range));\n    ctx.lineTo(0, last(range));\n    ctx.lineTo(sign * outerTickSize, last(range));\n  }\n  ctx.stroke();\n\n  // ctx.strokeStyle = strokeStyle;\n};\n\nexport default AxisLine;\n"]}