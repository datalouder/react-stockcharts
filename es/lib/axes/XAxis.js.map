{"version":3,"sources":["../../../../src/lib/axes/XAxis.js"],"names":["React","Component","PropTypes","Axis","XAxis","props","context","axisZoomCallback","bind","newXDomain","xAxisZoom","showTicks","moreProps","helper","zoomEnabled","propTypes","axisAt","oneOfType","oneOf","number","isRequired","orient","innerTickSize","outerTickSize","tickFormat","func","tickPadding","tickSize","ticks","tickValues","array","bool","className","string","onContextMenu","onDoubleClick","defaultProps","showTickLabel","showDomain","fill","stroke","strokeWidth","opacity","domainClassName","tickStroke","tickStrokeOpacity","fontFamily","fontSize","fontWeight","xZoomHeight","getMouseDelta","startXY","mouseXY","contextTypes","chartConfig","object","width","height","axisLocation","x","w","h","y","transform","range","getScale","getXScale","bg","scale","xScale","invert","trueRange","trueDomain","map","copy","domain"],"mappings":"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","file":"XAxis.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Axis from './Axis';\n\nclass XAxis extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.axisZoomCallback = this.axisZoomCallback.bind(this);\n  }\n  axisZoomCallback(newXDomain) {\n    const { xAxisZoom } = this.context;\n    xAxisZoom(newXDomain);\n  }\n  render() {\n    const { showTicks } = this.props;\n    const moreProps = helper(this.props, this.context);\n\n    return (\n      <Axis\n        {...this.props}\n        {...moreProps}\n        x\n        zoomEnabled={this.props.zoomEnabled && showTicks}\n        axisZoomCallback={this.axisZoomCallback}\n        zoomCursorClassName=\"react-stockcharts-ew-resize-cursor\"\n      />\n    );\n  }\n}\n\nXAxis.propTypes = {\n  axisAt: PropTypes.oneOfType([\n    PropTypes.oneOf(['top', 'bottom', 'middle']),\n    PropTypes.number,\n  ]).isRequired,\n  orient: PropTypes.oneOf(['top', 'bottom']).isRequired,\n  innerTickSize: PropTypes.number,\n  outerTickSize: PropTypes.number,\n  tickFormat: PropTypes.func,\n  tickPadding: PropTypes.number,\n  tickSize: PropTypes.number,\n  ticks: PropTypes.number,\n  tickValues: PropTypes.array,\n  showTicks: PropTypes.bool,\n  className: PropTypes.string,\n  zoomEnabled: PropTypes.bool,\n  onContextMenu: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n};\n\nXAxis.defaultProps = {\n  showTicks: true,\n  showTickLabel: true,\n  showDomain: true,\n  className: 'react-stockcharts-x-axis',\n  ticks: 10,\n  outerTickSize: 0,\n  fill: 'none',\n  stroke: '#000000', // x axis stroke color\n  strokeWidth: 1,\n  opacity: 1, // x axis opacity\n  domainClassName: 'react-stockcharts-axis-domain',\n  innerTickSize: 5,\n  tickPadding: 6,\n  tickStroke: '#000000', // tick/grid stroke\n  tickStrokeOpacity: 1,\n  fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\n  fontSize: 12,\n  fontWeight: 400,\n  xZoomHeight: 25,\n  zoomEnabled: true,\n  getMouseDelta: (startXY, mouseXY) => startXY[0] - mouseXY[0],\n};\n\nXAxis.contextTypes = {\n  chartConfig: PropTypes.object.isRequired,\n  xAxisZoom: PropTypes.func.isRequired,\n};\n\nfunction helper(props, context) {\n  const { axisAt, xZoomHeight, orient } = props;\n  const {\n    chartConfig: { width, height },\n  } = context;\n\n  let axisLocation;\n  const x = 0,\n    w = width,\n    h = xZoomHeight;\n\n  if (axisAt === 'top') axisLocation = 0;\n  else if (axisAt === 'bottom') axisLocation = height;\n  else if (axisAt === 'middle') axisLocation = height / 2;\n  else axisLocation = axisAt;\n\n  const y = orient === 'top' ? -xZoomHeight : 0;\n\n  return {\n    transform: [0, axisLocation],\n    range: [0, width],\n    getScale: getXScale,\n    bg: { x, y, h, w },\n  };\n}\n\nfunction getXScale(moreProps) {\n  const { xScale: scale, width } = moreProps;\n\n  if (scale.invert) {\n    const trueRange = [0, width];\n    const trueDomain = trueRange.map(scale.invert);\n    return scale.copy().domain(trueDomain).range(trueRange);\n  }\n\n  return scale;\n}\n\nexport default XAxis;\n"]}