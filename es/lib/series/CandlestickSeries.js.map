{"version":3,"sources":["../../../../src/lib/series/CandlestickSeries.js"],"names":["nest","React","Component","PropTypes","GenericChartComponent","getAxisCanvas","hexToRGBA","isDefined","functor","plotDataLengthBarWidth","head","CandlestickSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","className","wickClassName","candleClassName","xScale","yScale","chartConfig","plotData","xAccessor","candleData","getCandleData","getWicksSVG","getCandlesSVG","clip","propTypes","string","widthRatio","number","width","oneOfType","func","classNames","fill","stroke","wickStroke","yAccessor","bool","defaultProps","open","d","high","low","close","candleStrokeWidth","opacity","wicks","map","each","idx","wick","x","y1","y2","y3","y4","candles","y","height","wickNest","key","entries","forEach","outer","values","strokeStyle","fillStyle","fillRect","candleNest","strokeKey","strokeValues","lineWidth","inner","strokeRect","wickStrokeProp","fillProp","strokeProp","widthFunctor","trueOffset","offset","Math","round","floor","i","length","ohlc","max","abs","push","direction"],"mappings":"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","file":"CandlestickSeries.js","sourcesContent":["import { nest } from 'd3-collection';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GenericChartComponent from '../GenericChartComponent';\nimport { getAxisCanvas } from '../GenericComponent';\n\nimport {\n  hexToRGBA,\n  isDefined,\n  functor,\n  plotDataLengthBarWidth,\n  head,\n} from '../utils';\n\nclass CandlestickSeries extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n  }\n  drawOnCanvas(ctx, moreProps) {\n    drawOnCanvas(ctx, this.props, moreProps);\n  }\n  renderSVG(moreProps) {\n    const { className, wickClassName, candleClassName } = this.props;\n    const {\n      xScale,\n      chartConfig: { yScale },\n      plotData,\n      xAccessor,\n    } = moreProps;\n\n    const candleData = getCandleData(\n      this.props,\n      xAccessor,\n      xScale,\n      yScale,\n      plotData\n    );\n\n    return (\n      <g className={className}>\n        <g className={wickClassName} key=\"wicks\">\n          {getWicksSVG(candleData)}\n        </g>\n        <g className={candleClassName} key=\"candles\">\n          {getCandlesSVG(this.props, candleData)}\n        </g>\n      </g>\n    );\n  }\n\n  render() {\n    const { clip } = this.props;\n    return (\n      <GenericChartComponent\n        clip={clip}\n        svgDraw={this.renderSVG}\n        canvasDraw={this.drawOnCanvas}\n        canvasToDraw={getAxisCanvas}\n        drawOn={['pan']}\n      />\n    );\n  }\n}\n\nCandlestickSeries.propTypes = {\n  className: PropTypes.string,\n  wickClassName: PropTypes.string,\n  candleClassName: PropTypes.string,\n  widthRatio: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  classNames: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  fill: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  stroke: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  wickStroke: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  yAccessor: PropTypes.func,\n  clip: PropTypes.bool,\n};\n\nCandlestickSeries.defaultProps = {\n  className: 'react-stockcharts-candlestick',\n  wickClassName: 'react-stockcharts-candlestick-wick',\n  candleClassName: 'react-stockcharts-candlestick-candle',\n  yAccessor: d => ({ open: d.open, high: d.high, low: d.low, close: d.close }),\n  classNames: d => (d.close > d.open ? 'up' : 'down'),\n  width: plotDataLengthBarWidth,\n  wickStroke: '#000000',\n  // wickStroke: d => d.close > d.open ? \"#6BA583\" : \"#FF0000\",\n  fill: d => (d.close > d.open ? '#6BA583' : '#FF0000'),\n  // stroke: d => d.close > d.open ? \"#6BA583\" : \"#FF0000\",\n  stroke: '#000000',\n  candleStrokeWidth: 0.5,\n  // stroke: \"none\",\n  widthRatio: 0.8,\n  opacity: 0.5,\n  clip: true,\n};\n\nfunction getWicksSVG(candleData) {\n  const wicks = candleData.map((each, idx) => {\n    const d = each.wick;\n    return (\n      <path\n        key={idx}\n        className={each.className}\n        stroke={d.stroke}\n        d={`M${d.x},${d.y1} L${d.x},${d.y2} M${d.x},${d.y3} L${d.x},${d.y4}`}\n      />\n    );\n  });\n\n  return wicks;\n}\n\nfunction getCandlesSVG(props, candleData) {\n  /* eslint-disable react/prop-types */\n  const { opacity, candleStrokeWidth } = props;\n  /* eslint-enable react/prop-types */\n\n  const candles = candleData.map((d, idx) => {\n    if (d.width <= 1)\n      return (\n        <line\n          className={d.className}\n          key={idx}\n          x1={d.x}\n          y1={d.y}\n          x2={d.x}\n          y2={d.y + d.height}\n          stroke={d.fill}\n        />\n      );\n    else if (d.height === 0)\n      return (\n        <line\n          key={idx}\n          x1={d.x}\n          y1={d.y}\n          x2={d.x + d.width}\n          y2={d.y + d.height}\n          stroke={d.fill}\n        />\n      );\n    return (\n      <rect\n        key={idx}\n        className={d.className}\n        fillOpacity={opacity}\n        x={d.x}\n        y={d.y}\n        width={d.width}\n        height={d.height}\n        fill={d.fill}\n        stroke={d.stroke}\n        strokeWidth={candleStrokeWidth}\n      />\n    );\n  });\n  return candles;\n}\n\nfunction drawOnCanvas(ctx, props, moreProps) {\n  const { opacity, candleStrokeWidth } = props;\n  const {\n    xScale,\n    chartConfig: { yScale },\n    plotData,\n    xAccessor,\n  } = moreProps;\n\n  // const wickData = getWickData(props, xAccessor, xScale, yScale, plotData);\n  const candleData = getCandleData(props, xAccessor, xScale, yScale, plotData);\n\n  const wickNest = nest()\n    .key(d => d.wick.stroke)\n    .entries(candleData);\n\n  wickNest.forEach(outer => {\n    const { key, values } = outer;\n    ctx.strokeStyle = key;\n    ctx.fillStyle = key;\n    values.forEach(each => {\n      /*\n\t\t\tctx.moveTo(d.x, d.y1);\n\t\t\tctx.lineTo(d.x, d.y2);\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(d.x, d.y3);\n\t\t\tctx.lineTo(d.x, d.y4);\n\t\t\tctx.stroke(); */\n      const d = each.wick;\n\n      ctx.fillRect(d.x - 0.5, d.y1, 1, d.y2 - d.y1);\n      ctx.fillRect(d.x - 0.5, d.y3, 1, d.y4 - d.y3);\n    });\n  });\n\n  // const candleData = getCandleData(props, xAccessor, xScale, yScale, plotData);\n\n  const candleNest = nest()\n    .key(d => d.stroke)\n    .key(d => d.fill)\n    .entries(candleData);\n\n  candleNest.forEach(outer => {\n    const { key: strokeKey, values: strokeValues } = outer;\n    if (strokeKey !== 'none') {\n      ctx.strokeStyle = strokeKey;\n      ctx.lineWidth = candleStrokeWidth;\n    }\n    strokeValues.forEach(inner => {\n      const { key, values } = inner;\n      const fillStyle = head(values).width <= 1 ? key : hexToRGBA(key, opacity);\n      ctx.fillStyle = fillStyle;\n\n      values.forEach(d => {\n        if (d.width <= 1) {\n          // <line className={d.className} key={idx} x1={d.x} y1={d.y} x2={d.x} y2={d.y + d.height}/>\n          /*\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(d.x, d.y);\n\t\t\t\t\tctx.lineTo(d.x, d.y + d.height);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\t*/\n          ctx.fillRect(d.x - 0.5, d.y, 1, d.height);\n        } else if (d.height === 0) {\n          // <line key={idx} x1={d.x} y1={d.y} x2={d.x + d.width} y2={d.y + d.height} />\n          /*\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(d.x, d.y);\n\t\t\t\t\tctx.lineTo(d.x + d.width, d.y + d.height);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\t*/\n          ctx.fillRect(d.x, d.y - 0.5, d.width, 1);\n        } else {\n          /*\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.rect(d.x, d.y, d.width, d.height);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tif (strokeKey !== \"none\") ctx.stroke();\n\t\t\t\t\t*/\n          ctx.fillRect(d.x, d.y, d.width, d.height);\n          if (strokeKey !== 'none') ctx.strokeRect(d.x, d.y, d.width, d.height);\n        }\n      });\n    });\n  });\n}\n/*\nfunction getWickData(props, xAccessor, xScale, yScale, plotData) {\n\n\tconst { classNames: classNameProp, wickStroke: wickStrokeProp, yAccessor } = props;\n\tconst wickStroke = functor(wickStrokeProp);\n\tconst className = functor(classNameProp);\n\tconst wickData = plotData\n\t\t\t.filter(d => isDefined(yAccessor(d).close))\n\t\t\t.map(d => {\n\t\t\t\t// console.log(yAccessor);\n\t\t\t\tconst ohlc = yAccessor(d);\n\n\t\t\t\tconst x = Math.round(xScale(xAccessor(d))),\n\t\t\t\t\ty1 = yScale(ohlc.high),\n\t\t\t\t\ty2 = yScale(Math.max(ohlc.open, ohlc.close)),\n\t\t\t\t\ty3 = yScale(Math.min(ohlc.open, ohlc.close)),\n\t\t\t\t\ty4 = yScale(ohlc.low);\n\n\t\t\t\treturn {\n\t\t\t\t\tx,\n\t\t\t\t\ty1,\n\t\t\t\t\ty2,\n\t\t\t\t\ty3,\n\t\t\t\t\ty4,\n\t\t\t\t\tclassName: className(ohlc),\n\t\t\t\t\tdirection: (ohlc.close - ohlc.open),\n\t\t\t\t\tstroke: wickStroke(ohlc),\n\t\t\t\t};\n\t\t\t});\n\treturn wickData;\n}\n*/\n\nfunction getCandleData(props, xAccessor, xScale, yScale, plotData) {\n  const { wickStroke: wickStrokeProp } = props;\n  const wickStroke = functor(wickStrokeProp);\n\n  const { classNames, fill: fillProp, stroke: strokeProp, yAccessor } = props;\n  const className = functor(classNames);\n\n  const fill = functor(fillProp);\n  const stroke = functor(strokeProp);\n\n  const widthFunctor = functor(props.width);\n  const width = widthFunctor(props, {\n    xScale,\n    xAccessor,\n    plotData,\n  });\n\n  /*\n\tconst candleWidth = Math.round(width);\n\tconst offset = Math.round(candleWidth === 1 ? 0 : 0.5 * width);\n\t*/\n  const trueOffset = 0.5 * width;\n  const offset =\n    trueOffset > 0.7 ? Math.round(trueOffset) : Math.floor(trueOffset);\n\n  // eslint-disable-next-line prefer-const\n  let candles = [];\n\n  for (let i = 0; i < plotData.length; i++) {\n    const d = plotData[i];\n    if (isDefined(yAccessor(d).close)) {\n      const x = Math.round(xScale(xAccessor(d)));\n      // const x = Math.round(xScale(xAccessor(d)) - offset);\n\n      const ohlc = yAccessor(d);\n      const y = Math.round(yScale(Math.max(ohlc.open, ohlc.close)));\n      const height = Math.round(\n        Math.abs(yScale(ohlc.open) - yScale(ohlc.close))\n      );\n\n      candles.push({\n        // type: \"line\"\n        x: x - offset,\n        y: y,\n        wick: {\n          stroke: wickStroke(ohlc),\n          x: x,\n          y1: Math.round(yScale(ohlc.high)),\n          y2: y,\n          y3: y + height, // Math.round(yScale(Math.min(ohlc.open, ohlc.close))),\n          y4: Math.round(yScale(ohlc.low)),\n        },\n        height: height,\n        width: offset * 2,\n        className: className(ohlc),\n        fill: fill(ohlc),\n        stroke: stroke(ohlc),\n        direction: ohlc.close - ohlc.open,\n      });\n    }\n  }\n\n  return candles;\n}\n\nexport default CandlestickSeries;\n"]}