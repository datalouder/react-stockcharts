{"version":3,"sources":["../../../../src/lib/series/GroupedBarSeries.js"],"names":["React","Component","PropTypes","GenericChartComponent","getAxisCanvas","StackedBarSeries","drawOnCanvasHelper","svgHelper","identityStack","GroupedBarSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","postProcessor","propTypes","baseAt","oneOfType","number","func","isRequired","direction","oneOf","stroke","bool","widthRatio","opacity","fill","string","className","yAccessor","arrayOf","defaultProps","spaceBetweenBar","array","map","each","x","offset","groupOffset","width","groupWidth"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,gBAAP,IACEC,kBADF,EAEEC,SAFF,EAGEC,aAHF,QAIO,oBAJP;;IAMMC,gB;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA,oIACXA,KADW;;AAEjB,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,OAAjB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AAHiB;AAIlB;;;;iCACYE,G,EAAKC,S,EAAW;AAAA,UACnBC,SADmB,GACLD,SADK,CACnBC,SADmB;;;AAG3BV,yBACEQ,GADF,EAEE,KAAKJ,KAFP,EAGEK,SAHF,EAIEC,SAJF,EAKER,aALF,EAMES,aANF;AAQD;;;8BACSF,S,EAAW;AAAA,UACXC,SADW,GACGD,SADH,CACXC,SADW;;;AAGnB,aACE;AAAA;AAAA,UAAG,WAAU,sCAAb;AACGT,kBACC,KAAKG,KADN,EAECK,SAFD,EAGCC,SAHD,EAICR,aAJD,EAKCS,aALD;AADH,OADF;AAWD;;;6BACQ;AACP,aACE,oBAAC,qBAAD;AACE,iBAAS,KAAKN,SADhB;AAEE,oBAAY,KAAKE,YAFnB;AAGE,sBAAcT,aAHhB;AAIE,gBAAQ,CAAC,KAAD;AAJV,QADF;AAQD;;;;EA1C4BH,S;;AA6C/BQ,iBAAiBS,SAAjB,GAA6B;AAC3BC,UAAQjB,UAAUkB,SAAV,CAAoB,CAAClB,UAAUmB,MAAX,EAAmBnB,UAAUoB,IAA7B,CAApB,EAAwDC,UADrC;AAE3BC,aAAWtB,UAAUuB,KAAV,CAAgB,CAAC,IAAD,EAAO,MAAP,CAAhB,EAAgCF,UAFhB;AAG3BG,UAAQxB,UAAUyB,IAAV,CAAeJ,UAHI;AAI3BK,cAAY1B,UAAUmB,MAAV,CAAiBE,UAJF;AAK3BM,WAAS3B,UAAUmB,MAAV,CAAiBE,UALC;AAM3BO,QAAM5B,UAAUkB,SAAV,CAAoB,CAAClB,UAAUoB,IAAX,EAAiBpB,UAAU6B,MAA3B,CAApB,EAAwDR,UANnC;AAO3BS,aAAW9B,UAAUkB,SAAV,CAAoB,CAAClB,UAAUoB,IAAX,EAAiBpB,UAAU6B,MAA3B,CAApB,EAAwDR,UAPxC;AAQ3BU,aAAW/B,UAAUgC,OAAV,CAAkBhC,UAAUoB,IAA5B;AARgB,CAA7B;;AAWAb,iBAAiB0B,YAAjB,gBACK9B,iBAAiB8B,YADtB;AAEEP,cAAY,GAFd;AAGEQ,mBAAiB;AAHnB;;AAMA,SAASnB,aAAT,CAAuBoB,KAAvB,EAA8B;AAC5B,SAAOA,MAAMC,GAAN,CAAU,gBAAQ;AACvB,wBACKC,IADL;AAEEC,SAAGD,KAAKC,CAAL,GAASD,KAAKE,MAAd,GAAuBF,KAAKG,WAFjC;AAGEC,aAAOJ,KAAKK;AAHd;AAKD,GANM,CAAP;AAOD;;AAED,eAAenC,gBAAf","file":"GroupedBarSeries.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GenericChartComponent from '../GenericChartComponent';\nimport { getAxisCanvas } from '../GenericComponent';\nimport StackedBarSeries, {\n  drawOnCanvasHelper,\n  svgHelper,\n  identityStack,\n} from './StackedBarSeries';\n\nclass GroupedBarSeries extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n  }\n  drawOnCanvas(ctx, moreProps) {\n    const { xAccessor } = moreProps;\n\n    drawOnCanvasHelper(\n      ctx,\n      this.props,\n      moreProps,\n      xAccessor,\n      identityStack,\n      postProcessor\n    );\n  }\n  renderSVG(moreProps) {\n    const { xAccessor } = moreProps;\n\n    return (\n      <g className=\"react-stockcharts-grouped-bar-series\">\n        {svgHelper(\n          this.props,\n          moreProps,\n          xAccessor,\n          identityStack,\n          postProcessor\n        )}\n      </g>\n    );\n  }\n  render() {\n    return (\n      <GenericChartComponent\n        svgDraw={this.renderSVG}\n        canvasDraw={this.drawOnCanvas}\n        canvasToDraw={getAxisCanvas}\n        drawOn={['pan']}\n      />\n    );\n  }\n}\n\nGroupedBarSeries.propTypes = {\n  baseAt: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  direction: PropTypes.oneOf(['up', 'down']).isRequired,\n  stroke: PropTypes.bool.isRequired,\n  widthRatio: PropTypes.number.isRequired,\n  opacity: PropTypes.number.isRequired,\n  fill: PropTypes.oneOfType([PropTypes.func, PropTypes.string]).isRequired,\n  className: PropTypes.oneOfType([PropTypes.func, PropTypes.string]).isRequired,\n  yAccessor: PropTypes.arrayOf(PropTypes.func),\n};\n\nGroupedBarSeries.defaultProps = {\n  ...StackedBarSeries.defaultProps,\n  widthRatio: 0.8,\n  spaceBetweenBar: 5,\n};\n\nfunction postProcessor(array) {\n  return array.map(each => {\n    return {\n      ...each,\n      x: each.x + each.offset - each.groupOffset,\n      width: each.groupWidth,\n    };\n  });\n}\n\nexport default GroupedBarSeries;\n"]}