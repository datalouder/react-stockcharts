{"version":3,"sources":["../../../../src/lib/series/VolumeProfileSeries.js"],"names":["React","Component","PropTypes","ascending","descending","sum","max","merge","zip","histogram","d3Histogram","nest","scaleLinear","GenericChartComponent","getAxisCanvas","head","last","hexToRGBA","accumulatingWindow","identity","functor","VolumeProfileSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","width","helper","rects","sessionBg","className","opacity","showSessionBackground","sessionBackGround","sessionBackGroundOpacity","sessionBgSvg","map","d","idx","i","x","y","w1","height","fill1","stroke1","w2","fill2","stroke2","propTypes","string","number","bool","defaultProps","bins","maxProfileWidthPercent","fill","type","stroke","source","close","volume","absoluteChange","bySession","sessionStart","plotData","date","getMonth","orient","partialStartOK","partialEndOK","realXScale","xScale","yScale","chartConfig","sessionBuilder","discardTillStart","discardTillEnd","accumulateTill","accumulator","dx","length","sessions","allRects","begin","session","finish","sessionWidth","histogram2","value","thresholds","rollup","key","direction","sortKeys","leaves","values","volumeInBins","arr","entries","volumeValues","each","base","range","start","end","domain","totalVolumes","totalVolume","volumes","totalVolumeX","ws","Math","abs","x1","x0","fillStyle","forEach","beginPath","rect","closePath","strokeStyle"],"mappings":"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","file":"VolumeProfileSeries.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ascending,\n  descending,\n  sum,\n  max,\n  merge,\n  zip,\n  histogram as d3Histogram,\n} from 'd3-array';\nimport { nest } from 'd3-collection';\nimport { scaleLinear } from 'd3-scale';\n\nimport GenericChartComponent from '../GenericChartComponent';\nimport { getAxisCanvas } from '../GenericComponent';\n\nimport {\n  head,\n  last,\n  hexToRGBA,\n  accumulatingWindow,\n  identity,\n  functor,\n} from '../utils';\n\nclass VolumeProfileSeries extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n  }\n  drawOnCanvas(ctx, moreProps) {\n    const { xAccessor, width } = moreProps;\n    const { rects, sessionBg } = helper(\n      this.props,\n      moreProps,\n      xAccessor,\n      width\n    );\n\n    drawOnCanvas(ctx, this.props, rects, sessionBg);\n  }\n  render() {\n    return (\n      <GenericChartComponent\n        svgDraw={this.renderSVG}\n        canvasDraw={this.drawOnCanvas}\n        canvasToDraw={getAxisCanvas}\n        drawOn={['pan']}\n      />\n    );\n  }\n  renderSVG(moreProps) {\n    const { className, opacity } = this.props;\n    const {\n      showSessionBackground,\n      sessionBackGround,\n      sessionBackGroundOpacity,\n    } = this.props;\n\n    const { xAccessor, width } = moreProps;\n    const { rects, sessionBg } = helper(\n      this.props,\n      moreProps,\n      xAccessor,\n      width\n    );\n\n    const sessionBgSvg = showSessionBackground\n      ? sessionBg.map((d, idx) => (\n          <rect\n            key={idx}\n            {...d}\n            opacity={sessionBackGroundOpacity}\n            fill={sessionBackGround}\n          />\n        ))\n      : null;\n\n    return (\n      <g className={className}>\n        {sessionBgSvg}\n        {rects.map((d, i) => (\n          <g key={i}>\n            <rect\n              x={d.x}\n              y={d.y}\n              width={d.w1}\n              height={d.height}\n              fill={d.fill1}\n              stroke={d.stroke1}\n              fillOpacity={opacity}\n            />\n            <rect\n              x={d.x + d.w1}\n              y={d.y}\n              width={d.w2}\n              height={d.height}\n              fill={d.fill2}\n              stroke={d.stroke2}\n              fillOpacity={opacity}\n            />\n          </g>\n        ))}\n      </g>\n    );\n  }\n}\n\nVolumeProfileSeries.propTypes = {\n  className: PropTypes.string,\n  opacity: PropTypes.number,\n  showSessionBackground: PropTypes.bool,\n  sessionBackGround: PropTypes.string,\n  sessionBackGroundOpacity: PropTypes.number,\n};\n\nVolumeProfileSeries.defaultProps = {\n  className: 'line ',\n  bins: 20,\n  opacity: 0.5,\n  maxProfileWidthPercent: 50,\n  fill: ({ type }) => (type === 'up' ? '#6BA583' : '#FF0000'),\n  stroke: '#FFFFFF',\n  showSessionBackground: false,\n  sessionBackGround: '#4682B4',\n  sessionBackGroundOpacity: 0.3,\n\n  source: d => d.close,\n  volume: d => d.volume,\n  absoluteChange: d => d.absoluteChange,\n  bySession: false,\n  /* eslint-disable no-unused-vars */\n  sessionStart: ({ d, i, plotData }) =>\n    i > 0 && plotData[i - 1].date.getMonth() !== d.date.getMonth(),\n  /* eslint-enable no-unused-vars */\n  orient: 'left',\n  // // fill: ({ type }) => { var c = type === \"up\" ? \"#6BA583\" : \"#FF0000\"; console.log(type, c); return c },\n  // stroke: ({ type }) =>  type === \"up\" ? \"#6BA583\" : \"#FF0000\",\n  // stroke: \"none\",\n  partialStartOK: true,\n  partialEndOK: true,\n};\n\nfunction helper(props, moreProps, xAccessor, width) {\n  const {\n    xScale: realXScale,\n    chartConfig: { yScale },\n    plotData,\n  } = moreProps;\n\n  const { sessionStart, bySession, partialStartOK, partialEndOK } = props;\n  const {\n    bins,\n    maxProfileWidthPercent,\n    source,\n    volume,\n    absoluteChange,\n    orient,\n    fill,\n    stroke,\n  } = props;\n\n  const sessionBuilder = accumulatingWindow()\n    .discardTillStart(!partialStartOK)\n    .discardTillEnd(!partialEndOK)\n    .accumulateTill((d, i) => {\n      return sessionStart({ d, i, ...moreProps });\n    })\n    .accumulator(identity);\n\n  const dx =\n    plotData.length > 1\n      ? realXScale(xAccessor(plotData[1])) -\n        realXScale(xAccessor(head(plotData)))\n      : 0;\n\n  const sessions = bySession ? sessionBuilder(plotData) : [plotData];\n\n  const allRects = sessions.map(session => {\n    const begin = bySession ? realXScale(xAccessor(head(session))) : 0;\n    const finish = bySession ? realXScale(xAccessor(last(session))) : width;\n    const sessionWidth = finish - begin + dx;\n\n    // console.log(session)\n\n    /* var histogram = d3.layout.histogram()\n\t\t\t\t.value(source)\n\t\t\t\t.bins(bins);*/\n\n    const histogram2 = d3Histogram()\n      // .domain(xScale.domain())\n      .value(source)\n      .thresholds(bins);\n\n    // console.log(bins, histogram(session))\n    // console.log(bins, histogram2(session))\n    const rollup = nest()\n      .key(d => d.direction)\n      .sortKeys(orient === 'right' ? descending : ascending)\n      .rollup(leaves => sum(leaves, d => d.volume));\n\n    const values = histogram2(session);\n    // console.log(\"values\", values)\n\n    const volumeInBins = values\n      .map(arr =>\n        arr.map(d =>\n          absoluteChange(d) > 0\n            ? { direction: 'up', volume: volume(d) }\n            : { direction: 'down', volume: volume(d) }\n        )\n      )\n      .map(arr => rollup.entries(arr));\n\n    // console.log(\"volumeInBins\", volumeInBins)\n    const volumeValues = volumeInBins.map(each => sum(each.map(d => d.value)));\n\n    // console.log(\"volumeValues\", volumeValues)\n    const base = xScale => head(xScale.range());\n\n    const [start, end] =\n      orient === 'right'\n        ? [begin, begin + (sessionWidth * maxProfileWidthPercent) / 100]\n        : [\n            finish,\n            finish - (sessionWidth * (100 - maxProfileWidthPercent)) / 100,\n          ];\n\n    const xScale = scaleLinear()\n      .domain([0, max(volumeValues)])\n      .range([start, end]);\n\n    // console.log(xScale.domain())\n\n    const totalVolumes = volumeInBins.map(volumes => {\n      const totalVolume = sum(volumes, d => d.value);\n      const totalVolumeX = xScale(totalVolume);\n      const width = base(xScale) - totalVolumeX;\n      const x = width < 0 ? totalVolumeX + width : totalVolumeX;\n\n      const ws = volumes.map(d => {\n        return {\n          type: d.key,\n          width: (d.value * Math.abs(width)) / totalVolume,\n        };\n      });\n\n      return { x, ws, totalVolumeX };\n    });\n    // console.log(\"totalVolumes\", totalVolumes)\n\n    const rects = zip(values, totalVolumes).map(([d, { x, ws }]) => {\n      const w1 = ws[0] || { type: 'up', width: 0 };\n      const w2 = ws[1] || { type: 'down', width: 0 };\n\n      return {\n        // y: yScale(d.x + d.dx),\n        y: yScale(d.x1),\n        // height: yScale(d.x - d.dx) - yScale(d.x),\n        height: yScale(d.x1) - yScale(d.x0),\n        x,\n        width,\n        w1: w1.width,\n        w2: w2.width,\n        stroke1: functor(stroke)(w1),\n        stroke2: functor(stroke)(w2),\n        fill1: functor(fill)(w1),\n        fill2: functor(fill)(w2),\n      };\n    });\n\n    // console.log(\"rects\", rects)\n\n    const sessionBg = {\n      x: begin,\n      y: last(rects).y,\n      height: head(rects).y - last(rects).y + head(rects).height,\n      width: sessionWidth,\n    };\n\n    return { rects, sessionBg };\n  });\n\n  return {\n    rects: merge(allRects.map(d => d.rects)),\n    sessionBg: allRects.map(d => d.sessionBg),\n  };\n}\n\nfunction drawOnCanvas(ctx, props, rects, sessionBg) {\n  const {\n    opacity,\n    sessionBackGround,\n    sessionBackGroundOpacity,\n    showSessionBackground,\n  } = props;\n\n  // var { rects, sessionBg } = helper(props, xScale, yScale, plotData);\n\n  if (showSessionBackground) {\n    ctx.fillStyle = hexToRGBA(sessionBackGround, sessionBackGroundOpacity);\n\n    sessionBg.forEach(each => {\n      const { x, y, height, width } = each;\n\n      ctx.beginPath();\n      ctx.rect(x, y, width, height);\n      ctx.closePath();\n      ctx.fill();\n    });\n  }\n\n  rects.forEach(each => {\n    const { x, y, height, w1, w2, stroke1, stroke2, fill1, fill2 } = each;\n\n    if (w1 > 0) {\n      ctx.fillStyle = hexToRGBA(fill1, opacity);\n      if (stroke1 !== 'none') ctx.strokeStyle = stroke1;\n\n      ctx.beginPath();\n      ctx.rect(x, y, w1, height);\n      ctx.closePath();\n      ctx.fill();\n\n      if (stroke1 !== 'none') ctx.stroke();\n    }\n\n    if (w2 > 0) {\n      ctx.fillStyle = hexToRGBA(fill2, opacity);\n      if (stroke2 !== 'none') ctx.strokeStyle = stroke2;\n\n      ctx.beginPath();\n      ctx.rect(x + w1, y, w2, height);\n      ctx.closePath();\n      ctx.fill();\n\n      if (stroke2 !== 'none') ctx.stroke();\n    }\n  });\n}\n\nexport default VolumeProfileSeries;\n"]}