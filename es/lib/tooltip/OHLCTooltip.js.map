{"version":3,"sources":["../../../../src/lib/tooltip/OHLCTooltip.js"],"names":["React","Component","PropTypes","format","timeFormat","displayValuesFor","GenericChartComponent","isDefined","functor","ToolTipText","ToolTipTSpanLabel","OHLCTooltip","props","renderSVG","bind","moreProps","xDisplayFormat","accessor","volumeFormat","ohlcFormat","percentFormat","displayTexts","chartConfig","width","height","displayXAccessor","currentItem","displayDate","open","high","low","close","volume","percent","na","item","originProp","origin","x","y","itemsToDisplay","children","propTypes","className","string","func","oneOfType","array","fontFamily","fontSize","number","onClick","textFill","labelFill","object","displayTextsDefault","d","o","h","l","c","v","defaultProps","date","defaultDisplay"],"mappings":"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","file":"OHLCTooltip.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'd3-format';\nimport { timeFormat } from 'd3-time-format';\nimport displayValuesFor from './displayValuesFor';\nimport GenericChartComponent from '../GenericChartComponent';\n\nimport { isDefined, functor } from '../utils';\nimport ToolTipText from './ToolTipText';\nimport ToolTipTSpanLabel from './ToolTipTSpanLabel';\n\nclass OHLCTooltip extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n  }\n  renderSVG(moreProps) {\n    const { displayValuesFor } = this.props;\n    const {\n      xDisplayFormat,\n      accessor,\n      volumeFormat,\n      ohlcFormat,\n      percentFormat,\n      displayTexts,\n    } = this.props;\n\n    const {\n      chartConfig: { width, height },\n    } = moreProps;\n    const { displayXAccessor } = moreProps;\n\n    const currentItem = displayValuesFor(this.props, moreProps);\n\n    let displayDate, open, high, low, close, volume, percent;\n    displayDate =\n      open =\n      high =\n      low =\n      close =\n      volume =\n      percent =\n        displayTexts.na;\n\n    if (isDefined(currentItem) && isDefined(accessor(currentItem))) {\n      const item = accessor(currentItem);\n      volume = isDefined(item.volume)\n        ? volumeFormat(item.volume)\n        : displayTexts.na;\n\n      displayDate = xDisplayFormat(displayXAccessor(item));\n      open = ohlcFormat(item.open);\n      high = ohlcFormat(item.high);\n      low = ohlcFormat(item.low);\n      close = ohlcFormat(item.close);\n      percent = percentFormat((item.close - item.open) / item.open);\n    }\n\n    const { origin: originProp } = this.props;\n    const origin = functor(originProp);\n    const [x, y] = origin(width, height);\n\n    const itemsToDisplay = {\n      displayDate,\n      open,\n      high,\n      low,\n      close,\n      percent,\n      volume,\n      x,\n      y,\n    };\n    return this.props.children(this.props, moreProps, itemsToDisplay);\n  }\n  render() {\n    return (\n      <GenericChartComponent\n        clip={false}\n        svgDraw={this.renderSVG}\n        drawOn={['mousemove']}\n      />\n    );\n  }\n}\n\nOHLCTooltip.propTypes = {\n  className: PropTypes.string,\n  accessor: PropTypes.func,\n  xDisplayFormat: PropTypes.func,\n  children: PropTypes.func,\n  volumeFormat: PropTypes.func,\n  percentFormat: PropTypes.func,\n  ohlcFormat: PropTypes.func,\n  origin: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.number,\n  onClick: PropTypes.func,\n  displayValuesFor: PropTypes.func,\n  textFill: PropTypes.string,\n  labelFill: PropTypes.string,\n  displayTexts: PropTypes.object,\n};\n\nconst displayTextsDefault = {\n  d: 'Date: ',\n  o: ' O: ',\n  h: ' H: ',\n  l: ' L: ',\n  c: ' C: ',\n  v: ' Vol: ',\n  na: 'n/a',\n};\n\nOHLCTooltip.defaultProps = {\n  accessor: d => {\n    return {\n      date: d.date,\n      open: d.open,\n      high: d.high,\n      low: d.low,\n      close: d.close,\n      volume: d.volume,\n    };\n  },\n  xDisplayFormat: timeFormat('%Y-%m-%d'),\n  volumeFormat: format('.4s'),\n  percentFormat: format('.2%'),\n  ohlcFormat: format('.2f'),\n  displayValuesFor: displayValuesFor,\n  origin: [0, 0],\n  children: defaultDisplay,\n  displayTexts: displayTextsDefault,\n};\n\nfunction defaultDisplay(props, moreProps, itemsToDisplay) {\n  /* eslint-disable */\n  const {\n    className,\n    textFill,\n    labelFill,\n    onClick,\n    fontFamily,\n    fontSize,\n    displayTexts,\n  } = props;\n  /* eslint-enable */\n\n  const { displayDate, open, high, low, close, volume, x, y } = itemsToDisplay;\n  return (\n    <g\n      className={`react-stockcharts-tooltip-hover ${className}`}\n      transform={`translate(${x}, ${y})`}\n      onClick={onClick}\n    >\n      <ToolTipText x={0} y={0} fontFamily={fontFamily} fontSize={fontSize}>\n        <ToolTipTSpanLabel fill={labelFill} key=\"label\" x={0} dy=\"5\">\n          {displayTexts.d}\n        </ToolTipTSpanLabel>\n        <tspan key=\"value\" fill={textFill}>\n          {displayDate}\n        </tspan>\n        <ToolTipTSpanLabel fill={labelFill} key=\"label_O\">\n          {displayTexts.o}\n        </ToolTipTSpanLabel>\n        <tspan key=\"value_O\" fill={textFill}>\n          {open}\n        </tspan>\n        <ToolTipTSpanLabel fill={labelFill} key=\"label_H\">\n          {displayTexts.h}\n        </ToolTipTSpanLabel>\n        <tspan key=\"value_H\" fill={textFill}>\n          {high}\n        </tspan>\n        <ToolTipTSpanLabel fill={labelFill} key=\"label_L\">\n          {displayTexts.l}\n        </ToolTipTSpanLabel>\n        <tspan key=\"value_L\" fill={textFill}>\n          {low}\n        </tspan>\n        <ToolTipTSpanLabel fill={labelFill} key=\"label_C\">\n          {displayTexts.c}\n        </ToolTipTSpanLabel>\n        <tspan key=\"value_C\" fill={textFill}>\n          {close}\n        </tspan>\n        <ToolTipTSpanLabel fill={labelFill} key=\"label_Vol\">\n          {displayTexts.v}\n        </ToolTipTSpanLabel>\n        <tspan key=\"value_Vol\" fill={textFill}>\n          {volume}\n        </tspan>\n      </ToolTipText>\n    </g>\n  );\n}\n\nexport default OHLCTooltip;\n"]}