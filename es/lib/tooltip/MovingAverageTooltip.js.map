{"version":3,"sources":["../../../../src/lib/tooltip/MovingAverageTooltip.js"],"names":["React","Component","PropTypes","format","displayValuesFor","GenericChartComponent","ToolTipText","ToolTipTSpanLabel","functor","SingleMAToolTip","props","handleClick","bind","e","onClick","forChart","options","chartId","textFill","labelFill","translate","origin","color","fontFamily","fontSize","displayName","value","propTypes","array","isRequired","string","func","number","oneOfType","object","MovingAverageTooltip","renderSVG","moreProps","chartConfig","className","width","originProp","displayFormat","height","currentItem","config","x","y","ox","oy","map","each","idx","yValue","yAccessor","tooltipLabel","type","windowSize","yDisplayValue","stroke","arrayOf","shape","echo","any","defaultProps"],"mappings":"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","file":"MovingAverageTooltip.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'd3-format';\nimport displayValuesFor from './displayValuesFor';\nimport GenericChartComponent from '../GenericChartComponent';\n\nimport ToolTipText from './ToolTipText';\nimport ToolTipTSpanLabel from './ToolTipTSpanLabel';\n\nimport { functor } from '../utils';\n\nclass SingleMAToolTip extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(e) {\n    const { onClick, forChart, options } = this.props;\n    onClick({ chartId: forChart, ...options }, e);\n  }\n  render() {\n    const { textFill, labelFill } = this.props;\n    const translate =\n      'translate(' + this.props.origin[0] + ', ' + this.props.origin[1] + ')';\n    return (\n      <g transform={translate}>\n        <line\n          x1={0}\n          y1={2}\n          x2={0}\n          y2={28}\n          stroke={this.props.color}\n          strokeWidth=\"4px\"\n        />\n        <ToolTipText\n          x={5}\n          y={11}\n          fontFamily={this.props.fontFamily}\n          fontSize={this.props.fontSize}\n        >\n          <ToolTipTSpanLabel fill={labelFill}>\n            {this.props.displayName}\n          </ToolTipTSpanLabel>\n          <tspan x=\"5\" dy=\"15\" fill={textFill}>\n            {this.props.value}\n          </tspan>\n        </ToolTipText>\n        <rect\n          x={0}\n          y={0}\n          width={55}\n          height={30}\n          onClick={this.handleClick}\n          fill=\"none\"\n          stroke=\"none\"\n        />\n      </g>\n    );\n  }\n}\n\nSingleMAToolTip.propTypes = {\n  origin: PropTypes.array.isRequired,\n  color: PropTypes.string.isRequired,\n  displayName: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  fontFamily: PropTypes.string,\n  textFill: PropTypes.string,\n  labelFill: PropTypes.string,\n  fontSize: PropTypes.number,\n  forChart: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    .isRequired,\n  options: PropTypes.object.isRequired,\n};\n\nclass MovingAverageTooltip extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n  }\n  renderSVG(moreProps) {\n    const { displayValuesFor } = this.props;\n\n    const { chartId } = moreProps;\n    const { chartConfig } = moreProps;\n\n    const {\n      className,\n      onClick,\n      width,\n      fontFamily,\n      fontSize,\n      textFill,\n      labelFill,\n    } = this.props;\n    const { origin: originProp, displayFormat, options } = this.props;\n    const {\n      chartConfig: { height },\n    } = moreProps;\n\n    const currentItem = displayValuesFor(this.props, moreProps);\n    const config = chartConfig;\n\n    const origin = functor(originProp);\n    const [x, y] = origin(width, height);\n    const [ox, oy] = config.origin;\n\n    return (\n      <g transform={`translate(${ox + x}, ${oy + y})`} className={className}>\n        {options.map((each, idx) => {\n          const yValue = currentItem && each.yAccessor(currentItem);\n\n          const tooltipLabel = `${each.type} (${each.windowSize})`;\n          const yDisplayValue = yValue ? displayFormat(yValue) : 'n/a';\n          return (\n            <SingleMAToolTip\n              key={idx}\n              origin={[width * idx, 0]}\n              color={each.stroke}\n              displayName={tooltipLabel}\n              value={yDisplayValue}\n              options={each}\n              forChart={chartId}\n              onClick={onClick}\n              fontFamily={fontFamily}\n              fontSize={fontSize}\n              textFill={textFill}\n              labelFill={labelFill}\n            />\n          );\n        })}\n      </g>\n    );\n  }\n  render() {\n    return (\n      <GenericChartComponent\n        clip={false}\n        svgDraw={this.renderSVG}\n        drawOn={['mousemove']}\n      />\n    );\n  }\n}\n\nMovingAverageTooltip.propTypes = {\n  className: PropTypes.string,\n  displayFormat: PropTypes.func.isRequired,\n  origin: PropTypes.array.isRequired,\n  displayValuesFor: PropTypes.func,\n  onClick: PropTypes.func,\n  textFill: PropTypes.string,\n  labelFill: PropTypes.string,\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.number,\n  width: PropTypes.number,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      yAccessor: PropTypes.func.isRequired,\n      type: PropTypes.string.isRequired,\n      stroke: PropTypes.string.isRequired,\n      windowSize: PropTypes.number.isRequired,\n      echo: PropTypes.any,\n    })\n  ),\n};\n\nMovingAverageTooltip.defaultProps = {\n  className:\n    'react-stockcharts-tooltip react-stockcharts-moving-average-tooltip',\n  displayFormat: format('.2f'),\n  displayValuesFor: displayValuesFor,\n  origin: [0, 10],\n  width: 65,\n};\n\nexport default MovingAverageTooltip;\n"]}