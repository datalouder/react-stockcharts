{"version":3,"sources":["../../../src/lib/GenericComponent.js"],"names":["React","Component","PropTypes","isNotDefined","isDefined","noop","functor","identity","aliases","mouseleave","panend","pinchzoom","mousedown","click","contextmenu","dblclick","dragstart","dragend","dragcancel","GenericComponent","props","context","drawOnCanvas","bind","getMoreProps","listener","draw","updateMoreProps","evaluateType","isHover","preCanvasDraw","postCanvasDraw","getPanConditions","shouldTypeProceed","preEvaluate","generateSubscriptionId","suscriberId","moreProps","state","updateCount","Object","keys","forEach","key","type","e","evaluationInProgress","newType","proceed","drawOn","indexOf","hovering","onUnHover","onContextMenu","onContextMenuWhenHover","onMouseDown","onClickWhenHover","onClickOutside","onClick","prevHover","amIOnTop","setCursorClass","selected","onHover","iSetTheCursorClass","interactiveCursorClass","onMouseMove","onDoubleClick","onDoubleClickWhenHover","onPan","onPanEnd","draggable","dragInProgress","onDragStart","someDragInProgress","onDrag","onDragComplete","enableDragOnHover","panEnabled","disablePan","force","trigger","chartCanvasType","canvasDraw","setState","subscribe","chartId","clip","edgeClip","componentWillReceiveProps","unsubscribe","componentDidUpdate","prevProps","nextProps","nextContext","xScale","plotData","chartConfig","getMutableState","debug","morePropsDecorator","xAccessor","displayXAccessor","width","height","fullData","canvasToDraw","getCanvasContexts","ctx","svgDraw","suffix","style","clipPath","propTypes","func","isRequired","array","bool","string","defaultProps","contexts","mouseCoord","contextTypes","number","margin","object","oneOfType","getAxisCanvas","axes","getMouseCanvas"],"mappings":"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","file":"GenericComponent.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isNotDefined, isDefined, noop, functor, identity } from './utils';\n\nconst aliases = {\n  mouseleave: 'mousemove', // to draw interactive after mouse exit\n  panend: 'pan',\n  pinchzoom: 'pan',\n  mousedown: 'mousemove',\n  click: 'mousemove',\n  contextmenu: 'mousemove',\n  dblclick: 'mousemove',\n  dragstart: 'drag',\n  dragend: 'drag',\n  dragcancel: 'drag',\n};\n\nclass GenericComponent extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n    this.getMoreProps = this.getMoreProps.bind(this);\n    this.listener = this.listener.bind(this);\n    this.draw = this.draw.bind(this);\n    this.updateMoreProps = this.updateMoreProps.bind(this);\n    this.evaluateType = this.evaluateType.bind(this);\n    this.isHover = this.isHover.bind(this);\n    this.preCanvasDraw = this.preCanvasDraw.bind(this);\n    this.postCanvasDraw = this.postCanvasDraw.bind(this);\n    this.getPanConditions = this.getPanConditions.bind(this);\n    this.shouldTypeProceed = this.shouldTypeProceed.bind(this);\n    this.preEvaluate = this.preEvaluate.bind(this);\n\n    const { generateSubscriptionId } = context;\n    this.suscriberId = generateSubscriptionId();\n\n    this.moreProps = {};\n\n    this.state = {\n      updateCount: 0,\n    };\n  }\n  updateMoreProps(moreProps) {\n    Object.keys(moreProps).forEach(key => {\n      this.moreProps[key] = moreProps[key];\n    });\n  }\n  shouldTypeProceed() {\n    return true;\n  }\n  preEvaluate() {}\n  listener(type, moreProps, state, e) {\n    // console.log(e.shiftKey)\n    if (isDefined(moreProps)) {\n      this.updateMoreProps(moreProps);\n    }\n    this.evaluationInProgress = true;\n    this.evaluateType(type, e);\n    this.evaluationInProgress = false;\n  }\n  evaluateType(type, e) {\n    const newType = aliases[type] || type;\n    const proceed = this.props.drawOn.indexOf(newType) > -1;\n\n    // console.log(\"type ->\", type, proceed);\n\n    if (!proceed) return;\n    // const moreProps = this.getMoreProps();\n    this.preEvaluate(type, this.moreProps, e);\n    if (!this.shouldTypeProceed(type, this.moreProps)) return;\n\n    switch (type) {\n      case 'zoom':\n      case 'mouseenter':\n        // DO NOT DRAW FOR THESE EVENTS\n        break;\n      case 'mouseleave': {\n        this.moreProps.hovering = false;\n        const moreProps = this.getMoreProps();\n\n        if (this.props.onUnHover) {\n          this.props.onUnHover(moreProps, e);\n        }\n        break;\n      }\n      case 'contextmenu': {\n        if (this.props.onContextMenu) {\n          this.props.onContextMenu(this.getMoreProps(), e);\n        }\n        if (this.moreProps.hovering && this.props.onContextMenuWhenHover) {\n          this.props.onContextMenuWhenHover(this.getMoreProps(), e);\n        }\n        break;\n      }\n      case 'mousedown': {\n        if (this.props.onMouseDown) {\n          this.props.onMouseDown(this.getMoreProps(), e);\n        }\n        break;\n      }\n      case 'click': {\n        const moreProps = this.getMoreProps();\n        if (this.moreProps.hovering) {\n          // console.error(\"TODO use this only for SAR, Line series\")\n          this.props.onClickWhenHover(moreProps, e);\n        } else {\n          this.props.onClickOutside(moreProps, e);\n        }\n        if (this.props.onClick) {\n          this.props.onClick(moreProps, e);\n        }\n        break;\n      }\n      case 'mousemove': {\n        const prevHover = this.moreProps.hovering;\n        this.moreProps.hovering = this.isHover(e);\n\n        const { amIOnTop, setCursorClass } = this.context;\n\n        if (\n          this.moreProps.hovering &&\n          !this.props.selected &&\n          /* && !prevHover */\n          amIOnTop(this.suscriberId) &&\n          isDefined(this.props.onHover)\n        ) {\n          setCursorClass('react-stockcharts-pointer-cursor');\n          this.iSetTheCursorClass = true;\n        } else if (\n          this.moreProps.hovering &&\n          this.props.selected &&\n          amIOnTop(this.suscriberId)\n        ) {\n          setCursorClass(this.props.interactiveCursorClass);\n          this.iSetTheCursorClass = true;\n        } else if (\n          prevHover &&\n          !this.moreProps.hovering &&\n          this.iSetTheCursorClass\n        ) {\n          this.iSetTheCursorClass = false;\n          setCursorClass(null);\n        }\n        const moreProps = this.getMoreProps();\n\n        if (this.moreProps.hovering && !prevHover) {\n          if (this.props.onHover) {\n            this.props.onHover(moreProps, e);\n          }\n        }\n        if (prevHover && !this.moreProps.hovering) {\n          if (this.props.onUnHover) {\n            this.props.onUnHover(moreProps, e);\n          }\n        }\n\n        if (this.props.onMouseMove) {\n          this.props.onMouseMove(moreProps, e);\n        }\n        break;\n      }\n      case 'dblclick': {\n        const moreProps = this.getMoreProps();\n\n        if (this.props.onDoubleClick) {\n          this.props.onDoubleClick(moreProps, e);\n        }\n        if (this.moreProps.hovering && this.props.onDoubleClickWhenHover) {\n          this.props.onDoubleClickWhenHover(moreProps, e);\n        }\n        break;\n      }\n      case 'pan': {\n        this.moreProps.hovering = false;\n        if (this.props.onPan) {\n          this.props.onPan(this.getMoreProps(), e);\n        }\n        break;\n      }\n      case 'panend': {\n        if (this.props.onPanEnd) {\n          this.props.onPanEnd(this.getMoreProps(), e);\n        }\n        break;\n      }\n      case 'dragstart': {\n        if (this.getPanConditions().draggable) {\n          const { amIOnTop } = this.context;\n          if (amIOnTop(this.suscriberId)) {\n            this.dragInProgress = true;\n            this.props.onDragStart(this.getMoreProps(), e);\n          }\n        }\n        this.someDragInProgress = true;\n        break;\n      }\n      case 'drag': {\n        if (this.dragInProgress && this.props.onDrag) {\n          this.props.onDrag(this.getMoreProps(), e);\n        }\n        break;\n      }\n      case 'dragend': {\n        if (this.dragInProgress && this.props.onDragComplete) {\n          this.props.onDragComplete(this.getMoreProps(), e);\n        }\n        this.dragInProgress = false;\n        this.someDragInProgress = false;\n        break;\n      }\n      case 'dragcancel': {\n        if (this.dragInProgress || this.iSetTheCursorClass) {\n          const { setCursorClass } = this.context;\n          setCursorClass(null);\n        }\n        break;\n      }\n    }\n  }\n  isHover(e) {\n    return isDefined(this.props.isHover)\n      ? this.props.isHover(this.getMoreProps(), e)\n      : false;\n  }\n  getPanConditions() {\n    const draggable =\n      !!(this.props.selected && this.moreProps.hovering) ||\n      (this.props.enableDragOnHover && this.moreProps.hovering);\n\n    return {\n      draggable,\n      panEnabled: !this.props.disablePan,\n    };\n  }\n  draw({ trigger, force } = { force: false }) {\n    const type = aliases[trigger] || trigger;\n    const proceed = this.props.drawOn.indexOf(type) > -1;\n\n    if (\n      proceed ||\n      this.props.selected /* this is to draw as soon as you select */ ||\n      force\n    ) {\n      const { chartCanvasType } = this.context;\n      const { canvasDraw } = this.props;\n\n      if (isNotDefined(canvasDraw) || chartCanvasType === 'svg') {\n        const { updateCount } = this.state;\n        this.setState({\n          updateCount: updateCount + 1,\n        });\n      } else {\n        this.drawOnCanvas();\n      }\n    }\n  }\n  componentWillMount() {\n    const { subscribe, chartId } = this.context;\n    const { clip, edgeClip } = this.props;\n\n    subscribe(this.suscriberId, {\n      chartId,\n      clip,\n      edgeClip,\n      listener: this.listener,\n      draw: this.draw,\n      getPanConditions: this.getPanConditions,\n    });\n    this.componentWillReceiveProps(this.props, this.context);\n  }\n  componentWillUnmount() {\n    const { unsubscribe } = this.context;\n    unsubscribe(this.suscriberId);\n    if (this.iSetTheCursorClass) {\n      const { setCursorClass } = this.context;\n      setCursorClass(null);\n    }\n  }\n  componentDidMount() {\n    this.componentDidUpdate(this.props);\n  }\n  componentDidUpdate(prevProps) {\n    const { chartCanvasType } = this.context;\n    const { canvasDraw, selected, interactiveCursorClass } = this.props;\n\n    if (prevProps.selected !== selected) {\n      const { setCursorClass } = this.context;\n      if (selected && this.moreProps.hovering) {\n        this.iSetTheCursorClass = true;\n        setCursorClass(interactiveCursorClass);\n      } else {\n        this.iSetTheCursorClass = false;\n        setCursorClass(null);\n      }\n    }\n    if (\n      isDefined(canvasDraw) &&\n      !this.evaluationInProgress &&\n      // && !(this.someDragInProgress && this.props.selected)\n      /*\n\t\t\t\tprevent double draw of interactive elements\n\t\t\t\tduring dragging / hover / click etc.\n\t\t\t\t*/\n      chartCanvasType !== 'svg'\n    ) {\n      this.updateMoreProps(this.moreProps);\n      this.drawOnCanvas();\n    }\n  }\n  componentWillReceiveProps(nextProps, nextContext) {\n    const { xScale, plotData, chartConfig, getMutableState } = nextContext;\n\n    this.props.debug(nextContext);\n    this.moreProps = {\n      ...this.moreProps,\n      ...getMutableState(),\n      /*\n\t\t\t^ this is so\n\t\t\tmouseXY, currentCharts, currentItem are available to\n\t\t\tnewly created components like MouseHoverText which\n\t\t\tis created right after a new interactive object is drawn\n\t\t\t*/\n      xScale,\n      plotData,\n      chartConfig,\n    };\n  }\n  getMoreProps() {\n    const {\n      xScale,\n      plotData,\n      chartConfig,\n      morePropsDecorator,\n      xAccessor,\n      displayXAccessor,\n      width,\n      height,\n    } = this.context;\n\n    const { chartId, fullData } = this.context;\n\n    const moreProps = {\n      xScale,\n      plotData,\n      chartConfig,\n      xAccessor,\n      displayXAccessor,\n      width,\n      height,\n      chartId,\n      fullData,\n      ...this.moreProps,\n    };\n\n    return (morePropsDecorator || identity)(moreProps);\n  }\n  preCanvasDraw() {\n    // do nothing\n  }\n  postCanvasDraw() {}\n  drawOnCanvas() {\n    const { canvasDraw, canvasToDraw } = this.props;\n    const { getCanvasContexts } = this.context;\n\n    const moreProps = this.getMoreProps();\n\n    const ctx = canvasToDraw(getCanvasContexts());\n\n    this.preCanvasDraw(ctx, moreProps);\n    canvasDraw(ctx, moreProps);\n    this.postCanvasDraw(ctx, moreProps);\n  }\n  render() {\n    const { chartCanvasType, chartId } = this.context;\n    const { canvasDraw, clip, svgDraw } = this.props;\n\n    if (isDefined(canvasDraw) && chartCanvasType !== 'svg') {\n      return null;\n    }\n\n    const suffix = isDefined(chartId) ? '-' + chartId : '';\n\n    const style = clip ? { clipPath: `url(#chart-area-clip${suffix})` } : null;\n\n    return <g style={style}>{svgDraw(this.getMoreProps())}</g>;\n  }\n}\n\nGenericComponent.propTypes = {\n  svgDraw: PropTypes.func.isRequired,\n  canvasDraw: PropTypes.func,\n\n  drawOn: PropTypes.array.isRequired,\n\n  clip: PropTypes.bool.isRequired,\n  edgeClip: PropTypes.bool.isRequired,\n  interactiveCursorClass: PropTypes.string,\n\n  selected: PropTypes.bool.isRequired,\n  enableDragOnHover: PropTypes.bool.isRequired,\n  disablePan: PropTypes.bool.isRequired,\n\n  canvasToDraw: PropTypes.func.isRequired,\n\n  isHover: PropTypes.func,\n\n  onClick: PropTypes.func,\n  onClickWhenHover: PropTypes.func,\n  onClickOutside: PropTypes.func,\n\n  onPan: PropTypes.func,\n  onPanEnd: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDrag: PropTypes.func,\n  onDragComplete: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDoubleClickWhenHover: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onContextMenuWhenHover: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onHover: PropTypes.func,\n  onUnHover: PropTypes.func,\n\n  debug: PropTypes.func,\n  // owner: PropTypes.string.isRequired,\n};\n\nGenericComponent.defaultProps = {\n  svgDraw: functor(null),\n  draw: [],\n  canvasToDraw: contexts => contexts.mouseCoord,\n  clip: true,\n  edgeClip: false,\n  selected: false,\n  disablePan: false,\n  enableDragOnHover: false,\n\n  onClickWhenHover: noop,\n  onClickOutside: noop,\n  onDragStart: noop,\n  onMouseMove: noop,\n  onMouseDown: noop,\n  debug: noop,\n};\n\nGenericComponent.contextTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  margin: PropTypes.object.isRequired,\n  chartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  getCanvasContexts: PropTypes.func,\n\n  chartCanvasType: PropTypes.string,\n  xScale: PropTypes.func.isRequired,\n  xAccessor: PropTypes.func.isRequired,\n  displayXAccessor: PropTypes.func.isRequired,\n  plotData: PropTypes.array.isRequired,\n  fullData: PropTypes.array.isRequired,\n\n  chartConfig: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n    .isRequired,\n\n  morePropsDecorator: PropTypes.func,\n  generateSubscriptionId: PropTypes.func,\n  getMutableState: PropTypes.func.isRequired,\n\n  amIOnTop: PropTypes.func.isRequired,\n  subscribe: PropTypes.func.isRequired,\n  unsubscribe: PropTypes.func.isRequired,\n  setCursorClass: PropTypes.func.isRequired,\n};\n\nexport default GenericComponent;\n\nexport function getAxisCanvas(contexts) {\n  return contexts.axes;\n}\n\nexport function getMouseCanvas(contexts) {\n  return contexts.mouseCoord;\n}\n"]}