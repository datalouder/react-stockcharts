{"version":3,"sources":["../../../../../src/lib/interactive/wrapper/EachTrendLine.js"],"names":["React","Component","PropTypes","ascending","d3Ascending","noop","strokeDashTypes","saveNodeType","isHover","getXValue","StraightLine","ClickableCircle","HoverTextNearMouse","EachTrendLine","props","handleEdge1Drag","bind","handleEdge2Drag","handleLineDragStart","handleLineDrag","handleEdge1DragStart","handleEdge2DragStart","handleDragComplete","handleHover","nodes","state","hover","x1Value","y1Value","x2Value","y2Value","dragStart","moreProps","index","onDrag","xScale","yScale","chartConfig","xAccessor","fullData","startPos","mouseXY","x1","y1","x2","y2","dx","dy","newX1Value","newY1Value","invert","newX2Value","newY2Value","setState","anchor","undefined","onDragComplete","getNewXY","hovering","type","stroke","strokeWidth","strokeOpacity","strokeDasharray","r","edgeStrokeWidth","edgeFill","edgeStroke","edgeInteractiveCursor","lineInteractiveCursor","hoverText","selected","hoverTextEnabled","enable","hoverTextSelected","selectedText","hoverTextUnselected","text","restHoverTextProps","plotData","mouseY","x","domain","slice","sort","small","big","y","newY","Math","min","max","propTypes","any","isRequired","number","oneOf","func","onEdge1Drag","onEdge2Drag","onSelect","onUnSelect","defaultClassName","string","bool","object","defaultProps"],"mappings":"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","file":"EachTrendLine.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ascending as d3Ascending } from 'd3-array';\nimport { noop, strokeDashTypes } from '../../utils';\nimport { saveNodeType, isHover } from '../utils';\nimport { getXValue } from '../../utils/ChartDataUtil';\n\nimport StraightLine from '../components/StraightLine';\nimport ClickableCircle from '../components/ClickableCircle';\nimport HoverTextNearMouse from '../components/HoverTextNearMouse';\n\nclass EachTrendLine extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEdge1Drag = this.handleEdge1Drag.bind(this);\n    this.handleEdge2Drag = this.handleEdge2Drag.bind(this);\n    this.handleLineDragStart = this.handleLineDragStart.bind(this);\n    this.handleLineDrag = this.handleLineDrag.bind(this);\n\n    this.handleEdge1DragStart = this.handleEdge1DragStart.bind(this);\n    this.handleEdge2DragStart = this.handleEdge2DragStart.bind(this);\n\n    this.handleDragComplete = this.handleDragComplete.bind(this);\n\n    this.handleHover = this.handleHover.bind(this);\n\n    this.isHover = isHover.bind(this);\n    this.saveNodeType = saveNodeType.bind(this);\n    this.nodes = {};\n\n    this.state = {\n      hover: false,\n    };\n  }\n  handleLineDragStart() {\n    const { x1Value, y1Value, x2Value, y2Value } = this.props;\n\n    this.dragStart = {\n      x1Value,\n      y1Value,\n      x2Value,\n      y2Value,\n    };\n  }\n  handleLineDrag(moreProps) {\n    const { index, onDrag } = this.props;\n\n    const { x1Value, y1Value, x2Value, y2Value } = this.dragStart;\n\n    const {\n      xScale,\n      chartConfig: { yScale },\n      xAccessor,\n      fullData,\n    } = moreProps;\n    const { startPos, mouseXY } = moreProps;\n\n    const x1 = xScale(x1Value);\n    const y1 = yScale(y1Value);\n    const x2 = xScale(x2Value);\n    const y2 = yScale(y2Value);\n\n    const dx = startPos[0] - mouseXY[0];\n    const dy = startPos[1] - mouseXY[1];\n\n    const newX1Value = getXValue(\n      xScale,\n      xAccessor,\n      [x1 - dx, y1 - dy],\n      fullData\n    );\n    const newY1Value = yScale.invert(y1 - dy);\n    const newX2Value = getXValue(\n      xScale,\n      xAccessor,\n      [x2 - dx, y2 - dy],\n      fullData\n    );\n    const newY2Value = yScale.invert(y2 - dy);\n\n    onDrag(index, {\n      x1Value: newX1Value,\n      y1Value: newY1Value,\n      x2Value: newX2Value,\n      y2Value: newY2Value,\n    });\n  }\n  handleEdge1DragStart() {\n    this.setState({\n      anchor: 'edge2',\n    });\n  }\n  handleEdge2DragStart() {\n    this.setState({\n      anchor: 'edge1',\n    });\n  }\n  handleDragComplete(...rest) {\n    this.setState({\n      anchor: undefined,\n    });\n    this.props.onDragComplete(...rest);\n  }\n  handleEdge1Drag(moreProps) {\n    const { index, onDrag } = this.props;\n    const { x2Value, y2Value } = this.props;\n\n    const [x1Value, y1Value] = getNewXY(moreProps);\n\n    onDrag(index, {\n      x1Value,\n      y1Value,\n      x2Value,\n      y2Value,\n    });\n  }\n  handleEdge2Drag(moreProps) {\n    const { index, onDrag } = this.props;\n    const { x1Value, y1Value } = this.props;\n\n    const [x2Value, y2Value] = getNewXY(moreProps);\n\n    onDrag(index, {\n      x1Value,\n      y1Value,\n      x2Value,\n      y2Value,\n    });\n  }\n  handleHover(moreProps) {\n    if (this.state.hover !== moreProps.hovering) {\n      this.setState({\n        hover: moreProps.hovering,\n      });\n    }\n  }\n  render() {\n    const {\n      x1Value,\n      y1Value,\n      x2Value,\n      y2Value,\n      type,\n      stroke,\n      strokeWidth,\n      strokeOpacity,\n      strokeDasharray,\n      r,\n      edgeStrokeWidth,\n      edgeFill,\n      edgeStroke,\n      edgeInteractiveCursor,\n      lineInteractiveCursor,\n      hoverText,\n      selected,\n\n      onDragComplete,\n    } = this.props;\n\n    const {\n      enable: hoverTextEnabled,\n      selectedText: hoverTextSelected,\n      text: hoverTextUnselected,\n      ...restHoverTextProps\n    } = hoverText;\n\n    const { hover, anchor } = this.state;\n\n    return (\n      <g>\n        <StraightLine\n          ref={this.saveNodeType('line')}\n          selected={selected || hover}\n          onHover={this.handleHover}\n          onUnHover={this.handleHover}\n          x1Value={x1Value}\n          y1Value={y1Value}\n          x2Value={x2Value}\n          y2Value={y2Value}\n          type={type}\n          stroke={stroke}\n          strokeWidth={hover || selected ? strokeWidth + 1 : strokeWidth}\n          strokeOpacity={strokeOpacity}\n          strokeDasharray={strokeDasharray}\n          interactiveCursorClass={lineInteractiveCursor}\n          onDragStart={this.handleLineDragStart}\n          onDrag={this.handleLineDrag}\n          onDragComplete={onDragComplete}\n        />\n        <ClickableCircle\n          ref={this.saveNodeType('edge1')}\n          show={selected || hover}\n          cx={x1Value}\n          cy={y1Value}\n          r={r}\n          fill={edgeFill}\n          stroke={anchor === 'edge1' ? stroke : edgeStroke}\n          strokeWidth={edgeStrokeWidth}\n          strokeOpacity={1}\n          interactiveCursorClass={edgeInteractiveCursor}\n          onDragStart={this.handleEdge1DragStart}\n          onDrag={this.handleEdge1Drag}\n          onDragComplete={this.handleDragComplete}\n        />\n        <ClickableCircle\n          ref={this.saveNodeType('edge2')}\n          show={selected || hover}\n          cx={x2Value}\n          cy={y2Value}\n          r={r}\n          fill={edgeFill}\n          stroke={anchor === 'edge2' ? stroke : edgeStroke}\n          strokeWidth={edgeStrokeWidth}\n          strokeOpacity={1}\n          interactiveCursorClass={edgeInteractiveCursor}\n          onDragStart={this.handleEdge2DragStart}\n          onDrag={this.handleEdge2Drag}\n          onDragComplete={this.handleDragComplete}\n        />\n        <HoverTextNearMouse\n          show={hoverTextEnabled && hover}\n          {...restHoverTextProps}\n          text={selected ? hoverTextSelected : hoverTextUnselected}\n        />\n      </g>\n    );\n  }\n}\n\nexport function getNewXY(moreProps) {\n  const {\n    xScale,\n    chartConfig: { yScale },\n    xAccessor,\n    plotData,\n    mouseXY,\n  } = moreProps;\n  const mouseY = mouseXY[1];\n\n  const x = getXValue(xScale, xAccessor, mouseXY, plotData);\n\n  const [small, big] = yScale.domain().slice().sort(d3Ascending);\n  const y = yScale.invert(mouseY);\n  const newY = Math.min(Math.max(y, small), big);\n\n  return [x, newY];\n}\n\nEachTrendLine.propTypes = {\n  x1Value: PropTypes.any.isRequired,\n  x2Value: PropTypes.any.isRequired,\n  y1Value: PropTypes.any.isRequired,\n  y2Value: PropTypes.any.isRequired,\n\n  index: PropTypes.number,\n\n  type: PropTypes.oneOf([\n    'XLINE', // extends from -Infinity to +Infinity\n    'RAY', // extends to +/-Infinity in one direction\n    'LINE', // extends between the set bounds\n  ]).isRequired,\n\n  onDrag: PropTypes.func.isRequired,\n  onEdge1Drag: PropTypes.func.isRequired,\n  onEdge2Drag: PropTypes.func.isRequired,\n  onDragComplete: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onUnSelect: PropTypes.func.isRequired,\n\n  r: PropTypes.number.isRequired,\n  strokeOpacity: PropTypes.number.isRequired,\n  defaultClassName: PropTypes.string,\n\n  selected: PropTypes.bool,\n\n  stroke: PropTypes.string.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n  strokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\n  edgeStrokeWidth: PropTypes.number.isRequired,\n  edgeStroke: PropTypes.string.isRequired,\n  edgeInteractiveCursor: PropTypes.string.isRequired,\n  lineInteractiveCursor: PropTypes.string.isRequired,\n  edgeFill: PropTypes.string.isRequired,\n  hoverText: PropTypes.object.isRequired,\n};\n\nEachTrendLine.defaultProps = {\n  onDrag: noop,\n  onEdge1Drag: noop,\n  onEdge2Drag: noop,\n  onDragComplete: noop,\n  onSelect: noop,\n  onUnSelect: noop,\n\n  selected: false,\n\n  edgeStroke: '#000000',\n  edgeFill: '#FFFFFF',\n  edgeStrokeWidth: 2,\n  r: 5,\n  strokeWidth: 1,\n  strokeOpacity: 1,\n  strokeDasharray: 'Solid',\n  hoverText: {\n    enable: false,\n  },\n};\n\nexport default EachTrendLine;\n"]}