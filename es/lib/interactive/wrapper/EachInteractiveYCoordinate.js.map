{"version":3,"sources":["../../../../../src/lib/interactive/wrapper/EachInteractiveYCoordinate.js"],"names":["React","Component","PropTypes","noop","saveNodeType","isHover","ClickableShape","InteractiveYCoordinate","EachInteractiveYCoordinate","props","handleHover","bind","handleCloseIconHover","handleDragStart","handleDrag","handleDelete","nodes","state","hover","closeIconHover","moreProps","yValue","mouseXY","yScale","chartConfig","mouseY","dy","dragStartPosition","index","onDrag","newYValue","invert","onDelete","hovering","setState","bgFill","bgOpacity","textFill","fontFamily","fontSize","fontWeight","fontStyle","text","selected","onDragComplete","stroke","strokeOpacity","strokeDasharray","strokeWidth","edge","textBox","draggable","hoverHandler","onHover","onUnHover","dragProps","onDragStart","propTypes","number","bool","isRequired","string","object","func","defaultProps","opacity","fill"],"mappings":"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","file":"EachInteractiveYCoordinate.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { noop } from '../../utils';\nimport { saveNodeType, isHover } from '../utils';\n\nimport ClickableShape from '../components/ClickableShape';\nimport InteractiveYCoordinate from '../components/InteractiveYCoordinate';\n\nclass EachInteractiveYCoordinate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleHover = this.handleHover.bind(this);\n    this.handleCloseIconHover = this.handleCloseIconHover.bind(this);\n\n    this.handleDragStart = this.handleDragStart.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n\n    this.handleDelete = this.handleDelete.bind(this);\n\n    this.isHover = isHover.bind(this);\n    this.saveNodeType = saveNodeType.bind(this);\n    this.nodes = {};\n\n    this.state = {\n      hover: false,\n      closeIconHover: false,\n    };\n  }\n  handleDragStart(moreProps) {\n    const { yValue } = this.props;\n    const { mouseXY } = moreProps;\n    const {\n      chartConfig: { yScale },\n    } = moreProps;\n    const [, mouseY] = mouseXY;\n\n    const dy = mouseY - yScale(yValue);\n\n    this.dragStartPosition = {\n      yValue,\n      dy,\n    };\n  }\n  handleDrag(moreProps) {\n    const { index, onDrag } = this.props;\n    const {\n      mouseXY: [, mouseY],\n      chartConfig: { yScale },\n    } = moreProps;\n\n    const { dy } = this.dragStartPosition;\n\n    const newYValue = yScale.invert(mouseY - dy);\n\n    onDrag(index, newYValue);\n  }\n  handleDelete(moreProps) {\n    const { index, onDelete } = this.props;\n    onDelete(index, moreProps);\n  }\n  handleHover(moreProps) {\n    if (this.state.hover !== moreProps.hovering) {\n      this.setState({\n        hover: moreProps.hovering,\n        closeIconHover: moreProps.hovering ? this.state.closeIconHover : false,\n      });\n    }\n  }\n  handleCloseIconHover(moreProps) {\n    if (this.state.closeIconHover !== moreProps.hovering) {\n      this.setState({\n        closeIconHover: moreProps.hovering,\n      });\n    }\n  }\n  render() {\n    const {\n      yValue,\n      bgFill,\n      bgOpacity,\n      textFill,\n      fontFamily,\n      fontSize,\n      fontWeight,\n      fontStyle,\n      text,\n      // hoverText,\n      selected,\n      onDragComplete,\n      stroke,\n      strokeOpacity,\n      strokeDasharray,\n      strokeWidth,\n      edge,\n      textBox,\n      draggable,\n    } = this.props;\n    const { hover, closeIconHover } = this.state;\n\n    const hoverHandler = {\n      onHover: this.handleHover,\n      onUnHover: this.handleHover,\n    };\n\n    const dragProps = draggable\n      ? {\n          onDragStart: this.handleDragStart,\n          onDrag: this.handleDrag,\n          onDragComplete: onDragComplete,\n        }\n      : {};\n    return (\n      <g>\n        <InteractiveYCoordinate\n          ref={this.saveNodeType('priceCoordinate')}\n          selected={selected && !closeIconHover}\n          hovering={hover || closeIconHover}\n          interactiveCursorClass=\"react-stockcharts-move-cursor\"\n          {...hoverHandler}\n          {...dragProps}\n          yValue={yValue}\n          bgFill={bgFill}\n          bgOpacity={bgOpacity}\n          textFill={textFill}\n          fontFamily={fontFamily}\n          fontStyle={fontStyle}\n          fontWeight={fontWeight}\n          fontSize={fontSize}\n          stroke={stroke}\n          strokeOpacity={strokeOpacity}\n          strokeDasharray={strokeDasharray}\n          strokeWidth={strokeWidth}\n          text={text}\n          textBox={textBox}\n          edge={edge}\n        />\n        <ClickableShape\n          show\n          hovering={closeIconHover}\n          text={text}\n          yValue={yValue}\n          fontFamily={fontFamily}\n          fontStyle={fontStyle}\n          fontWeight={fontWeight}\n          fontSize={fontSize}\n          textBox={textBox}\n          stroke={stroke}\n          strokeOpacity={strokeOpacity}\n          onHover={this.handleCloseIconHover}\n          onUnHover={this.handleCloseIconHover}\n          onClick={this.handleDelete}\n        />\n        {/* <HoverTextNearMouse\n\t\t\t\t\tshow={hoverTextEnabled && hover && !selected}\n\t\t\t\t\t{...restHoverTextProps}\n\t\t\t\t/> */}\n      </g>\n    );\n  }\n}\n\nEachInteractiveYCoordinate.propTypes = {\n  index: PropTypes.number,\n\n  draggable: PropTypes.bool.isRequired,\n  yValue: PropTypes.number.isRequired,\n\n  bgFill: PropTypes.string.isRequired,\n  bgOpacity: PropTypes.number.isRequired,\n  stroke: PropTypes.string.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n  strokeOpacity: PropTypes.number.isRequired,\n  strokeDasharray: PropTypes.string.isRequired,\n  textFill: PropTypes.string.isRequired,\n\n  fontWeight: PropTypes.string.isRequired,\n  fontFamily: PropTypes.string.isRequired,\n  fontStyle: PropTypes.string.isRequired,\n  fontSize: PropTypes.number.isRequired,\n\n  text: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n\n  edge: PropTypes.object.isRequired,\n  textBox: PropTypes.object.isRequired,\n\n  onDrag: PropTypes.func.isRequired,\n  onDragComplete: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nEachInteractiveYCoordinate.defaultProps = {\n  onDrag: noop,\n  onDragComplete: noop,\n\n  strokeWidth: 1,\n  opacity: 1,\n  selected: false,\n  fill: '#FFFFFF',\n  draggable: false,\n};\n\nexport default EachInteractiveYCoordinate;\n"]}