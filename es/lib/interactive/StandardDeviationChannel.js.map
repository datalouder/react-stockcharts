{"version":3,"sources":["../../../../src/lib/interactive/StandardDeviationChannel.js"],"names":["React","Component","PropTypes","isDefined","isNotDefined","noop","getValueFromOverride","terminate","saveNodeType","isHoverForInteractiveType","EachLinearRegressionChannel","MouseLocationIndicator","HoverTextNearMouse","StandardDeviationChannel","props","handleStart","bind","handleEnd","handleDrawLine","handleDragLine","handleDragLineComplete","getSelectionState","nodes","state","index","newXYValue","setState","override","moreProps","channels","newChannels","map","each","idx","start","x1Value","y1Value","end","x2Value","y2Value","selected","onComplete","xyValue","current","mouseMoved","onStart","e","appearance","d","enabled","snapTo","currentPositionRadius","currentPositionStroke","currentPositionOpacity","currentPositionStrokeWidth","hoverText","eachDefaultAppearance","defaultProps","hoverTextDefault","tempLine","eachAppearance","eachHoverText","propTypes","bool","isRequired","func","onSelect","string","number","shape","stroke","strokeOpacity","strokeWidth","fill","fillOpacity","edgeStrokeWidth","edgeStroke","edgeFill","r","object","array","close","enable","bgHeight","bgWidth","text","selectedText"],"mappings":"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","file":"StandardDeviationChannel.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isDefined, isNotDefined, noop } from '../utils';\n\nimport {\n  getValueFromOverride,\n  terminate,\n  saveNodeType,\n  isHoverForInteractiveType,\n} from './utils';\n\nimport EachLinearRegressionChannel from './wrapper/EachLinearRegressionChannel';\nimport MouseLocationIndicator from './components/MouseLocationIndicator';\nimport HoverTextNearMouse from './components/HoverTextNearMouse';\n\nclass StandardDeviationChannel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleDrawLine = this.handleDrawLine.bind(this);\n    this.handleDragLine = this.handleDragLine.bind(this);\n    this.handleDragLineComplete = this.handleDragLineComplete.bind(this);\n\n    this.terminate = terminate.bind(this);\n    this.saveNodeType = saveNodeType.bind(this);\n\n    this.getSelectionState = isHoverForInteractiveType('channels').bind(this);\n\n    this.nodes = [];\n    this.state = {};\n  }\n  handleDragLine(index, newXYValue) {\n    this.setState({\n      override: {\n        index,\n        ...newXYValue,\n      },\n    });\n  }\n  handleDragLineComplete(moreProps) {\n    const { override } = this.state;\n    const { channels } = this.props;\n    if (isDefined(override)) {\n      const newChannels = channels.map((each, idx) =>\n        idx === override.index\n          ? {\n              ...each,\n              start: [override.x1Value, override.y1Value],\n              end: [override.x2Value, override.y2Value],\n              selected: true,\n            }\n          : each\n      );\n      this.setState(\n        {\n          override: null,\n        },\n        () => {\n          this.props.onComplete(newChannels, moreProps);\n        }\n      );\n    }\n  }\n  handleDrawLine(xyValue) {\n    const { current } = this.state;\n\n    if (isDefined(current) && isDefined(current.start)) {\n      this.mouseMoved = true;\n      this.setState({\n        current: {\n          start: current.start,\n          end: xyValue,\n        },\n      });\n    }\n  }\n  handleStart(xyValue) {\n    const { current } = this.state;\n\n    if (isNotDefined(current) || isNotDefined(current.start)) {\n      this.mouseMoved = false;\n\n      this.setState(\n        {\n          current: {\n            start: xyValue,\n            end: null,\n          },\n        },\n        () => {\n          this.props.onStart();\n        }\n      );\n    }\n  }\n  handleEnd(xyValue, moreProps, e) {\n    const { current } = this.state;\n    const { appearance, channels } = this.props;\n\n    if (this.mouseMoved && isDefined(current) && isDefined(current.start)) {\n      const newChannels = [\n        ...channels.map(d => ({ ...d, selected: false })),\n        {\n          start: current.start,\n          end: xyValue,\n          selected: true,\n          appearance,\n        },\n      ];\n\n      this.setState(\n        {\n          current: null,\n        },\n        () => {\n          this.props.onComplete(newChannels, moreProps, e);\n        }\n      );\n    }\n  }\n  render() {\n    const { appearance } = this.props;\n    const { enabled, snapTo } = this.props;\n    const { currentPositionRadius, currentPositionStroke } = this.props;\n    const { currentPositionOpacity, currentPositionStrokeWidth } = this.props;\n    const { hoverText, channels } = this.props;\n    const { current, override } = this.state;\n\n    const eachDefaultAppearance = {\n      ...StandardDeviationChannel.defaultProps.appearance,\n      ...appearance,\n    };\n\n    const hoverTextDefault = {\n      ...StandardDeviationChannel.defaultProps.hoverText,\n      ...hoverText,\n    };\n\n    const tempLine =\n      isDefined(current) && isDefined(current.end) ? (\n        <EachLinearRegressionChannel\n          interactive={false}\n          x1Value={current.start[0]}\n          x2Value={current.end[0]}\n          appearance={eachDefaultAppearance}\n          hoverText={hoverTextDefault}\n        />\n      ) : null;\n\n    return (\n      <g>\n        {channels.map((each, idx) => {\n          const eachAppearance = isDefined(each.appearance)\n            ? { ...eachDefaultAppearance, ...each.appearance }\n            : eachDefaultAppearance;\n\n          const eachHoverText = isDefined(each.hoverText)\n            ? { ...hoverTextDefault, ...each.hoverText }\n            : hoverTextDefault;\n\n          return (\n            <EachLinearRegressionChannel\n              key={idx}\n              ref={this.saveNodeType(idx)}\n              index={idx}\n              selected={each.selected}\n              x1Value={getValueFromOverride(\n                override,\n                idx,\n                'x1Value',\n                each.start[0]\n              )}\n              x2Value={getValueFromOverride(\n                override,\n                idx,\n                'x2Value',\n                each.end[0]\n              )}\n              appearance={eachAppearance}\n              snapTo={snapTo}\n              hoverText={eachHoverText}\n              onDrag={this.handleDragLine}\n              onDragComplete={this.handleDragLineComplete}\n              edgeInteractiveCursor=\"react-stockcharts-move-cursor\"\n            />\n          );\n        })}\n        {tempLine}\n        <MouseLocationIndicator\n          enabled={enabled}\n          snap\n          snapTo={snapTo}\n          r={currentPositionRadius}\n          stroke={currentPositionStroke}\n          opacity={currentPositionOpacity}\n          strokeWidth={currentPositionStrokeWidth}\n          onMouseDown={this.handleStart}\n          onClick={this.handleEnd}\n          onMouseMove={this.handleDrawLine}\n        />\n      </g>\n    );\n  }\n}\n\nStandardDeviationChannel.propTypes = {\n  enabled: PropTypes.bool.isRequired,\n  snapTo: PropTypes.func,\n\n  onStart: PropTypes.func,\n  onComplete: PropTypes.func.isRequired,\n  onSelect: PropTypes.func,\n\n  currentPositionStroke: PropTypes.string,\n  currentPositionStrokeWidth: PropTypes.number,\n  currentPositionOpacity: PropTypes.number,\n  currentPositionRadius: PropTypes.number,\n\n  appearance: PropTypes.shape({\n    stroke: PropTypes.string,\n    strokeOpacity: PropTypes.number,\n    strokeWidth: PropTypes.number,\n    fill: PropTypes.string,\n    fillOpacity: PropTypes.number,\n    edgeStrokeWidth: PropTypes.number,\n    edgeStroke: PropTypes.string,\n    edgeFill: PropTypes.string,\n    r: PropTypes.number,\n  }).isRequired,\n\n  hoverText: PropTypes.object,\n  channels: PropTypes.array.isRequired,\n};\n\nStandardDeviationChannel.defaultProps = {\n  snapTo: d => d.close,\n  appearance: {\n    stroke: '#000000',\n    fillOpacity: 0.2,\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    fill: '#8AAFE2',\n    edgeStrokeWidth: 2,\n    edgeStroke: '#000000',\n    edgeFill: '#FFFFFF',\n    r: 5,\n  },\n\n  onStart: noop,\n  onComplete: noop,\n  onSelect: noop,\n\n  currentPositionStroke: '#000000',\n  currentPositionOpacity: 1,\n  currentPositionStrokeWidth: 3,\n  currentPositionRadius: 4,\n\n  hoverText: {\n    ...HoverTextNearMouse.defaultProps,\n    enable: true,\n    bgHeight: 'auto',\n    bgWidth: 'auto',\n    text: 'Click and drag the edge circles',\n    selectedText: '',\n  },\n  channels: [],\n};\n\nexport default StandardDeviationChannel;\n"]}