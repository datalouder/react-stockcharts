{"version":3,"sources":["../../../../../src/lib/interactive/components/StraightLine.js"],"names":["React","Component","PropTypes","GenericChartComponent","getMouseCanvas","isDefined","noop","hexToRGBA","getStrokeDasharray","strokeDashTypes","StraightLine","props","renderSVG","bind","drawOnCanvas","isHover","moreProps","tolerance","onHover","x1Value","x2Value","y1Value","y2Value","type","mouseXY","xScale","yScale","chartConfig","hovering","isHovering","ctx","stroke","strokeWidth","strokeOpacity","strokeDasharray","helper","x1","y1","x2","y2","lineWidth","strokeStyle","setLineDash","split","beginPath","moveTo","lineTo","selected","interactiveCursorClass","onDragStart","onDrag","onDragComplete","onUnHover","isHovering2","start","end","mouseX","mouseY","m","getSlope","b","getYIntercept","y","Math","min","max","line","generateLine","modLine","undefined","getXLineCoordinates","getRayCoordinates","getLineCoordinates","domain","xBegin","xFinish","yBegin","yFinish","propTypes","any","isRequired","string","number","oneOf","onEdge1Drag","func","onEdge2Drag","defaultClassName","r","edgeFill","edgeStroke","edgeStrokeWidth","withEdge","bool","children","defaultProps"],"mappings":"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","file":"StraightLine.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GenericChartComponent from '../../GenericChartComponent';\nimport { getMouseCanvas } from '../../GenericComponent';\n\nimport {\n  isDefined,\n  noop,\n  hexToRGBA,\n  getStrokeDasharray,\n  strokeDashTypes,\n} from '../../utils';\n\nclass StraightLine extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderSVG = this.renderSVG.bind(this);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n    this.isHover = this.isHover.bind(this);\n  }\n  isHover(moreProps) {\n    const { tolerance, onHover } = this.props;\n\n    if (isDefined(onHover)) {\n      const { x1Value, x2Value, y1Value, y2Value, type } = this.props;\n      const { mouseXY, xScale } = moreProps;\n      const {\n        chartConfig: { yScale },\n      } = moreProps;\n\n      const hovering = isHovering({\n        x1Value,\n        y1Value,\n        x2Value,\n        y2Value,\n        mouseXY,\n        type,\n        tolerance,\n        xScale,\n        yScale,\n      });\n\n      // console.log(\"hovering ->\", hovering);\n\n      return hovering;\n    }\n    return false;\n  }\n  drawOnCanvas(ctx, moreProps) {\n    const { stroke, strokeWidth, strokeOpacity, strokeDasharray } = this.props;\n    const { x1, y1, x2, y2 } = helper(this.props, moreProps);\n\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n    ctx.setLineDash(getStrokeDasharray(strokeDasharray).split(','));\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n  }\n  renderSVG(moreProps) {\n    const { stroke, strokeWidth, strokeOpacity, strokeDasharray } = this.props;\n\n    const lineWidth = strokeWidth;\n\n    const { x1, y1, x2, y2 } = helper(this.props, moreProps);\n    return (\n      <line\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke={stroke}\n        strokeWidth={lineWidth}\n        strokeDasharray={getStrokeDasharray(strokeDasharray)}\n        strokeOpacity={strokeOpacity}\n      />\n    );\n  }\n  render() {\n    const { selected, interactiveCursorClass } = this.props;\n    const { onDragStart, onDrag, onDragComplete, onHover, onUnHover } =\n      this.props;\n\n    return (\n      <GenericChartComponent\n        isHover={this.isHover}\n        svgDraw={this.renderSVG}\n        canvasToDraw={getMouseCanvas}\n        canvasDraw={this.drawOnCanvas}\n        interactiveCursorClass={interactiveCursorClass}\n        selected={selected}\n        onDragStart={onDragStart}\n        onDrag={onDrag}\n        onDragComplete={onDragComplete}\n        onHover={onHover}\n        onUnHover={onUnHover}\n        drawOn={['mousemove', 'pan', 'drag']}\n      />\n    );\n  }\n}\n\nexport function isHovering2(start, end, [mouseX, mouseY], tolerance) {\n  const m = getSlope(start, end);\n\n  if (isDefined(m)) {\n    const b = getYIntercept(m, end);\n    const y = m * mouseX + b;\n    return (\n      mouseY < y + tolerance &&\n      mouseY > y - tolerance &&\n      mouseX > Math.min(start[0], end[0]) - tolerance &&\n      mouseX < Math.max(start[0], end[0]) + tolerance\n    );\n  } else {\n    return (\n      mouseY >= Math.min(start[1], end[1]) &&\n      mouseY <= Math.max(start[1], end[1]) &&\n      mouseX < start[0] + tolerance &&\n      mouseX > start[0] - tolerance\n    );\n  }\n}\n\nexport function isHovering({\n  x1Value,\n  y1Value,\n  x2Value,\n  y2Value,\n  mouseXY,\n  type,\n  tolerance,\n  xScale,\n  yScale,\n}) {\n  const line = generateLine({\n    type,\n    start: [x1Value, y1Value],\n    end: [x2Value, y2Value],\n    xScale,\n    yScale,\n  });\n\n  const start = [xScale(line.x1), yScale(line.y1)];\n  const end = [xScale(line.x2), yScale(line.y2)];\n\n  const m = getSlope(start, end);\n  const [mouseX, mouseY] = mouseXY;\n\n  if (isDefined(m)) {\n    const b = getYIntercept(m, end);\n    const y = m * mouseX + b;\n\n    return (\n      mouseY < y + tolerance &&\n      mouseY > y - tolerance &&\n      mouseX > Math.min(start[0], end[0]) - tolerance &&\n      mouseX < Math.max(start[0], end[0]) + tolerance\n    );\n  } else {\n    return (\n      mouseY >= Math.min(start[1], end[1]) &&\n      mouseY <= Math.max(start[1], end[1]) &&\n      mouseX < start[0] + tolerance &&\n      mouseX > start[0] - tolerance\n    );\n  }\n}\n\nfunction helper(props, moreProps) {\n  const { x1Value, x2Value, y1Value, y2Value, type } = props;\n\n  const {\n    xScale,\n    chartConfig: { yScale },\n  } = moreProps;\n\n  const modLine = generateLine({\n    type,\n    start: [x1Value, y1Value],\n    end: [x2Value, y2Value],\n    xScale,\n    yScale,\n  });\n\n  const x1 = xScale(modLine.x1);\n  const y1 = yScale(modLine.y1);\n  const x2 = xScale(modLine.x2);\n  const y2 = yScale(modLine.y2);\n\n  return {\n    x1,\n    y1,\n    x2,\n    y2,\n  };\n}\n\nexport function getSlope(start, end) {\n  const m /* slope */ =\n    end[0] === start[0] ? undefined : (end[1] - start[1]) / (end[0] - start[0]);\n  return m;\n}\nexport function getYIntercept(m, end) {\n  const b /* y intercept */ = -1 * m * end[0] + end[1];\n  return b;\n}\n\nexport function generateLine({ type, start, end, xScale, yScale }) {\n  const m /* slope */ = getSlope(start, end);\n  // console.log(end[0] - start[0], m)\n  const b /* y intercept */ = getYIntercept(m, start);\n\n  switch (type) {\n    case 'XLINE':\n      return getXLineCoordinates({\n        type,\n        start,\n        end,\n        xScale,\n        yScale,\n        m,\n        b,\n      });\n    case 'RAY':\n      return getRayCoordinates({\n        type,\n        start,\n        end,\n        xScale,\n        yScale,\n        m,\n        b,\n      });\n    case 'LINE':\n      return getLineCoordinates({\n        type,\n        start,\n        end,\n        xScale,\n        yScale,\n        m,\n        b,\n      });\n  }\n}\n\nfunction getXLineCoordinates({ start, end, xScale, yScale, m, b }) {\n  const [xBegin, xFinish] = xScale.domain();\n  const [yBegin, yFinish] = yScale.domain();\n\n  if (end[0] === start[0]) {\n    return {\n      x1: end[0],\n      y1: yBegin,\n      x2: end[0],\n      y2: yFinish,\n    };\n  }\n  const [x1, x2] = end[0] > start[0] ? [xBegin, xFinish] : [xFinish, xBegin];\n\n  return {\n    x1,\n    y1: m * x1 + b,\n    x2,\n    y2: m * x2 + b,\n  };\n}\n\nfunction getRayCoordinates({ start, end, xScale, yScale, m, b }) {\n  const [xBegin, xFinish] = xScale.domain();\n  const [yBegin, yFinish] = yScale.domain();\n\n  const x1 = start[0];\n  if (end[0] === start[0]) {\n    return {\n      x1,\n      y1: start[1],\n      x2: x1,\n      y2: end[1] > start[1] ? yFinish : yBegin,\n    };\n  }\n\n  const x2 = end[0] > start[0] ? xFinish : xBegin;\n\n  return {\n    x1,\n    y1: m * x1 + b,\n    x2,\n    y2: m * x2 + b,\n  };\n}\n\nfunction getLineCoordinates({ start, end }) {\n  const [x1, y1] = start;\n  const [x2, y2] = end;\n  if (end[0] === start[0]) {\n    return {\n      x1,\n      y1: start[1],\n      x2: x1,\n      y2: end[1],\n    };\n  }\n\n  return {\n    x1,\n    y1,\n    x2,\n    y2,\n  };\n}\n\nStraightLine.propTypes = {\n  x1Value: PropTypes.any.isRequired,\n  x2Value: PropTypes.any.isRequired,\n  y1Value: PropTypes.any.isRequired,\n  y2Value: PropTypes.any.isRequired,\n\n  interactiveCursorClass: PropTypes.string,\n  stroke: PropTypes.string.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n  strokeOpacity: PropTypes.number.isRequired,\n  strokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\n  type: PropTypes.oneOf([\n    'XLINE', // extends from -Infinity to +Infinity\n    'RAY', // extends to +/-Infinity in one direction\n    'LINE', // extends between the set bounds\n  ]).isRequired,\n\n  onEdge1Drag: PropTypes.func.isRequired,\n  onEdge2Drag: PropTypes.func.isRequired,\n  onDragStart: PropTypes.func.isRequired,\n  onDrag: PropTypes.func.isRequired,\n  onDragComplete: PropTypes.func.isRequired,\n  onHover: PropTypes.func,\n  onUnHover: PropTypes.func,\n\n  defaultClassName: PropTypes.string,\n\n  r: PropTypes.number.isRequired,\n  edgeFill: PropTypes.string.isRequired,\n  edgeStroke: PropTypes.string.isRequired,\n  edgeStrokeWidth: PropTypes.number.isRequired,\n  withEdge: PropTypes.bool.isRequired,\n  children: PropTypes.func.isRequired,\n  tolerance: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n};\n\nStraightLine.defaultProps = {\n  onEdge1Drag: noop,\n  onEdge2Drag: noop,\n  onDragStart: noop,\n  onDrag: noop,\n  onDragComplete: noop,\n\n  edgeStrokeWidth: 3,\n  edgeStroke: '#000000',\n  edgeFill: '#FFFFFF',\n  r: 10,\n  withEdge: false,\n  strokeWidth: 1,\n  strokeDasharray: 'Solid',\n  children: noop,\n  tolerance: 7,\n  selected: false,\n};\n\nexport default StraightLine;\n"]}