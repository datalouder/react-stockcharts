{"version":3,"sources":["../../../../src/lib/interactive/ClickCallback.js"],"names":["React","Component","PropTypes","noop","GenericChartComponent","getMouseCanvas","ClickCallback","props","onMouseDown","onClick","onDoubleClick","onContextMenu","onMouseMove","onPan","onPanEnd","propTypes","disablePan","bool","isRequired","func","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,IAAT,QAAqB,UAArB;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,SAASC,cAAT,QAA+B,qBAA/B;;IAEMC,a;;;;;;;;;;;6BACK;AAAA,mBASH,KAAKC,KATF;AAAA,UAELC,WAFK,UAELA,WAFK;AAAA,UAGLC,OAHK,UAGLA,OAHK;AAAA,UAILC,aAJK,UAILA,aAJK;AAAA,UAKLC,aALK,UAKLA,aALK;AAAA,UAMLC,WANK,UAMLA,WANK;AAAA,UAOLC,KAPK,UAOLA,KAPK;AAAA,UAQLC,QARK,UAQLA,QARK;;;AAWP,aACE,oBAAC,qBAAD;AACE,qBAAaN,WADf;AAEE,iBAASC,OAFX;AAGE,uBAAeC,aAHjB;AAIE,uBAAeC,aAJjB;AAKE,qBAAaC,WALf;AAME,eAAOC,KANT;AAOE,kBAAUC,QAPZ;AAQE,iBAASX,IARX;AASE,oBAAYA,IATd;AAUE,sBAAcE,cAVhB;AAWE,gBAAQ,CAAC,WAAD,EAAc,KAAd;AAXV,QADF;AAeD;;;;EA3ByBJ,S;;AA8B5BK,cAAcS,SAAd,GAA0B;AACxBC,cAAYd,UAAUe,IAAV,CAAeC,UADH;AAExBV,eAAaN,UAAUiB,IAFC;AAGxBV,WAASP,UAAUiB,IAHK;AAIxBT,iBAAeR,UAAUiB,IAJD;AAKxBR,iBAAeT,UAAUiB,IALD;AAMxBP,eAAaV,UAAUiB,IANC;AAOxBN,SAAOX,UAAUiB,IAPO;AAQxBL,YAAUZ,UAAUiB;AARI,CAA1B;;AAWAb,cAAcc,YAAd,GAA6B;AAC3BJ,cAAY;AADe,CAA7B;;AAIA,eAAeV,aAAf","file":"ClickCallback.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { noop } from '../utils';\nimport GenericChartComponent from '../GenericChartComponent';\nimport { getMouseCanvas } from '../GenericComponent';\n\nclass ClickCallback extends Component {\n  render() {\n    const {\n      onMouseDown,\n      onClick,\n      onDoubleClick,\n      onContextMenu,\n      onMouseMove,\n      onPan,\n      onPanEnd,\n    } = this.props;\n\n    return (\n      <GenericChartComponent\n        onMouseDown={onMouseDown}\n        onClick={onClick}\n        onDoubleClick={onDoubleClick}\n        onContextMenu={onContextMenu}\n        onMouseMove={onMouseMove}\n        onPan={onPan}\n        onPanEnd={onPanEnd}\n        svgDraw={noop}\n        canvasDraw={noop}\n        canvasToDraw={getMouseCanvas}\n        drawOn={['mousemove', 'pan']}\n      />\n    );\n  }\n}\n\nClickCallback.propTypes = {\n  disablePan: PropTypes.bool.isRequired,\n  onMouseDown: PropTypes.func,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onPan: PropTypes.func,\n  onPanEnd: PropTypes.func,\n};\n\nClickCallback.defaultProps = {\n  disablePan: false,\n};\n\nexport default ClickCallback;\n"]}