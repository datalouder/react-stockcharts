{"version":3,"sources":["../../../../src/lib/interactive/EquidistantChannel.js"],"names":["React","Component","PropTypes","isDefined","isNotDefined","noop","terminate","saveNodeType","isHoverForInteractiveType","EachEquidistantChannel","getSlope","getYIntercept","MouseLocationIndicator","HoverTextNearMouse","EquidistantChannel","props","handleStart","bind","handleEnd","handleDrawChannel","handleDragChannel","handleDragChannelComplete","getSelectionState","nodes","state","index","newXYValue","setState","override","moreProps","channels","rest","newChannels","map","each","idx","selected","onComplete","xyValue","current","startXY","mouseMoved","dy","endXY","m","b","y","onStart","e","appearance","d","enabled","currentPositionRadius","currentPositionStroke","currentPositionOpacity","currentPositionStrokeWidth","hoverText","overrideIndex","tempChannel","eachAppearance","propTypes","bool","isRequired","func","onSelect","string","number","object","array","shape","stroke","strokeOpacity","strokeWidth","fill","fillOpacity","edgeStroke","edgeFill","edgeFill2","edgeStrokeWidth","r","defaultProps","enable","bgHeight","bgWidth","text"],"mappings":"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","file":"EquidistantChannel.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isDefined, isNotDefined, noop } from '../utils';\nimport { terminate, saveNodeType, isHoverForInteractiveType } from './utils';\nimport EachEquidistantChannel from './wrapper/EachEquidistantChannel';\nimport { getSlope, getYIntercept } from './components/StraightLine';\nimport MouseLocationIndicator from './components/MouseLocationIndicator';\nimport HoverTextNearMouse from './components/HoverTextNearMouse';\n\nclass EquidistantChannel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleDrawChannel = this.handleDrawChannel.bind(this);\n    this.handleDragChannel = this.handleDragChannel.bind(this);\n    this.handleDragChannelComplete = this.handleDragChannelComplete.bind(this);\n\n    this.terminate = terminate.bind(this);\n    this.saveNodeType = saveNodeType.bind(this);\n\n    this.getSelectionState = isHoverForInteractiveType('channels').bind(this);\n\n    this.nodes = [];\n    this.state = {};\n  }\n  handleDragChannel(index, newXYValue) {\n    this.setState({\n      override: {\n        index,\n        ...newXYValue,\n      },\n    });\n  }\n  handleDragChannelComplete(moreProps) {\n    const { override } = this.state;\n    const { channels } = this.props;\n\n    if (isDefined(override)) {\n      const { index, ...rest } = override;\n      const newChannels = channels.map((each, idx) =>\n        idx === index ? { ...each, ...rest, selected: true } : each\n      );\n      this.setState(\n        {\n          override: null,\n        },\n        () => {\n          this.props.onComplete(newChannels, moreProps);\n        }\n      );\n    }\n  }\n  handleDrawChannel(xyValue) {\n    const { current } = this.state;\n\n    if (isDefined(current) && isDefined(current.startXY)) {\n      this.mouseMoved = true;\n      if (isNotDefined(current.dy)) {\n        this.setState({\n          current: {\n            startXY: current.startXY,\n            endXY: xyValue,\n          },\n        });\n      } else {\n        const m = getSlope(current.startXY, current.endXY);\n        const b = getYIntercept(m, current.endXY);\n        const y = m * xyValue[0] + b;\n        const dy = xyValue[1] - y;\n\n        this.setState({\n          current: {\n            ...current,\n            dy,\n          },\n        });\n      }\n    }\n  }\n  handleStart(xyValue) {\n    const { current } = this.state;\n\n    if (isNotDefined(current) || isNotDefined(current.startXY)) {\n      this.mouseMoved = false;\n      this.setState(\n        {\n          current: {\n            startXY: xyValue,\n            endXY: null,\n          },\n        },\n        () => {\n          this.props.onStart();\n        }\n      );\n    }\n  }\n  handleEnd(xyValue, moreProps, e) {\n    const { current } = this.state;\n    const { channels, appearance } = this.props;\n\n    if (this.mouseMoved && isDefined(current) && isDefined(current.startXY)) {\n      if (isNotDefined(current.dy)) {\n        this.setState({\n          current: {\n            ...current,\n            dy: 0,\n          },\n        });\n      } else {\n        const newChannels = [\n          ...channels.map(d => ({ ...d, selected: false })),\n          {\n            ...current,\n            selected: true,\n            appearance,\n          },\n        ];\n\n        this.setState(\n          {\n            current: null,\n          },\n          () => {\n            this.props.onComplete(newChannels, moreProps, e);\n          }\n        );\n      }\n    }\n  }\n  render() {\n    const { appearance } = this.props;\n    const { enabled } = this.props;\n    const { currentPositionRadius, currentPositionStroke } = this.props;\n    const { currentPositionOpacity, currentPositionStrokeWidth } = this.props;\n    const { channels, hoverText } = this.props;\n    const { current, override } = this.state;\n    const overrideIndex = isDefined(override) ? override.index : null;\n\n    const tempChannel =\n      isDefined(current) && isDefined(current.endXY) ? (\n        <EachEquidistantChannel\n          interactive={false}\n          {...current}\n          appearance={appearance}\n          hoverText={hoverText}\n        />\n      ) : null;\n\n    return (\n      <g>\n        {channels.map((each, idx) => {\n          const eachAppearance = isDefined(each.appearance)\n            ? { ...appearance, ...each.appearance }\n            : appearance;\n\n          return (\n            <EachEquidistantChannel\n              key={idx}\n              ref={this.saveNodeType(idx)}\n              index={idx}\n              selected={each.selected}\n              hoverText={hoverText}\n              {...(idx === overrideIndex ? override : each)}\n              appearance={eachAppearance}\n              onDrag={this.handleDragChannel}\n              onDragComplete={this.handleDragChannelComplete}\n            />\n          );\n        })}\n        {tempChannel}\n        <MouseLocationIndicator\n          enabled={enabled}\n          snap={false}\n          r={currentPositionRadius}\n          stroke={currentPositionStroke}\n          opacity={currentPositionOpacity}\n          strokeWidth={currentPositionStrokeWidth}\n          onMouseDown={this.handleStart}\n          onClick={this.handleEnd}\n          onMouseMove={this.handleDrawChannel}\n        />\n      </g>\n    );\n  }\n}\n\nEquidistantChannel.propTypes = {\n  enabled: PropTypes.bool.isRequired,\n\n  onStart: PropTypes.func.isRequired,\n  onComplete: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n\n  currentPositionStroke: PropTypes.string,\n  currentPositionStrokeWidth: PropTypes.number,\n  currentPositionOpacity: PropTypes.number,\n  currentPositionRadius: PropTypes.number,\n\n  hoverText: PropTypes.object.isRequired,\n  channels: PropTypes.array.isRequired,\n\n  appearance: PropTypes.shape({\n    stroke: PropTypes.string.isRequired,\n    strokeOpacity: PropTypes.number.isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    fill: PropTypes.string.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    edgeStroke: PropTypes.string.isRequired,\n    edgeFill: PropTypes.string.isRequired,\n    edgeFill2: PropTypes.string.isRequired,\n    edgeStrokeWidth: PropTypes.number.isRequired,\n    r: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nEquidistantChannel.defaultProps = {\n  onStart: noop,\n  onComplete: noop,\n  onSelect: noop,\n\n  currentPositionStroke: '#000000',\n  currentPositionOpacity: 1,\n  currentPositionStrokeWidth: 3,\n  currentPositionRadius: 4,\n\n  hoverText: {\n    ...HoverTextNearMouse.defaultProps,\n    enable: true,\n    bgHeight: 18,\n    bgWidth: 120,\n    text: 'Click to select object',\n  },\n  channels: [],\n  appearance: {\n    stroke: '#000000',\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    fill: '#8AAFE2',\n    fillOpacity: 0.7,\n    edgeStroke: '#000000',\n    edgeFill: '#FFFFFF',\n    edgeFill2: '#250B98',\n    edgeStrokeWidth: 1,\n    r: 5,\n  },\n};\n\nexport default EquidistantChannel;\n"]}