{"version":3,"sources":["../../../../src/lib/interactive/FibonacciRetracement.js"],"names":["React","Component","PropTypes","isDefined","isNotDefined","noop","terminate","saveNodeType","isHoverForInteractiveType","EachFibRetracement","MouseLocationIndicator","HoverTextNearMouse","FibonacciRetracement","props","handleStart","bind","handleEnd","handleDrawRetracement","handleEdge1Drag","handleEdge2Drag","handleDrag","handleDragComplete","getSelectionState","nodes","state","xyValue","current","x1","mouseMoved","setState","x2","y2","index","xy","override","echo","newXYValue","origXYValue","retracements","dx","x1Value","y1","x2Value","moreProps","rest","newRetracements","map","each","idx","selected","onComplete","onStart","e","appearance","type","concat","currentPositionStroke","currentPositionOpacity","currentPositionStrokeWidth","currentPositionRadius","enabled","hoverText","overrideIndex","hoverTextWidthDefault","defaultProps","currentRetracement","eachAppearance","eachHoverText","propTypes","bool","isRequired","width","number","func","onSelect","oneOf","object","string","array","shape","stroke","strokeWidth","strokeOpacity","fontFamily","fontSize","fontFill","edgeStroke","edgeFill","nsEdgeFill","edgeStrokeWidth","r","enable","bgHeight","bgWidth","text","selectedText"],"mappings":"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","file":"FibonacciRetracement.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isDefined, isNotDefined, noop } from '../utils';\nimport { terminate, saveNodeType, isHoverForInteractiveType } from './utils';\nimport EachFibRetracement from './wrapper/EachFibRetracement';\nimport MouseLocationIndicator from './components/MouseLocationIndicator';\nimport HoverTextNearMouse from './components/HoverTextNearMouse';\n\nclass FibonacciRetracement extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleDrawRetracement = this.handleDrawRetracement.bind(this);\n\n    this.handleEdge1Drag = this.handleEdge1Drag.bind(this);\n    this.handleEdge2Drag = this.handleEdge2Drag.bind(this);\n\n    this.handleDrag = this.handleDrag.bind(this);\n    this.handleDragComplete = this.handleDragComplete.bind(this);\n\n    this.terminate = terminate.bind(this);\n    this.getSelectionState =\n      isHoverForInteractiveType('retracements').bind(this);\n\n    this.saveNodeType = saveNodeType.bind(this);\n    this.nodes = [];\n\n    this.state = {};\n  }\n  handleDrawRetracement(xyValue) {\n    const { current } = this.state;\n    if (isDefined(current) && isDefined(current.x1)) {\n      this.mouseMoved = true;\n      this.setState({\n        current: {\n          ...current,\n          x2: xyValue[0],\n          y2: xyValue[1],\n        },\n      });\n    }\n  }\n  handleDrag(index, xy) {\n    this.setState({\n      override: {\n        index,\n        ...xy,\n      },\n    });\n  }\n  handleEdge1Drag(echo, newXYValue, origXYValue) {\n    const { retracements } = this.props;\n    const { index } = echo;\n\n    const dx = origXYValue.x1Value - newXYValue.x1Value;\n\n    this.setState({\n      override: {\n        index,\n        x1: retracements[index].x1 - dx,\n        y1: retracements[index].y1,\n        x2: retracements[index].x2,\n        y2: retracements[index].y2,\n      },\n    });\n  }\n  handleEdge2Drag(echo, newXYValue, origXYValue) {\n    const { retracements } = this.props;\n    const { index } = echo;\n\n    const dx = origXYValue.x2Value - newXYValue.x2Value;\n\n    this.setState({\n      override: {\n        index,\n        x1: retracements[index].x1,\n        y1: retracements[index].y1,\n        x2: retracements[index].x2 - dx,\n        y2: retracements[index].y2,\n      },\n    });\n  }\n  handleDragComplete(moreProps) {\n    const { retracements } = this.props;\n    const { override } = this.state;\n    if (isDefined(override)) {\n      const { index, ...rest } = override;\n\n      const newRetracements = retracements.map((each, idx) =>\n        idx === index ? { ...each, ...rest, selected: true } : each\n      );\n      this.setState(\n        {\n          override: null,\n        },\n        () => {\n          this.props.onComplete(newRetracements, moreProps);\n        }\n      );\n    }\n  }\n  handleStart(xyValue, moreProps) {\n    const { current } = this.state;\n    if (isNotDefined(current) || isNotDefined(current.x1)) {\n      this.mouseMoved = false;\n      this.setState(\n        {\n          current: {\n            x1: xyValue[0],\n            y1: xyValue[1],\n            x2: null,\n            y2: null,\n          },\n        },\n        () => {\n          this.props.onStart(moreProps);\n        }\n      );\n    }\n  }\n  handleEnd(xyValue, moreProps, e) {\n    const { retracements, appearance, type } = this.props;\n    const { current } = this.state;\n\n    if (this.mouseMoved && isDefined(current) && isDefined(current.x1)) {\n      const newRetracements = retracements.concat({\n        ...current,\n        x2: xyValue[0],\n        y2: xyValue[1],\n        selected: true,\n        appearance,\n        type,\n      });\n\n      this.setState(\n        {\n          current: null,\n        },\n        () => {\n          this.props.onComplete(newRetracements, moreProps, e);\n        }\n      );\n    }\n  }\n  render() {\n    const { current, override } = this.state;\n    const { retracements } = this.props;\n\n    const { appearance, type } = this.props;\n    const {\n      currentPositionStroke,\n      currentPositionOpacity,\n      currentPositionStrokeWidth,\n      currentPositionRadius,\n    } = this.props;\n\n    const { enabled, hoverText } = this.props;\n    const overrideIndex = isDefined(override) ? override.index : null;\n    const hoverTextWidthDefault = {\n      ...FibonacciRetracement.defaultProps.hoverText,\n      ...hoverText,\n    };\n\n    const currentRetracement =\n      isDefined(current) && isDefined(current.x2) ? (\n        <EachFibRetracement\n          interactive={false}\n          type={type}\n          appearance={appearance}\n          hoverText={hoverTextWidthDefault}\n          {...current}\n        />\n      ) : null;\n    return (\n      <g>\n        {retracements.map((each, idx) => {\n          const eachAppearance = isDefined(each.appearance)\n            ? { ...appearance, ...each.appearance }\n            : appearance;\n\n          const eachHoverText = isDefined(each.hoverText)\n            ? { ...hoverTextWidthDefault, ...each.hoverText }\n            : hoverTextWidthDefault;\n\n          return (\n            <EachFibRetracement\n              key={idx}\n              ref={this.saveNodeType(idx)}\n              index={idx}\n              type={each.type}\n              selected={each.selected}\n              {...(idx === overrideIndex ? override : each)}\n              hoverText={eachHoverText}\n              appearance={eachAppearance}\n              onDrag={this.handleDrag}\n              onDragComplete={this.handleDragComplete}\n            />\n          );\n        })}\n        {currentRetracement}\n        <MouseLocationIndicator\n          enabled={enabled}\n          snap={false}\n          r={currentPositionRadius}\n          stroke={currentPositionStroke}\n          opacity={currentPositionOpacity}\n          strokeWidth={currentPositionStrokeWidth}\n          onMouseDown={this.handleStart}\n          onClick={this.handleEnd}\n          onMouseMove={this.handleDrawRetracement}\n        />\n      </g>\n    );\n  }\n}\n\n// onClick={this.handleClick}\n\nFibonacciRetracement.propTypes = {\n  enabled: PropTypes.bool.isRequired,\n  width: PropTypes.number,\n\n  onStart: PropTypes.func,\n  onComplete: PropTypes.func,\n  onSelect: PropTypes.func,\n\n  type: PropTypes.oneOf([\n    'EXTEND', // extends from -Infinity to +Infinity\n    'RAY', // extends to +/-Infinity in one direction\n    'BOUND', // extends between the set bounds\n  ]).isRequired,\n  hoverText: PropTypes.object.isRequired,\n\n  currentPositionStroke: PropTypes.string,\n  currentPositionStrokeWidth: PropTypes.number,\n  currentPositionOpacity: PropTypes.number,\n  currentPositionRadius: PropTypes.number,\n\n  retracements: PropTypes.array.isRequired,\n\n  appearance: PropTypes.shape({\n    stroke: PropTypes.string.isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    strokeOpacity: PropTypes.number.isRequired,\n    fontFamily: PropTypes.string.isRequired,\n    fontSize: PropTypes.number.isRequired,\n    fontFill: PropTypes.string.isRequired,\n    edgeStroke: PropTypes.string.isRequired,\n    edgeFill: PropTypes.string.isRequired,\n    nsEdgeFill: PropTypes.string.isRequired,\n    edgeStrokeWidth: PropTypes.number.isRequired,\n    r: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nFibonacciRetracement.defaultProps = {\n  enabled: true,\n  type: 'RAY',\n  retracements: [],\n\n  onStart: noop,\n  onComplete: noop,\n  onSelect: noop,\n\n  hoverText: {\n    ...HoverTextNearMouse.defaultProps,\n    enable: true,\n    bgHeight: 'auto',\n    bgWidth: 'auto',\n    text: 'Click to select object',\n    selectedText: '',\n  },\n  currentPositionStroke: '#000000',\n  currentPositionOpacity: 1,\n  currentPositionStrokeWidth: 3,\n  currentPositionRadius: 4,\n\n  appearance: {\n    stroke: '#000000',\n    strokeWidth: 1,\n    strokeOpacity: 1,\n    fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\n    fontSize: 11,\n    fontFill: '#000000',\n    edgeStroke: '#000000',\n    edgeFill: '#FFFFFF',\n    nsEdgeFill: '#000000',\n    edgeStrokeWidth: 1,\n    r: 5,\n  },\n};\n\nexport default FibonacciRetracement;\n"]}