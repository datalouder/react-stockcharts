{"version":3,"sources":["../../../../src/lib/utils/ChartDataUtil.js"],"names":["React","extent","set","flattenDeep","Chart","last","isObject","getClosestItem","zipper","isDefined","isNotDefined","functor","mapObject","find","shallowEqual","getChartOrigin","origin","contextWidth","contextHeight","originCoordinates","getDimensions","chartProps","width","height","chartHeight","availableHeight","values","func","obj","d","isArraySize2AndNumber","yExtentsProp","Array","isArray","length","a","b","getNewChartConfig","innerDimension","children","existingChartConfig","Children","map","each","type","toString","defaultProps","props","id","padding","yExtents","yScaleProp","yScale","flipYScale","yExtentsCalculator","copy","yPan","yPanEnabled","undefined","prevChartConfig","originalYExtentsProp","domain","filter","getCurrentCharts","chartConfig","mouseXY","currentCharts","top","eachConfig","bottom","config","setRange","scale","rangeRoundPoints","invert","isNaN","Error","rangeRound","range","yDomainFromYExtents","plotData","yValues","eachExtent","allYValues","realYDomain","getChartConfigWithUpdatedYScales","xDomain","dy","chartsToPan","xAccessor","displayXAccessor","fullData","yDomains","yDomainDY","prevYDomain","combine","another","indexOf","newYScale","updatedChartConfig","getCurrentItem","xScale","xValue","item","idx","x","Math","abs","reduce","getXValue","value","round"],"mappings":"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","file":"ChartDataUtil.js","sourcesContent":["import React from 'react';\nimport { extent } from 'd3-array';\nimport { set } from 'd3-collection';\nimport flattenDeep from 'lodash.flattendeep';\n\nimport Chart from '../Chart';\n\nimport {\n  last,\n  isObject,\n  getClosestItem,\n  zipper,\n  isDefined,\n  isNotDefined,\n  functor,\n  mapObject,\n  find,\n  shallowEqual,\n} from './index';\n\nexport function getChartOrigin(origin, contextWidth, contextHeight) {\n  const originCoordinates =\n    typeof origin === 'function' ? origin(contextWidth, contextHeight) : origin;\n  return originCoordinates;\n}\n\nexport function getDimensions({ width, height }, chartProps) {\n  const chartHeight = chartProps.height || height;\n\n  return {\n    availableHeight: height,\n    width,\n    height: chartHeight,\n  };\n}\n\nfunction values(func) {\n  return d => {\n    const obj = func(d);\n    if (isObject(obj)) {\n      return mapObject(obj);\n    }\n    return obj;\n  };\n}\n\nfunction isArraySize2AndNumber(yExtentsProp) {\n  if (Array.isArray(yExtentsProp) && yExtentsProp.length === 2) {\n    const [a, b] = yExtentsProp;\n    return typeof a == 'number' && typeof b == 'number';\n  }\n  return false;\n}\n\nexport function getNewChartConfig(\n  innerDimension,\n  children,\n  existingChartConfig = []\n) {\n  return React.Children.map(children, each => {\n    if (each && each.type.toString() === Chart.toString()) {\n      const chartProps = {\n        ...Chart.defaultProps,\n        ...each.props,\n      };\n      const {\n        id,\n        origin,\n        padding,\n        yExtents: yExtentsProp,\n        yScale: yScaleProp,\n        flipYScale,\n        yExtentsCalculator,\n      } = chartProps;\n\n      const yScale = yScaleProp.copy();\n      const { width, height, availableHeight } = getDimensions(\n        innerDimension,\n        chartProps\n      );\n\n      const { yPan } = chartProps;\n      let { yPanEnabled } = chartProps;\n      // var { yMousePointerRectWidth: rectWidth, yMousePointerRectHeight: rectHeight, yMousePointerArrowWidth: arrowWidth } = each.props;\n      // var mouseCoordinates = { at, yDisplayFormat, rectHeight, rectWidth, arrowWidth };\n      const yExtents = isDefined(yExtentsProp)\n        ? (Array.isArray(yExtentsProp) ? yExtentsProp : [yExtentsProp]).map(\n            functor\n          )\n        : undefined;\n\n      const prevChartConfig = find(existingChartConfig, d => d.id === id);\n\n      if (isArraySize2AndNumber(yExtentsProp)) {\n        if (\n          isDefined(prevChartConfig) &&\n          prevChartConfig.yPan &&\n          prevChartConfig.yPanEnabled &&\n          yPan &&\n          yPanEnabled &&\n          shallowEqual(prevChartConfig.originalYExtentsProp, yExtentsProp)\n        ) {\n          // console.log(prevChartConfig.originalYExtentsProp, yExtentsProp)\n          // console.log(prevChartConfig.yScale.domain())\n          yScale.domain(prevChartConfig.yScale.domain());\n        } else {\n          const [a, b] = yExtentsProp;\n          yScale.domain([a, b]);\n        }\n      } else if (isDefined(prevChartConfig) && prevChartConfig.yPanEnabled) {\n        if (isArraySize2AndNumber(prevChartConfig.originalYExtentsProp)) {\n          // do nothing\n        } else {\n          yScale.domain(prevChartConfig.yScale.domain());\n          yPanEnabled = true;\n        }\n      }\n\n      return {\n        id,\n        origin: functor(origin)(width, availableHeight),\n        padding,\n        originalYExtentsProp: yExtentsProp,\n        yExtents,\n        yExtentsCalculator,\n        flipYScale,\n        // yScale: setRange(yScale.copy(), height, padding, flipYScale),\n        yScale: yScale,\n        yPan,\n        yPanEnabled,\n        // mouseCoordinates,\n        width,\n        height,\n      };\n    }\n    return undefined;\n  }).filter(each => isDefined(each));\n}\nexport function getCurrentCharts(chartConfig, mouseXY) {\n  const currentCharts = chartConfig\n    .filter(eachConfig => {\n      const top = eachConfig.origin[1];\n      const bottom = top + eachConfig.height;\n      return mouseXY[1] > top && mouseXY[1] < bottom;\n    })\n    .map(config => config.id);\n\n  return currentCharts;\n}\n\nfunction setRange(scale, height, padding, flipYScale) {\n  if (scale.rangeRoundPoints || isNotDefined(scale.invert)) {\n    if (isNaN(padding))\n      throw new Error('padding has to be a number for ordinal scale');\n    if (scale.rangeRoundPoints)\n      scale.rangeRoundPoints(flipYScale ? [0, height] : [height, 0], padding);\n    if (scale.rangeRound)\n      scale.range(flipYScale ? [0, height] : [height, 0]).padding(padding);\n  } else {\n    const { top, bottom } = isNaN(padding)\n      ? padding\n      : { top: padding, bottom: padding };\n\n    scale.range(flipYScale ? [top, height - bottom] : [height - bottom, top]);\n  }\n  return scale;\n}\n\nfunction yDomainFromYExtents(yExtents, yScale, plotData) {\n  const yValues = yExtents.map(eachExtent => plotData.map(values(eachExtent)));\n\n  const allYValues = flattenDeep(yValues);\n  // console.log(allYValues)\n  const realYDomain = yScale.invert\n    ? extent(allYValues)\n    : set(allYValues).values();\n\n  return realYDomain;\n}\n\nexport function getChartConfigWithUpdatedYScales(\n  chartConfig,\n  { plotData, xAccessor, displayXAccessor, fullData },\n  xDomain,\n  dy,\n  chartsToPan\n) {\n  const yDomains = chartConfig.map(\n    ({ yExtentsCalculator, yExtents, yScale }) => {\n      const realYDomain = isDefined(yExtentsCalculator)\n        ? yExtentsCalculator({\n            plotData,\n            xDomain,\n            xAccessor,\n            displayXAccessor,\n            fullData,\n          })\n        : yDomainFromYExtents(yExtents, yScale, plotData);\n\n      // console.log(\"yScale.domain() ->\", yScale.domain())\n\n      const yDomainDY = isDefined(dy)\n        ? yScale\n            .range()\n            .map(each => each - dy)\n            .map(yScale.invert)\n        : yScale.domain();\n      return {\n        realYDomain,\n        yDomainDY,\n        prevYDomain: yScale.domain(),\n      };\n    }\n  );\n\n  const combine = zipper().combine(\n    (config, { realYDomain, yDomainDY, prevYDomain }) => {\n      const {\n        id,\n        padding,\n        height,\n        yScale,\n        yPan,\n        flipYScale,\n        yPanEnabled = false,\n      } = config;\n\n      const another = isDefined(chartsToPan)\n        ? chartsToPan.indexOf(id) > -1\n        : true;\n      const domain =\n        yPan && yPanEnabled ? (another ? yDomainDY : prevYDomain) : realYDomain;\n\n      // console.log(id, yPan, yPanEnabled, another);\n      // console.log(domain, realYDomain, prevYDomain);\n      const newYScale = setRange(\n        yScale.copy().domain(domain),\n        height,\n        padding,\n        flipYScale\n      );\n      return {\n        ...config,\n        yScale: newYScale,\n        realYDomain: realYDomain,\n      };\n      // return { ...config, yScale: yScale.copy().domain(domain).range([height - padding, padding]) };\n    }\n  );\n\n  const updatedChartConfig = combine(chartConfig, yDomains);\n  // console.error(yDomains, dy, chartsToPan, updatedChartConfig.map(d => d.yScale.domain()));\n  // console.log(updatedChartConfig.map(d => ({ id: d.id, domain: d.yScale.domain() })))\n\n  return updatedChartConfig;\n}\n\nexport function getCurrentItem(xScale, xAccessor, mouseXY, plotData) {\n  let xValue, item;\n  if (xScale.invert) {\n    xValue = xScale.invert(mouseXY[0]);\n    item = getClosestItem(plotData, xValue, xAccessor);\n  } else {\n    const d = xScale\n      .range()\n      .map((d, idx) => ({ x: Math.abs(d - mouseXY[0]), idx }))\n      .reduce((a, b) => (a.x < b.x ? a : b));\n    item = isDefined(d) ? plotData[d.idx] : plotData[0];\n    // console.log(d, item);\n  }\n  return item;\n}\n\nexport function getXValue(xScale, xAccessor, mouseXY, plotData) {\n  let xValue, item;\n  if (xScale.invert) {\n    xValue = xScale.invert(mouseXY[0]);\n    if (xValue > xAccessor(last(plotData)) && xScale.value) {\n      return Math.round(xValue);\n    } else {\n      item = getClosestItem(plotData, xValue, xAccessor);\n    }\n  } else {\n    const d = xScale\n      .range()\n      .map((d, idx) => ({ x: Math.abs(d - mouseXY[0]), idx }))\n      .reduce((a, b) => (a.x < b.x ? a : b));\n    item = isDefined(d) ? plotData[d.idx] : plotData[0];\n    // console.log(d, item);\n  }\n  return xAccessor(item);\n}\n"]}