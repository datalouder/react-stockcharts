{"version":3,"sources":["../../../../src/lib/coordinates/EdgeCoordinateV2.js"],"names":["React","hexToRGBA","isDefined","renderSVG","props","className","edge","helper","line","coordinateBase","coordinate","opacity","stroke","x1","y1","x2","y2","rectWidth","rectHeight","arrowWidth","path","orient","edgeXRect","edgeYRect","fill","edgeXText","edgeYText","textAnchor","fontFamily","fontSize","textFill","displayCoordinate","show","type","edgeAt","hideLine","lineStroke","lineOpacity","dx","undefined","drawOnCanvas","ctx","fillStyle","x","y","beginPath","moveTo","lineTo","closePath","rect","font","textAlign","textBaseline","fillText","strokeStyle"],"mappings":"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","file":"EdgeCoordinateV2.js","sourcesContent":["import React from 'react';\n\nimport { hexToRGBA, isDefined } from '../utils';\n\n/* eslint-disable react/prop-types */\nexport function renderSVG(props) {\n  const { className } = props;\n\n  const edge = helper(props);\n  if (edge === null) return null;\n  let line, coordinateBase, coordinate;\n\n  if (isDefined(edge.line)) {\n    line = (\n      <line\n        className=\"react-stockcharts-cross-hair\"\n        opacity={edge.line.opacity}\n        stroke={edge.line.stroke}\n        x1={edge.line.x1}\n        y1={edge.line.y1}\n        x2={edge.line.x2}\n        y2={edge.line.y2}\n      />\n    );\n  }\n  if (isDefined(edge.coordinateBase)) {\n    const { rectWidth, rectHeight, arrowWidth } = edge.coordinateBase;\n\n    const path =\n      edge.orient === 'left'\n        ? `M0,0L0,${rectHeight}L${rectWidth},${rectHeight}L${\n            rectWidth + arrowWidth\n          },10L${rectWidth},0L0,0L0,0`\n        : `M0,${arrowWidth}L${arrowWidth},${rectHeight}L${\n            rectWidth + arrowWidth\n          },${rectHeight}L${\n            rectWidth + arrowWidth\n          },0L${arrowWidth},0L0,${arrowWidth}`;\n\n    coordinateBase =\n      edge.orient === 'left' || edge.orient === 'right' ? (\n        <g\n          transform={`translate(${edge.coordinateBase.edgeXRect},${edge.coordinateBase.edgeYRect})`}\n        >\n          <path\n            d={path}\n            key={1}\n            className=\"react-stockchart-text-background\"\n            height={rectHeight}\n            width={rectWidth}\n            fill={edge.coordinateBase.fill}\n            opacity={edge.coordinateBase.opacity}\n          />\n        </g>\n      ) : (\n        <rect\n          key={1}\n          className=\"react-stockchart-text-background\"\n          x={edge.coordinateBase.edgeXRect}\n          y={edge.coordinateBase.edgeYRect}\n          height={rectHeight}\n          width={rectWidth}\n          fill={edge.coordinateBase.fill}\n          opacity={edge.coordinateBase.opacity}\n        />\n      );\n\n    coordinate = (\n      <text\n        key={2}\n        x={edge.coordinate.edgeXText}\n        y={edge.coordinate.edgeYText}\n        textAnchor={edge.coordinate.textAnchor}\n        fontFamily={edge.coordinate.fontFamily}\n        fontSize={edge.coordinate.fontSize}\n        dy=\".32em\"\n        fill={edge.coordinate.textFill}\n      >\n        {edge.coordinate.displayCoordinate}\n      </text>\n    );\n  }\n  return (\n    <g className={className}>\n      {line}\n      {coordinateBase}\n      {coordinate}\n    </g>\n  );\n}\n/* eslint-enable react/prop-types */\n\nfunction helper(props) {\n  const {\n    coordinate: displayCoordinate,\n    show,\n    type,\n    orient,\n    edgeAt,\n    hideLine,\n  } = props;\n  const {\n    fill,\n    opacity,\n    fontFamily,\n    fontSize,\n    textFill,\n    lineStroke,\n    lineOpacity,\n    arrowWidth,\n  } = props;\n  const { rectWidth, rectHeight } = props;\n  const { x1, y1, x2, y2, dx } = props;\n\n  if (!show) return null;\n\n  // rectWidth = rectWidth ? rectWidth : (type === \"horizontal\") ? 60 : 100;\n\n  let edgeXRect, edgeYRect, edgeXText, edgeYText;\n\n  if (type === 'horizontal') {\n    edgeXRect =\n      dx +\n      (orient === 'right' ? edgeAt + 1 : edgeAt - rectWidth - arrowWidth - 1);\n    edgeYRect = y1 - rectHeight / 2;\n    edgeXText =\n      dx +\n      (orient === 'right'\n        ? edgeAt + rectWidth / 2 + arrowWidth\n        : edgeAt - rectWidth / 2 - arrowWidth);\n    edgeYText = y1;\n  } else {\n    edgeXRect = x1 - rectWidth / 2;\n    edgeYRect = orient === 'bottom' ? edgeAt : edgeAt - rectHeight;\n    edgeXText = x1;\n    edgeYText =\n      orient === 'bottom' ? edgeAt + rectHeight / 2 : edgeAt - rectHeight / 2;\n  }\n  let coordinateBase, coordinate;\n  const textAnchor = 'middle';\n  if (isDefined(displayCoordinate)) {\n    coordinateBase = {\n      edgeXRect,\n      edgeYRect,\n      rectHeight,\n      rectWidth,\n      fill,\n      opacity,\n      arrowWidth,\n    };\n    coordinate = {\n      edgeXText,\n      edgeYText,\n      textAnchor,\n      fontFamily,\n      fontSize,\n      textFill,\n      displayCoordinate,\n    };\n  }\n\n  const line = hideLine\n    ? undefined\n    : {\n        opacity: lineOpacity,\n        stroke: lineStroke,\n        x1,\n        y1,\n        x2,\n        y2,\n      };\n  return {\n    coordinateBase,\n    coordinate,\n    line,\n    orient,\n  };\n}\n\nexport function drawOnCanvas(ctx, props) {\n  const edge = helper(props);\n\n  if (edge === null) return;\n\n  if (isDefined(edge.coordinateBase)) {\n    const { rectWidth, rectHeight, arrowWidth } = edge.coordinateBase;\n\n    ctx.fillStyle = hexToRGBA(\n      edge.coordinateBase.fill,\n      edge.coordinateBase.opacity\n    );\n\n    const x = edge.coordinateBase.edgeXRect;\n    const y = edge.coordinateBase.edgeYRect;\n\n    ctx.beginPath();\n\n    if (edge.orient === 'right') {\n      ctx.moveTo(x, y + rectHeight / 2);\n      ctx.lineTo(x + arrowWidth, y);\n      ctx.lineTo(x + rectWidth + arrowWidth, y);\n      ctx.lineTo(x + rectWidth + arrowWidth, y + rectHeight);\n      ctx.lineTo(x + arrowWidth, y + rectHeight);\n      ctx.closePath();\n    } else if (edge.orient === 'left') {\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + rectWidth, y);\n      ctx.lineTo(x + rectWidth + arrowWidth, y + rectHeight / 2);\n      ctx.lineTo(x + rectWidth, y + rectHeight);\n      ctx.lineTo(x, y + rectHeight);\n      ctx.closePath();\n    } else {\n      ctx.rect(x, y, rectWidth, rectHeight);\n    }\n    ctx.fill();\n\n    ctx.font = `${edge.coordinate.fontSize}px ${edge.coordinate.fontFamily}`;\n    ctx.fillStyle = edge.coordinate.textFill;\n    ctx.textAlign =\n      edge.coordinate.textAnchor === 'middle'\n        ? 'center'\n        : edge.coordinate.textAnchor;\n    ctx.textBaseline = 'middle';\n\n    ctx.fillText(\n      edge.coordinate.displayCoordinate,\n      edge.coordinate.edgeXText,\n      edge.coordinate.edgeYText\n    );\n  }\n  if (isDefined(edge.line)) {\n    ctx.strokeStyle = hexToRGBA(edge.line.stroke, edge.line.opacity);\n\n    ctx.beginPath();\n    ctx.moveTo(edge.line.x1, edge.line.y1);\n    ctx.lineTo(edge.line.x2, edge.line.y2);\n    ctx.stroke();\n  }\n}\n\n// export default EdgeCoordinate;\n"]}