{"version":3,"sources":["../../../../src/lib/coordinates/MouseCoordinateXV2.js"],"names":["React","Component","PropTypes","GenericChartComponent","getMouseCanvas","propTypes","xPosition","func","drawCoordinate","displayFormat","isRequired","at","oneOf","orient","text","shape","fontStyle","string","fontWeight","fontFamily","fontSize","number","fill","oneOfType","bg","stroke","strokeWidth","padding","left","right","top","bottom","dx","dy","defaultProps","MouseCoordinateXV2","props","drawOnCanvas","bind","ctx","moreProps","show","currentItem","getXCoordinateInfo","xAccessor","xValue","xScale","height","chartConfig","font","t","textWidth","measureText","width","y","x","Math","round","textFill","textAlign","sign","halfWidth","strokeStyle","fillStyle","lineWidth","beginPath","moveTo","lineTo","closePath","textBaseline","pad","fillText"],"mappings":"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","file":"MouseCoordinateXV2.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GenericChartComponent from '../GenericChartComponent';\nimport { getMouseCanvas } from '../GenericComponent';\n\nconst propTypes = {\n  xPosition: PropTypes.func,\n  drawCoordinate: PropTypes.func,\n  displayFormat: PropTypes.func.isRequired,\n  at: PropTypes.oneOf(['bottom', 'top']),\n  orient: PropTypes.oneOf(['bottom', 'top']),\n  text: PropTypes.shape({\n    fontStyle: PropTypes.string,\n    fontWeight: PropTypes.string,\n    fontFamily: PropTypes.string,\n    fontSize: PropTypes.number,\n    fill: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  }),\n  bg: PropTypes.shape({\n    fill: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    stroke: PropTypes.string,\n    strokeWidth: PropTypes.number,\n    padding: PropTypes.shape({\n      left: PropTypes.number,\n      right: PropTypes.number,\n      top: PropTypes.number,\n      bottom: PropTypes.number,\n    }),\n  }),\n  dx: PropTypes.number,\n  dy: PropTypes.number,\n};\n\nconst defaultProps = {\n  xPosition,\n  drawCoordinate,\n  at: 'bottom',\n  orient: 'bottom',\n\n  text: {\n    fontStyle: '',\n    fontWeight: '',\n    fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\n    fontSize: 13,\n    fill: 'rgb(35, 35, 35)',\n  },\n  bg: {\n    fill: 'rgb(255, 255, 255)',\n    stroke: 'rgb(35, 35, 35)',\n    strokeWidth: 1,\n    padding: {\n      left: 7,\n      right: 7,\n      top: 4,\n      bottom: 4,\n    },\n  },\n  dx: 7,\n  dy: 7,\n};\n\nclass MouseCoordinateXV2 extends Component {\n  constructor(props) {\n    super(props);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n  }\n  drawOnCanvas(ctx, moreProps) {\n    const { show, currentItem } = moreProps;\n    const { drawCoordinate } = this.props;\n\n    if (show && currentItem != null) {\n      const shape = getXCoordinateInfo(ctx, this.props, moreProps);\n      drawCoordinate(ctx, shape, this.props, moreProps);\n    }\n  }\n  render() {\n    return (\n      <GenericChartComponent\n        clip={false}\n        canvasDraw={this.drawOnCanvas}\n        canvasToDraw={getMouseCanvas}\n        drawOn={['mousemove', 'pan', 'drag']}\n      />\n    );\n  }\n}\n\nMouseCoordinateXV2.defaultProps = defaultProps;\nMouseCoordinateXV2.propTypes = propTypes;\n\nfunction xPosition(props, moreProps) {\n  const { currentItem, xAccessor } = moreProps;\n  return xAccessor(currentItem);\n}\nfunction getXCoordinateInfo(ctx, props, moreProps) {\n  const { xPosition } = props;\n  const xValue = xPosition(props, moreProps);\n  const { at, displayFormat } = props;\n  const { text } = props;\n  const {\n    xScale,\n    chartConfig: { height },\n  } = moreProps;\n  ctx.font = `${text.fontStyle} ${text.fontWeight} ${text.fontSize}px ${text.fontFamily}`;\n\n  const t = displayFormat(xValue);\n  const textWidth = ctx.measureText(t).width;\n\n  const y = at === 'bottom' ? height : 0;\n  const x = Math.round(xScale(xValue));\n\n  return {\n    x,\n    y,\n    textWidth,\n    text: t,\n  };\n}\n\nfunction drawCoordinate(ctx, shape, props, moreProps) {\n  const { x, y, textWidth, text } = shape;\n  const { orient, dx, dy } = props;\n\n  const {\n    bg: { padding, fill, stroke, strokeWidth },\n    text: { fontSize, fill: textFill },\n  } = props;\n\n  ctx.textAlign = 'center';\n\n  const sign = orient === 'top' ? -1 : 1;\n  const halfWidth = Math.round(textWidth / 2 + padding.right);\n  const height = Math.round(fontSize + padding.top + padding.bottom);\n\n  ctx.strokeStyle =\n    typeof stroke === 'function' ? stroke(moreProps, ctx) : stroke;\n  ctx.fillStyle = typeof fill === 'function' ? fill(moreProps, ctx) : fill;\n  ctx.lineWidth =\n    typeof strokeWidth === 'function' ? strokeWidth(moreProps) : strokeWidth;\n\n  ctx.beginPath();\n\n  ctx.moveTo(x, y);\n  ctx.lineTo(x + dx, y + sign * dy);\n  ctx.lineTo(x + halfWidth, y + sign * dy);\n  ctx.lineTo(x + halfWidth, y + sign * (dy + height));\n  ctx.lineTo(x - halfWidth, y + sign * (dy + height));\n  ctx.lineTo(x - halfWidth, y + sign * dy);\n  ctx.lineTo(x - dx, y + sign * dy);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.fill();\n\n  ctx.beginPath();\n  ctx.fillStyle =\n    typeof textFill === 'function' ? textFill(moreProps, ctx) : textFill;\n\n  ctx.textBaseline = orient === 'top' ? 'alphabetic' : 'hanging';\n  const pad = orient === 'top' ? padding.bottom : padding.top;\n\n  ctx.fillText(text, x, y + sign * (dy + pad + 2));\n}\n\nexport default MouseCoordinateXV2;\n"]}