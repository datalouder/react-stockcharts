{"version":3,"sources":["../../../../src/lib/coordinates/EdgeCoordinate.js"],"names":["React","Component","PropTypes","hexToRGBA","isDefined","EdgeCoordinate","className","props","edge","helper","line","coordinateBase","coordinate","opacity","stroke","x1","y1","x2","y2","rectWidth","rectHeight","arrowWidth","path","orient","edgeXRect","edgeYRect","fill","edgeXText","edgeYText","textAnchor","fontFamily","fontSize","textFill","displayCoordinate","propTypes","string","type","oneOf","isRequired","any","number","hideLine","bool","defaultProps","lineStroke","lineOpacity","show","edgeAt","undefined","drawOnCanvasStatic","ctx","fillStyle","x","y","beginPath","moveTo","lineTo","closePath","rect","font","textAlign","textBaseline","fillText","strokeStyle"],"mappings":"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","file":"EdgeCoordinate.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { hexToRGBA, isDefined } from '../utils';\n\nclass EdgeCoordinate extends Component {\n  render() {\n    const { className } = this.props;\n\n    const edge = helper(this.props);\n    if (edge === null) return null;\n    let line, coordinateBase, coordinate;\n\n    if (isDefined(edge.line)) {\n      line = (\n        <line\n          className=\"react-stockcharts-cross-hair\"\n          opacity={edge.line.opacity}\n          stroke={edge.line.stroke}\n          x1={edge.line.x1}\n          y1={edge.line.y1}\n          x2={edge.line.x2}\n          y2={edge.line.y2}\n        />\n      );\n    }\n    if (isDefined(edge.coordinateBase)) {\n      const { rectWidth, rectHeight, arrowWidth } = edge.coordinateBase;\n\n      const path =\n        edge.orient === 'left'\n          ? `M0,0L0,${rectHeight}L${rectWidth},${rectHeight}L${\n              rectWidth + arrowWidth\n            },10L${rectWidth},0L0,0L0,0`\n          : `M0,${arrowWidth}L${arrowWidth},${rectHeight}L${\n              rectWidth + arrowWidth\n            },${rectHeight}L${\n              rectWidth + arrowWidth\n            },0L${arrowWidth},0L0,${arrowWidth}`;\n\n      coordinateBase =\n        edge.orient === 'left' || edge.orient === 'right' ? (\n          <g\n            transform={`translate(${edge.coordinateBase.edgeXRect},${edge.coordinateBase.edgeYRect})`}\n          >\n            <path\n              d={path}\n              key={1}\n              className=\"react-stockchart-text-background\"\n              height={rectHeight}\n              width={rectWidth}\n              fill={edge.coordinateBase.fill}\n              opacity={edge.coordinateBase.opacity}\n            />\n          </g>\n        ) : (\n          <rect\n            key={1}\n            className=\"react-stockchart-text-background\"\n            x={edge.coordinateBase.edgeXRect}\n            y={edge.coordinateBase.edgeYRect}\n            height={rectHeight}\n            width={rectWidth}\n            fill={edge.coordinateBase.fill}\n            opacity={edge.coordinateBase.opacity}\n          />\n        );\n\n      coordinate = (\n        <text\n          key={2}\n          x={edge.coordinate.edgeXText}\n          y={edge.coordinate.edgeYText}\n          textAnchor={edge.coordinate.textAnchor}\n          fontFamily={edge.coordinate.fontFamily}\n          fontSize={edge.coordinate.fontSize}\n          dy=\".32em\"\n          fill={edge.coordinate.textFill}\n        >\n          {edge.coordinate.displayCoordinate}\n        </text>\n      );\n    }\n    return (\n      <g className={className}>\n        {line}\n        {coordinateBase}\n        {coordinate}\n      </g>\n    );\n  }\n}\n\nEdgeCoordinate.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.oneOf(['vertical', 'horizontal']).isRequired,\n  coordinate: PropTypes.any.isRequired,\n  x1: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  x2: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired,\n  orient: PropTypes.oneOf(['bottom', 'top', 'left', 'right']),\n  rectWidth: PropTypes.number,\n  hideLine: PropTypes.bool,\n  fill: PropTypes.string,\n  opacity: PropTypes.number,\n  fontFamily: PropTypes.string.isRequired,\n  fontSize: PropTypes.number.isRequired,\n};\n\nEdgeCoordinate.defaultProps = {\n  className: 'react-stockcharts-edgecoordinate',\n  orient: 'left',\n  hideLine: false,\n  fill: '#8a8a8a',\n  opacity: 1,\n  fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\n  fontSize: 13,\n  textFill: '#FFFFFF',\n  lineStroke: '#000000',\n  lineOpacity: 0.3,\n  arrowWidth: 10,\n};\n\nfunction helper(props) {\n  const {\n    coordinate: displayCoordinate,\n    show,\n    type,\n    orient,\n    edgeAt,\n    hideLine,\n  } = props;\n  const {\n    fill,\n    opacity,\n    fontFamily,\n    fontSize,\n    textFill,\n    lineStroke,\n    lineOpacity,\n    arrowWidth,\n  } = props;\n  const { rectWidth, rectHeight } = props;\n  const { x1, y1, x2, y2 } = props;\n\n  if (!show) return null;\n\n  // rectWidth = rectWidth ? rectWidth : (type === \"horizontal\") ? 60 : 100;\n\n  let edgeXRect, edgeYRect, edgeXText, edgeYText;\n\n  if (type === 'horizontal') {\n    edgeXRect =\n      orient === 'right' ? edgeAt + 1 : edgeAt - rectWidth - arrowWidth - 1;\n    edgeYRect = y1 - rectHeight / 2;\n    edgeXText =\n      orient === 'right'\n        ? edgeAt + rectWidth / 2 + arrowWidth\n        : edgeAt - rectWidth / 2 - arrowWidth;\n    edgeYText = y1;\n  } else {\n    edgeXRect = x1 - rectWidth / 2;\n    edgeYRect = orient === 'bottom' ? edgeAt : edgeAt - rectHeight;\n    edgeXText = x1;\n    edgeYText =\n      orient === 'bottom' ? edgeAt + rectHeight / 2 : edgeAt - rectHeight / 2;\n  }\n  let coordinateBase, coordinate;\n  const textAnchor = 'middle';\n  if (isDefined(displayCoordinate)) {\n    coordinateBase = {\n      edgeXRect,\n      edgeYRect,\n      rectHeight,\n      rectWidth,\n      fill,\n      opacity,\n      arrowWidth,\n    };\n    coordinate = {\n      edgeXText,\n      edgeYText,\n      textAnchor,\n      fontFamily,\n      fontSize,\n      textFill,\n      displayCoordinate,\n    };\n  }\n\n  const line = hideLine\n    ? undefined\n    : {\n        opacity: lineOpacity,\n        stroke: lineStroke,\n        x1,\n        y1,\n        x2,\n        y2,\n      };\n  return {\n    coordinateBase,\n    coordinate,\n    line,\n    orient,\n  };\n}\n\nEdgeCoordinate.drawOnCanvasStatic = (ctx, props) => {\n  props = { ...EdgeCoordinate.defaultProps, ...props };\n\n  const edge = helper(props);\n\n  if (edge === null) return;\n\n  if (isDefined(edge.coordinateBase)) {\n    const { rectWidth, rectHeight, arrowWidth } = edge.coordinateBase;\n\n    ctx.fillStyle = hexToRGBA(\n      edge.coordinateBase.fill,\n      edge.coordinateBase.opacity\n    );\n\n    const x = edge.coordinateBase.edgeXRect;\n    const y = edge.coordinateBase.edgeYRect;\n\n    ctx.beginPath();\n\n    if (edge.orient === 'right') {\n      ctx.moveTo(x, y + rectHeight / 2);\n      ctx.lineTo(x + arrowWidth, y);\n      ctx.lineTo(x + rectWidth + arrowWidth, y);\n      ctx.lineTo(x + rectWidth + arrowWidth, y + rectHeight);\n      ctx.lineTo(x + arrowWidth, y + rectHeight);\n      ctx.closePath();\n    } else if (edge.orient === 'left') {\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + rectWidth, y);\n      ctx.lineTo(x + rectWidth + arrowWidth, y + rectHeight / 2);\n      ctx.lineTo(x + rectWidth, y + rectHeight);\n      ctx.lineTo(x, y + rectHeight);\n      ctx.closePath();\n    } else {\n      ctx.rect(x, y, rectWidth, rectHeight);\n    }\n    ctx.fill();\n\n    ctx.font = `${edge.coordinate.fontSize}px ${edge.coordinate.fontFamily}`;\n    ctx.fillStyle = edge.coordinate.textFill;\n    ctx.textAlign =\n      edge.coordinate.textAnchor === 'middle'\n        ? 'center'\n        : edge.coordinate.textAnchor;\n    ctx.textBaseline = 'middle';\n\n    ctx.fillText(\n      edge.coordinate.displayCoordinate,\n      edge.coordinate.edgeXText,\n      edge.coordinate.edgeYText\n    );\n  }\n  if (isDefined(edge.line)) {\n    ctx.strokeStyle = hexToRGBA(edge.line.stroke, edge.line.opacity);\n\n    ctx.beginPath();\n    ctx.moveTo(edge.line.x1, edge.line.y1);\n    ctx.lineTo(edge.line.x2, edge.line.y2);\n    ctx.stroke();\n  }\n};\n\nexport default EdgeCoordinate;\n"]}