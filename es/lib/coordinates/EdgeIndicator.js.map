{"version":3,"sources":["../../../../src/lib/coordinates/EdgeIndicator.js"],"names":["React","Component","PropTypes","format","drawOnCanvas","renderSVG","GenericChartComponent","getAxisCanvas","first","last","isDefined","functor","noop","strokeDashTypes","EdgeIndicator","props","bind","ctx","moreProps","edge","helper","propTypes","yAccessor","func","type","oneOf","className","string","fill","oneOfType","lineStroke","textFill","itemType","isRequired","orient","edgeAt","displayFormat","rectHeight","number","rectWidth","arrowWidth","lineStrokeDasharray","defaultProps","yAxisPad","fontFamily","fontSize","dx","hideLine","opacity","stroke","strokeOpacity","strokeWidth","lineOpacity","plotData","item","getEdge","edgeType","xScale","yScale","chartConfig","xAccessor","width","yValue","xValue","x1","Math","round","y1","left","right","edgeX","coordinate","show","x2","y2"],"mappings":"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","file":"EdgeIndicator.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'd3-format';\n\nimport { drawOnCanvas, renderSVG } from './EdgeCoordinateV3';\nimport GenericChartComponent from '../GenericChartComponent';\nimport { getAxisCanvas } from '../GenericComponent';\n\nimport {\n  first,\n  last,\n  isDefined,\n  functor,\n  noop,\n  strokeDashTypes,\n} from '../utils';\n\nclass EdgeIndicator extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n  }\n  drawOnCanvas(ctx, moreProps) {\n    const edge = helper(this.props, moreProps);\n    const props = {\n      ...this.props,\n      ...edge,\n    };\n    drawOnCanvas(ctx, props);\n  }\n  renderSVG(moreProps) {\n    const edge = helper(this.props, moreProps);\n    const props = {\n      ...this.props,\n      ...edge,\n    };\n    return renderSVG(props);\n  }\n  render() {\n    return (\n      <GenericChartComponent\n        edgeClip\n        clip={false}\n        svgDraw={this.renderSVG}\n        canvasDraw={this.drawOnCanvas}\n        canvasToDraw={getAxisCanvas}\n        drawOn={['pan']}\n      />\n    );\n  }\n}\n\nEdgeIndicator.propTypes = {\n  yAccessor: PropTypes.func,\n\n  type: PropTypes.oneOf(['horizontal']),\n  className: PropTypes.string,\n  fill: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  lineStroke: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  textFill: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  itemType: PropTypes.oneOf(['first', 'last']).isRequired,\n  orient: PropTypes.oneOf(['left', 'right']),\n  edgeAt: PropTypes.oneOf(['left', 'right']),\n  displayFormat: PropTypes.func,\n  rectHeight: PropTypes.number,\n  rectWidth: PropTypes.number,\n  arrowWidth: PropTypes.number,\n  lineStrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n};\n\nEdgeIndicator.defaultProps = {\n  className: 'react-stockcharts-edgeindicator',\n\n  type: 'horizontal',\n  orient: 'left',\n  edgeAt: 'left',\n  textFill: '#FFFFFF',\n  displayFormat: format('.2f'),\n  yAxisPad: 0,\n  rectHeight: 20,\n  rectWidth: 50,\n  arrowWidth: 10,\n  fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\n  fontSize: 13,\n  dx: 0,\n  hideLine: false,\n  fill: '#8a8a8a',\n  opacity: 1,\n\n  stroke: noop,\n  strokeOpacity: 1,\n  strokeWidth: 3,\n  lineStroke: '#000000',\n  lineOpacity: 0.3,\n  lineStrokeDasharray: 'ShortDash',\n};\n\nfunction helper(props, moreProps) {\n  const { itemType, yAccessor } = props;\n  const { plotData } = moreProps;\n\n  const item =\n    itemType === 'first'\n      ? first(plotData, yAccessor)\n      : last(plotData, yAccessor);\n\n  // var currentItem = ChartDataUtil.getCurrentItemForChartNew(currentItems, forChart);\n  const edge = isDefined(item) ? getEdge(props, moreProps, item) : null;\n\n  return edge;\n}\n\nfunction getEdge(props, moreProps, item) {\n  const {\n    type: edgeType,\n    displayFormat,\n    edgeAt,\n    yAxisPad,\n    orient,\n    lineStroke,\n  } = props;\n\n  const { yAccessor, fill, textFill, rectHeight, rectWidth, arrowWidth } =\n    props;\n  const { fontFamily, fontSize } = props;\n  const { stroke } = props;\n\n  const {\n    xScale,\n    chartConfig: { yScale },\n    xAccessor,\n    width,\n  } = moreProps;\n\n  const yValue = yAccessor(item),\n    xValue = xAccessor(item);\n\n  const x1 = Math.round(xScale(xValue)),\n    y1 = Math.round(yScale(yValue));\n\n  const [left, right] = [0, width];\n  const edgeX = edgeAt === 'left' ? left - yAxisPad : right + yAxisPad;\n\n  return {\n    // ...props,\n    coordinate: displayFormat(yValue),\n    show: true,\n    type: edgeType,\n    orient,\n    edgeAt: edgeX,\n    fill: functor(fill)(item),\n    lineStroke: functor(lineStroke)(item),\n    stroke: functor(stroke)(item),\n    fontFamily,\n    fontSize,\n    textFill: functor(textFill)(item),\n    rectHeight,\n    rectWidth,\n    arrowWidth,\n    x1,\n    y1,\n    x2: right,\n    y2: y1,\n  };\n}\n\nexport default EdgeIndicator;\n"]}