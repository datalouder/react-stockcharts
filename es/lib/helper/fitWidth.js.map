{"version":3,"sources":["../../../../src/lib/helper/fitWidth.js"],"names":["React","Component","isDefined","getDisplayName","Series","name","displayName","fitWidth","WrappedComponent","withRef","minWidth","ResponsiveComponent","props","handleWindowResize","bind","getWrappedInstance","saveNode","setTestCanvas","state","node","testCanvas","context","getContext","devicePixelRatio","window","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","addEventListener","setState","getRatio","removeEventListener","width","el","getComputedStyle","parentNode","paddingLeft","paddingRight","w","parseFloat","Math","round","max","ref"],"mappings":"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","file":"fitWidth.js","sourcesContent":["import React, { Component } from 'react';\n// import ReactDOM from \"react-dom\";\n\nimport { isDefined } from '../utils';\n\nfunction getDisplayName(Series) {\n  const name = Series.displayName || Series.name || 'Series';\n  return name;\n}\n\nexport default function fitWidth(\n  WrappedComponent,\n  withRef = true,\n  minWidth = 100\n) {\n  class ResponsiveComponent extends Component {\n    constructor(props) {\n      super(props);\n      this.handleWindowResize = this.handleWindowResize.bind(this);\n      this.getWrappedInstance = this.getWrappedInstance.bind(this);\n      this.saveNode = this.saveNode.bind(this);\n      this.setTestCanvas = this.setTestCanvas.bind(this);\n      this.state = {};\n    }\n    saveNode(node) {\n      this.node = node;\n    }\n    setTestCanvas(node) {\n      this.testCanvas = node;\n    }\n    getRatio() {\n      if (isDefined(this.testCanvas)) {\n        const context = this.testCanvas.getContext('2d');\n\n        const devicePixelRatio = window.devicePixelRatio || 1;\n        const backingStoreRatio =\n          context.webkitBackingStorePixelRatio ||\n          context.mozBackingStorePixelRatio ||\n          context.msBackingStorePixelRatio ||\n          context.oBackingStorePixelRatio ||\n          context.backingStorePixelRatio ||\n          1;\n\n        const ratio = devicePixelRatio / backingStoreRatio;\n        // console.log(\"ratio = \", ratio);\n        return ratio;\n      }\n      return 1;\n    }\n    componentDidMount() {\n      window.addEventListener('resize', this.handleWindowResize);\n      this.handleWindowResize();\n      /* eslint-disable react/no-did-mount-set-state */\n      this.setState({\n        ratio: this.getRatio(),\n      });\n      /* eslint-enable react/no-did-mount-set-state */\n    }\n    componentWillUnmount() {\n      window.removeEventListener('resize', this.handleWindowResize);\n    }\n    handleWindowResize() {\n      this.setState(\n        {\n          width: 0,\n        },\n        () => {\n          const el = this.node;\n          const { width, paddingLeft, paddingRight } = window.getComputedStyle(\n            el.parentNode\n          );\n\n          const w =\n            parseFloat(width) -\n            (parseFloat(paddingLeft) + parseFloat(paddingRight));\n\n          this.setState({\n            width: Math.round(Math.max(w, minWidth)),\n          });\n        }\n      );\n    }\n    getWrappedInstance() {\n      return this.node;\n    }\n    render() {\n      const ref = withRef ? { ref: this.saveNode } : {};\n\n      if (this.state.width) {\n        return (\n          <WrappedComponent\n            width={this.state.width}\n            ratio={this.state.ratio}\n            {...this.props}\n            {...ref}\n          />\n        );\n      } else {\n        return (\n          <div {...ref}>\n            <canvas ref={this.setTestCanvas} />\n          </div>\n        );\n      }\n    }\n  }\n\n  ResponsiveComponent.displayName = `fitWidth(${getDisplayName(\n    WrappedComponent\n  )})`;\n\n  return ResponsiveComponent;\n}\n"]}