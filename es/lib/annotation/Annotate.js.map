{"version":3,"sources":["../../../../src/lib/annotation/Annotate.js"],"names":["React","Component","PropTypes","GenericChartComponent","Annotate","props","renderSVG","bind","moreProps","xAccessor","xScale","yScale","chartConfig","plotData","className","usingProps","Annotation","with","data","helper","map","d","idx","propTypes","string","func","when","object","defaultProps","filter"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAOC,qBAAP,MAAkC,0BAAlC;;IAEMC,Q;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAEjB,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,OAAjB;AAFiB;AAGlB;;;;6BACQ;AACP,aAAO,oBAAC,qBAAD,IAAuB,SAAS,KAAKD,SAArC,EAAgD,QAAQ,CAAC,KAAD,CAAxD,GAAP;AACD;;;8BACSE,S,EAAW;AAAA,UACXC,SADW,GACGD,SADH,CACXC,SADW;AAAA,UAGjBC,MAHiB,GAMfF,SANe,CAGjBE,MAHiB;AAAA,UAIFC,MAJE,GAMfH,SANe,CAIjBI,WAJiB,CAIFD,MAJE;AAAA,UAKjBE,QALiB,GAMfL,SANe,CAKjBK,QALiB;AAAA,mBAQiC,KAAKR,KARtC;AAAA,UAQXS,SARW,UAQXA,SARW;AAAA,UAQAC,UARA,UAQAA,UARA;AAAA,UAQkBC,UARlB,UAQYC,IARZ;;AASnB,UAAMC,OAAOC,OAAO,KAAKd,KAAZ,EAAmBQ,QAAnB,CAAb;;AAEA,aACE;AAAA;AAAA,UAAG,qDAAmDC,SAAtD;AACGI,aAAKE,GAAL,CAAS,UAACC,CAAD,EAAIC,GAAJ;AAAA,iBACR,oBAAC,UAAD;AACE,iBAAKA;AADP,aAEMP,UAFN;AAGE,oBAAQL,MAHV;AAIE,oBAAQC,MAJV;AAKE,uBAAWF,SALb;AAME,sBAAUI,QANZ;AAOE,mBAAOQ;AAPT,aADQ;AAAA,SAAT;AADH,OADF;AAeD;;;;EAlCoBpB,S;;AAqCvBG,SAASmB,SAAT,GAAqB;AACnBT,aAAWZ,UAAUsB,MADF;AAEnBP,QAAMf,UAAUuB,IAFG;AAGnBC,QAAMxB,UAAUuB,IAHG;AAInBV,cAAYb,UAAUyB;AAJH,CAArB;;AAOAvB,SAASwB,YAAT,GAAwB;AACtBd,aAAW;AADW,CAAxB;;AAIA,SAASK,MAAT,OAA0BN,QAA1B,EAAoC;AAAA,MAAlBa,IAAkB,QAAlBA,IAAkB;;AAClC,SAAOb,SAASgB,MAAT,CAAgBH,IAAhB,CAAP;AACD;;AAED,eAAetB,QAAf","file":"Annotate.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GenericChartComponent from '../GenericChartComponent';\n\nclass Annotate extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSVG = this.renderSVG.bind(this);\n  }\n  render() {\n    return <GenericChartComponent svgDraw={this.renderSVG} drawOn={['pan']} />;\n  }\n  renderSVG(moreProps) {\n    const { xAccessor } = moreProps;\n    const {\n      xScale,\n      chartConfig: { yScale },\n      plotData,\n    } = moreProps;\n\n    const { className, usingProps, with: Annotation } = this.props;\n    const data = helper(this.props, plotData);\n\n    return (\n      <g className={`react-stockcharts-enable-interaction ${className}`}>\n        {data.map((d, idx) => (\n          <Annotation\n            key={idx}\n            {...usingProps}\n            xScale={xScale}\n            yScale={yScale}\n            xAccessor={xAccessor}\n            plotData={plotData}\n            datum={d}\n          />\n        ))}\n      </g>\n    );\n  }\n}\n\nAnnotate.propTypes = {\n  className: PropTypes.string,\n  with: PropTypes.func,\n  when: PropTypes.func,\n  usingProps: PropTypes.object,\n};\n\nAnnotate.defaultProps = {\n  className: 'react-stockcharts-annotate react-stockcharts-default-cursor',\n};\n\nfunction helper({ when }, plotData) {\n  return plotData.filter(when);\n}\n\nexport default Annotate;\n"]}