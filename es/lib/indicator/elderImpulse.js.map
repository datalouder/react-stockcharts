{"version":3,"sources":["../../../../src/lib/indicator/elderImpulse.js"],"names":["rebind","isDefined","isNotDefined","merge","slidingWindow","ElderImpulse","appearanceOptions","baseIndicator","ALGORITHM_TYPE","macdSource","emaSource","base","type","stroke","fill","undefined","underlyingAlgorithm","windowSize","undefinedValue","accumulator","prev","curr","Error","prevMACDDivergence","divergence","currMACDDivergence","prevEMA","currEMA","mergedAlgorithm","algorithm","datum","indicator","elderImpulse","data","options","newData","x","arguments","length"],"mappings":";;AAAA,SACEA,MADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,KAJF,EAKEC,aALF,QAMO,UANP;;AAQA,SAASC,gBAAgBC,iBAAzB,QAAkD,+BAAlD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,IAAMC,iBAAiB,cAAvB;;AAEA,eAAe,YAAY;AACzB,MAAIC,mBAAJ;AAAA,MAAgBC,kBAAhB;;AAEA,MAAMC,OAAOJ,gBACVK,IADU,CACLJ,cADK;AAEX;AAFW,GAGVK,MAHU,CAGHP,kBAAkBO,MAHf,EAIVC,IAJU,CAILC,SAJK,CAAb;;AAMA,MAAMC,sBAAsBZ,gBACzBa,UADyB,CACd,CADc,EAEzBC,cAFyB,CAEV,SAFU,EAGzBC,WAHyB,CAGb,gBAAkB;AAAA;AAAA,QAAhBC,IAAgB;AAAA,QAAVC,IAAU;;AAC7B,QAAInB,aAAaO,UAAb,CAAJ,EACE,MAAM,IAAIa,KAAJ,iCAC0Bd,cAD1B,iBAAN;AAGF,QAAIN,aAAaQ,SAAb,CAAJ,EACE,MAAM,IAAIY,KAAJ,gCACyBd,cADzB,iBAAN;;AAIF,QAAIP,UAAUQ,WAAWW,IAAX,CAAV,KAA+BnB,UAAUS,UAAUU,IAAV,CAAV,CAAnC,EAA+D;AAC7D,UAAMG,qBAAqBd,WAAWW,IAAX,EAAiBI,UAA5C;AACA,UAAMC,qBAAqBhB,WAAWY,IAAX,EAAiBG,UAA5C;;AAEA,UAAME,UAAUhB,UAAUU,IAAV,CAAhB;AACA,UAAMO,UAAUjB,UAAUW,IAAV,CAAhB;;AAEA,UAAII,sBAAsBF,kBAAtB,IAA4CI,WAAWD,OAA3D,EACE,OAAO,IAAP;;AAEF,UAAID,sBAAsBF,kBAAtB,IAA4CI,WAAWD,OAA3D,EACE,OAAO,MAAP;AACH;AACD,WAAO,SAAP;AACD,GA3ByB,CAA5B;;AA6BA,MAAME,kBAAkBzB,QACrB0B,SADqB,CACXb,mBADW,EAErBb,KAFqB,CAEf,UAAC2B,KAAD,EAAQC,SAAR,EAAsB;AAC3BD,UAAME,YAAN,GAAqBD,SAArB;AACD,GAJqB,CAAxB;;AAMA;AACA,MAAIA,YAAY,SAAZA,SAAY,CAAUE,IAAV,EAA2C;AAAA,QAA3BC,OAA2B,uEAAjB,EAAE/B,OAAO,IAAT,EAAiB;;AACzD,QAAMgC,UAAUD,QAAQ/B,KAAR,GACZyB,gBAAgBK,IAAhB,CADY,GAEZjB,oBAAoBiB,IAApB,CAFJ;;AAIA,WAAOE,OAAP;AACD,GAND;AAOAJ,YAAUtB,UAAV,GAAuB,UAAU2B,CAAV,EAAa;AAClC,QAAI,CAACC,UAAUC,MAAf,EAAuB,OAAO7B,UAAP;AACvBA,iBAAa2B,CAAb;AACA,WAAOL,SAAP;AACD,GAJD;AAKAA,YAAUrB,SAAV,GAAsB,UAAU0B,CAAV,EAAa;AACjC,QAAI,CAACC,UAAUC,MAAf,EAAuB,OAAO5B,SAAP;AACvBA,gBAAY0B,CAAZ;AACA,WAAOL,SAAP;AACD,GAJD;AAKA/B,SAAO+B,SAAP,EAAkBpB,IAAlB,EAAwB,IAAxB,EAA8B,MAA9B,EAAsC,MAAtC,EAA8C,QAA9C;AACA;AACAX,SAAO+B,SAAP,EAAkBH,eAAlB,EAAmC,OAAnC,EAA4C,eAA5C;;AAEA,SAAOG,SAAP;AACD","file":"elderImpulse.js","sourcesContent":["import {\n  rebind,\n  isDefined,\n  isNotDefined,\n  merge,\n  slidingWindow,\n} from '../utils';\n\nimport { ElderImpulse as appearanceOptions } from './defaultOptionsForAppearance';\nimport baseIndicator from './baseIndicator';\n\nconst ALGORITHM_TYPE = 'ElderImpulse';\n\nexport default function () {\n  let macdSource, emaSource;\n\n  const base = baseIndicator()\n    .type(ALGORITHM_TYPE)\n    // .stroke(d => stroke[d.elderImpulse])\n    .stroke(appearanceOptions.stroke)\n    .fill(undefined);\n\n  const underlyingAlgorithm = slidingWindow()\n    .windowSize(2)\n    .undefinedValue('neutral')\n    .accumulator(([prev, curr]) => {\n      if (isNotDefined(macdSource))\n        throw new Error(\n          `macdSource not defined for ${ALGORITHM_TYPE} calculator`\n        );\n      if (isNotDefined(emaSource))\n        throw new Error(\n          `emaSource not defined for ${ALGORITHM_TYPE} calculator`\n        );\n\n      if (isDefined(macdSource(prev)) && isDefined(emaSource(prev))) {\n        const prevMACDDivergence = macdSource(prev).divergence;\n        const currMACDDivergence = macdSource(curr).divergence;\n\n        const prevEMA = emaSource(prev);\n        const currEMA = emaSource(curr);\n\n        if (currMACDDivergence >= prevMACDDivergence && currEMA >= prevEMA)\n          return 'up';\n\n        if (currMACDDivergence <= prevMACDDivergence && currEMA <= prevEMA)\n          return 'down';\n      }\n      return 'neutral';\n    });\n\n  const mergedAlgorithm = merge()\n    .algorithm(underlyingAlgorithm)\n    .merge((datum, indicator) => {\n      datum.elderImpulse = indicator;\n    });\n\n  // eslint-disable-next-line prefer-const\n  let indicator = function (data, options = { merge: true }) {\n    const newData = options.merge\n      ? mergedAlgorithm(data)\n      : underlyingAlgorithm(data);\n\n    return newData;\n  };\n  indicator.macdSource = function (x) {\n    if (!arguments.length) return macdSource;\n    macdSource = x;\n    return indicator;\n  };\n  indicator.emaSource = function (x) {\n    if (!arguments.length) return emaSource;\n    emaSource = x;\n    return indicator;\n  };\n  rebind(indicator, base, 'id', 'echo', 'type', 'stroke');\n  // rebind(indicator, underlyingAlgorithm, \"windowSize\", \"movingAverageType\", \"multiplier\", \"source\");\n  rebind(indicator, mergedAlgorithm, 'merge', 'skipUndefined');\n\n  return indicator;\n}\n"]}