{"version":3,"sources":["../../../src/lib/GenericChartComponent.js"],"names":["PropTypes","GenericComponent","isDefined","find","ALWAYS_TRUE_TYPES","GenericChartComponent","props","context","preCanvasDraw","bind","postCanvasDraw","shouldTypeProceed","preEvaluate","ctx","moreProps","save","margin","ratio","chartConfig","canvasOriginX","origin","left","canvasOriginY","top","width","height","clip","edgeClip","setTransform","scale","beginPath","rect","right","translate","restore","chartConfigList","Array","isArray","chartId","each","id","ox","oy","mouseXY","x","y","startPos","type","disablePan","indexOf","currentCharts","propTypes","defaultProps","contextTypes","number","oneOfType","string","isRequired","object"],"mappings":"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","file":"GenericChartComponent.js","sourcesContent":["import PropTypes from 'prop-types';\nimport GenericComponent from './GenericComponent';\nimport { isDefined, find } from './utils';\n\nconst ALWAYS_TRUE_TYPES = ['drag', 'dragend'];\n\nclass GenericChartComponent extends GenericComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.preCanvasDraw = this.preCanvasDraw.bind(this);\n    this.postCanvasDraw = this.postCanvasDraw.bind(this);\n    this.shouldTypeProceed = this.shouldTypeProceed.bind(this);\n    this.preEvaluate = this.preEvaluate.bind(this);\n  }\n  preCanvasDraw(ctx, moreProps) {\n    super.preCanvasDraw(ctx, moreProps);\n    ctx.save();\n    const { margin, ratio } = this.context;\n    const { chartConfig } = moreProps;\n\n    const canvasOriginX = 0.5 * ratio + chartConfig.origin[0] + margin.left;\n    const canvasOriginY = 0.5 * ratio + chartConfig.origin[1] + margin.top;\n\n    const {\n      chartConfig: { width, height },\n    } = moreProps;\n    const { clip, edgeClip } = this.props;\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(ratio, ratio);\n    if (edgeClip) {\n      ctx.beginPath();\n      ctx.rect(\n        -1,\n        canvasOriginY - 10,\n        width + margin.left + margin.right + 1,\n        height + 20\n      );\n      ctx.clip();\n    }\n\n    ctx.translate(canvasOriginX, canvasOriginY);\n\n    if (clip) {\n      ctx.beginPath();\n      ctx.rect(-1, -1, width + 1, height + 1);\n      ctx.clip();\n    }\n  }\n  postCanvasDraw(ctx, moreProps) {\n    super.postCanvasDraw(ctx, moreProps);\n    ctx.restore();\n  }\n  updateMoreProps(moreProps) {\n    super.updateMoreProps(moreProps);\n    const { chartConfig: chartConfigList } = moreProps;\n\n    if (chartConfigList && Array.isArray(chartConfigList)) {\n      const { chartId } = this.context;\n      const chartConfig = find(chartConfigList, each => each.id === chartId);\n      this.moreProps.chartConfig = chartConfig;\n    }\n    if (isDefined(this.moreProps.chartConfig)) {\n      const {\n        origin: [ox, oy],\n      } = this.moreProps.chartConfig;\n      if (isDefined(moreProps.mouseXY)) {\n        const {\n          mouseXY: [x, y],\n        } = moreProps;\n        this.moreProps.mouseXY = [x - ox, y - oy];\n      }\n      if (isDefined(moreProps.startPos)) {\n        const {\n          startPos: [x, y],\n        } = moreProps;\n        this.moreProps.startPos = [x - ox, y - oy];\n      }\n    }\n  }\n  preEvaluate(/* type, moreProps */) {\n    /* if (\n\t\t\ttype === \"mousemove\"\n\t\t\t&& this.props.onMouseMove\n\t\t\t&& isDefined(moreProps)\n\t\t\t&& isDefined(moreProps.currentCharts)\n\t\t) {\n\t\t\tif (moreProps.currentCharts.indexOf(this.context.chartId) === -1) {\n\t\t\t\tmoreProps.show = false;\n\t\t\t}\n\t\t} */\n  }\n  shouldTypeProceed(type, moreProps) {\n    if ((type === 'mousemove' || type === 'click') && this.props.disablePan) {\n      return true;\n    }\n    if (\n      ALWAYS_TRUE_TYPES.indexOf(type) === -1 &&\n      isDefined(moreProps) &&\n      isDefined(moreProps.currentCharts)\n    ) {\n      return moreProps.currentCharts.indexOf(this.context.chartId) > -1;\n    }\n    return true;\n  }\n}\n\nGenericChartComponent.propTypes = GenericComponent.propTypes;\n\nGenericChartComponent.defaultProps = GenericComponent.defaultProps;\n\nGenericChartComponent.contextTypes = {\n  ...GenericComponent.contextTypes,\n  canvasOriginX: PropTypes.number,\n  canvasOriginY: PropTypes.number,\n  chartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  chartConfig: PropTypes.object.isRequired,\n  ratio: PropTypes.number.isRequired,\n};\n\nexport default GenericChartComponent;\n"]}