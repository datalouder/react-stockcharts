{"version":3,"sources":["../../../src/lib/ChartCanvas.js"],"names":["React","Component","PropTypes","extent","d3Extent","min","max","head","last","isDefined","isNotDefined","clearCanvas","shallowEqual","identity","noop","functor","getLogger","mouseBasedZoomAnchor","lastVisibleItemBasedZoomAnchor","rightDomainBasedZoomAnchor","getNewChartConfig","getChartConfigWithUpdatedYScales","getCurrentCharts","getCurrentItem","EventCapture","CanvasContainer","evaluator","log","CANDIDATES_FOR_RESET","shouldResetChart","thisProps","nextProps","every","result","key","getCursorStyle","tooltipStyle","getDimensions","props","height","margin","top","bottom","width","left","right","getXScaleDirection","flipXScale","calculateFullData","fullData","data","plotFull","xScale","clamp","pointsPerPxThreshold","xAccessor","displayXAccessor","minPointsPerPxThreshold","useWholeData","filterData","copy","resetChart","firstCalculation","process","env","NODE_ENV","state","calculateState","initialPlotData","plotData","postCalculator","children","dimensions","chartConfig","domain","updateChart","newState","initialXScale","lastItemWasVisible","initialChartConfig","lastItem","start","end","padding","maintainPointsPerPixelOnResize","direction","updatedXScale","setXRange","range","rangeStart","rangeEnd","newRangeStart","newRangeEnd","newDomainExtent","newStart","lastItemX","response","fallbackStart","fallbackEnd","dx","map","x","invert","newEnd","inputXAccesor","xExtentsProp","xExtents","i","length","prev","curr","Error","d","each","rangeRoundPoints","isNaN","pinchCoordinates","pinch","touch1Pos","touch2Pos","topLeft","Math","bottomRight","ChartCanvas","getDataInfo","bind","getCanvasContexts","handleMouseMove","handleMouseEnter","handleMouseLeave","handleZoom","handlePinchZoom","handlePinchZoomEnd","handlePan","handlePanEnd","handleClick","handleMouseDown","handleDoubleClick","handleContextMenu","handleDragStart","handleDrag","handleDragEnd","panHelper","pinchZoomHelper","xAxisZoom","yAxisZoom","resetYDomain","calculateStateForDomain","generateSubscriptionId","draw","redraw","getAllPanConditions","subscriptions","subscribe","unsubscribe","amIOnTop","saveEventCaptureNode","saveCanvasContainerNode","setCursorClass","getMutableState","interactiveState","panInProgress","mutableState","lastSubscriptionId","node","eventCaptureNode","canvasContainerNode","canvases","axes","mouseCoord","ratio","bg","id","rest","getPanConditions","draggable","panEnabled","concat","filter","className","dragableComponents","mouseXY","e","currentCharts","currentItem","triggerEvent","newDomain","currentPlotData","currentDomain","beforePlotData","updatedScale","initialPinch","finalPinch","initialPinchXScale","iTL","iBR","fTL","fBR","xDash","round","yDash","y","cancelDrag","waitingForPinchZoomAnimationFrame","requestAnimationFrame","clearBothCanvas","trigger","clearThreeCanvas","firstItem","onLoadMore","setState","zoomDirection","zoomMultiplier","zoomAnchor","item","cx","c","show","chartId","yScale","yPanEnabled","type","forEach","listener","force","chartsToPan","dy","hackyWayToStopPanBeyondBounds__plotData","hackyWayToStopPanBeyondBounds__domain","mousePosition","panStartXScale","dxdy","waitingForPanAnimationFrame","inputType","waitingForMouseMoveAnimationFrame","prevMouseXY","clearMouseCanvas","startPos","chartCanvasType","reset","interaction","isInteractionEnabled","prevLastItem","calculatedState","changed","newChartConfig","realYDomain","zIndex","defaultFocus","mouseMoveEvent","panEvent","zoomEvent","useCrossHairStyleCursor","onSelect","cursorStyle","cursor","position","idx","disableInteraction","propTypes","number","isRequired","object","oneOf","array","func","oneOfType","string","seriesName","bool","shape","propName","console","warn","defaultProps","childContextTypes","arrayOf","origin","yExtents","yExtentsProvider","mouseCoordinates","at","format","ohlcv","date","open","high","low","close","volume"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAUC,QAAnB,EAA6BC,GAA7B,EAAkCC,GAAlC,QAA6C,UAA7C;;AAEA,SACEC,IADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,QAPF,EAQEC,IARF,EASEC,OATF,EAUEC,SAVF,QAWO,SAXP;;AAaA;AACA,SACEC,oBADF,EAEEC,8BAFF,EAGEC,0BAHF,QAIO,sBAJP;AAKA;;AAEA,SACEC,iBADF,EAEEC,gCAFF,EAGEC,gBAHF,EAIEC,cAJF,QAKO,uBALP;;AAOA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;AAEA,IAAMC,MAAMX,UAAU,aAAV,CAAZ;;AAEA,IAAMY,uBAAuB,CAC3B,YAD2B,CAA7B;;AAMA,SAASC,gBAAT,CAA0BC,SAA1B,EAAqCC,SAArC,EAAgD;AAC9C,SAAO,CAACH,qBAAqBI,KAArB,CAA2B,eAAO;AACxC,QAAMC,SAASrB,aAAakB,UAAUI,GAAV,CAAb,EAA6BH,UAAUG,GAAV,CAA7B,CAAf;AACA;AACA,WAAOD,MAAP;AACD,GAJO,CAAR;AAKD;;AAED,SAASE,cAAT,GAA0B;AACxB,MAAMC,05BAAN;AAwCA,SAAO;AAAA;AAAA,MAAO,MAAK,UAAZ;AAAwBA;AAAxB,GAAP;AACD;;AAED,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAO;AACLC,YAAQD,MAAMC,MAAN,GAAeD,MAAME,MAAN,CAAaC,GAA5B,GAAkCH,MAAME,MAAN,CAAaE,MADlD;AAELC,WAAOL,MAAMK,KAAN,GAAcL,MAAME,MAAN,CAAaI,IAA3B,GAAkCN,MAAME,MAAN,CAAaK;AAFjD,GAAP;AAID;;AAED,SAASC,kBAAT,CAA4BC,UAA5B,EAAwC;AACtC,SAAOA,aAAa,CAAC,CAAd,GAAkB,CAAzB;AACD;;AAED,SAASC,iBAAT,CAA2BV,KAA3B,EAAkC;AAAA,MAExBW,QAFwB,GAQ5BX,KAR4B,CAE9BY,IAF8B;AAAA,MAG9BC,QAH8B,GAQ5Bb,KAR4B,CAG9Ba,QAH8B;AAAA,MAI9BC,MAJ8B,GAQ5Bd,KAR4B,CAI9Bc,MAJ8B;AAAA,MAK9BC,KAL8B,GAQ5Bf,KAR4B,CAK9Be,KAL8B;AAAA,MAM9BC,oBAN8B,GAQ5BhB,KAR4B,CAM9BgB,oBAN8B;AAAA,MAO9BP,UAP8B,GAQ5BT,KAR4B,CAO9BS,UAP8B;AAAA,MASxBQ,SATwB,GASiCjB,KATjC,CASxBiB,SATwB;AAAA,MASbC,gBATa,GASiClB,KATjC,CASbkB,gBATa;AAAA,MASKC,uBATL,GASiCnB,KATjC,CASKmB,uBATL;;;AAWhC,MAAMC,eAAejD,UAAU0C,QAAV,IAAsBA,QAAtB,GAAiCI,cAAc1C,QAApE;;AAXgC,mBAaTa,UAAU;AAC/B0B,kBAD+B;AAE/BM,8BAF+B;AAG/BL,gBAH+B;AAI/BC,8CAJ+B;AAK/BG,oDAL+B;AAM/BV;AAN+B,GAAV,CAbS;AAAA,MAaxBY,UAbwB,cAaxBA,UAbwB;;AAsBhC,SAAO;AACLJ,wBADK;AAELC,sBAAkBA,oBAAoBD,SAFjC;AAGLH,YAAQA,OAAOQ,IAAP,EAHH;AAILX,sBAJK;AAKLU;AALK,GAAP;AAOD;AACD,SAASE,UAAT,CAAoBvB,KAApB,EAAqD;AAAA,MAA1BwB,gBAA0B,uEAAP,KAAO;;AACnD,MAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAI,CAACH,gBAAL,EAAuBnC,IAAI,aAAJ;AACxB;;AAED,MAAMuC,QAAQC,eAAe7B,KAAf,CAAd;AALmD,MAM3CiB,SAN2C,GAMDW,KANC,CAM3CX,SAN2C;AAAA,MAMhCC,gBANgC,GAMDU,KANC,CAMhCV,gBANgC;AAAA,MAMdP,QANc,GAMDiB,KANC,CAMdjB,QANc;AAAA,MAOjCmB,eAPiC,GAOLF,KAPK,CAO3CG,QAP2C;AAAA,MAOhBjB,MAPgB,GAOLc,KAPK,CAOhBd,MAPgB;AAAA,MAQ3CkB,cAR2C,GAQdhC,KARc,CAQ3CgC,cAR2C;AAAA,MAQ3BC,QAR2B,GAQdjC,KARc,CAQ3BiC,QAR2B;;;AAUnD,MAAMF,WAAWC,eAAeF,eAAf,CAAjB;;AAEA,MAAMI,aAAanC,cAAcC,KAAd,CAAnB;AACA,MAAMmC,cAAcpD,iCAClBD,kBAAkBoD,UAAlB,EAA8BD,QAA9B,CADkB,EAElB,EAAEF,kBAAF,EAAYd,oBAAZ,EAAuBC,kCAAvB,EAAyCP,kBAAzC,EAFkB,EAGlBG,OAAOsB,MAAP,EAHkB,CAApB;;AAMA,sBACKR,KADL;AAEEd,kBAFF;AAGEiB,sBAHF;AAIEI;AAJF;AAMD;;AAED,SAASE,WAAT,CACEC,QADF,EAEEC,aAFF,EAGEvC,KAHF,EAIEwC,kBAJF,EAKEC,kBALF,EAME;AAAA,MACQ9B,QADR,GAEE2B,QAFF,CACQ3B,QADR;AAAA,MACkBG,MADlB,GAEEwB,QAFF,CACkBxB,MADlB;AAAA,MAC0BG,SAD1B,GAEEqB,QAFF,CAC0BrB,SAD1B;AAAA,MACqCC,gBADrC,GAEEoB,QAFF,CACqCpB,gBADrC;AAAA,MACuDG,UADvD,GAEEiB,QAFF,CACuDjB,UADvD;;;AAIA,MAAMqB,WAAWxE,KAAKyC,QAAL,CAAjB;;AAJA,8BAKqB4B,cAAcH,MAAd,EALrB;AAAA;AAAA,MAKOO,KALP;AAAA,MAKcC,GALd;;AAOA,MAAInB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCtC,QAAI,gBAAJ;AACD;;AATD,MAWQ2C,cAXR,GAW0DhC,KAX1D,CAWQgC,cAXR;AAAA,MAWwBC,QAXxB,GAW0DjC,KAX1D,CAWwBiC,QAXxB;AAAA,MAWkCY,OAXlC,GAW0D7C,KAX1D,CAWkC6C,OAXlC;AAAA,MAW2CpC,UAX3C,GAW0DT,KAX1D,CAW2CS,UAX3C;AAAA,MAYQqC,8BAZR,GAY2C9C,KAZ3C,CAYQ8C,8BAZR;;AAaA,MAAMC,YAAYvC,mBAAmBC,UAAnB,CAAlB;AACA,MAAMyB,aAAanC,cAAcC,KAAd,CAAnB;;AAEA,MAAMgD,gBAAgBC,UAAUnC,MAAV,EAAkBoB,UAAlB,EAA8BW,OAA9B,EAAuCE,SAAvC,CAAtB;;AAEA;AACA,MAAIjB,wBAAJ;AACA,MAAI,CAACU,kBAAD,IAAuBI,OAAO3B,UAAUyB,QAAV,CAAlC,EAAuD;AACrD;AADqD,+BAGtBH,cAAcW,KAAd,EAHsB;AAAA;AAAA,QAG9CC,UAH8C;AAAA,QAGlCC,QAHkC;;AAAA,+BAIhBJ,cAAcE,KAAd,EAJgB;AAAA;AAAA,QAI9CG,aAJ8C;AAAA,QAI/BC,WAJ+B;;AAKrD,QAAMC,kBACH,CAACD,cAAcD,aAAf,KAAiCD,WAAWD,UAA5C,CAAD,IAA6DP,MAAMD,KAAnE,CADF;AAEA,QAAMa,WAAWV,iCACbF,MAAMW,eADO,GAEbZ,KAFJ;;AAIA,QAAMc,YAAYlB,cAActB,UAAUyB,QAAV,CAAd,CAAlB;AACA;AACA,QAAMgB,WAAWrC,WACfV,QADe,EAEf,CAAC6C,QAAD,EAAWZ,GAAX,CAFe,EAGf3B,SAHe,EAIf+B,aAJe,EAKf,EAAEW,eAAehB,KAAjB,EAAwBiB,aAAa,EAAElB,kBAAF,EAAYe,oBAAZ,EAArC,EALe,CAAjB;AAOA3B,sBAAkB4B,SAAS3B,QAA3B;AACAiB,kBAAcZ,MAAd,CAAqBsB,SAAStB,MAA9B;AACA;AACD,GAvBD,MAuBO,IAAII,sBAAsBI,MAAM3B,UAAUyB,QAAV,CAAhC,EAAqD;AAC1D;AACA;;AAEA;AACA,QAAMmB,KAAKtB,cAActB,UAAUyB,QAAV,CAAd,IAAqCH,cAAcW,KAAd,GAAsB,CAAtB,CAAhD;;AAL0D,gCAM/BX,cACxBW,KADwB,GAExBY,GAFwB,CAEpB;AAAA,aAAKC,IAAIF,EAAT;AAAA,KAFoB,EAGxBC,GAHwB,CAGpBvB,cAAcyB,MAHM,CAN+B;AAAA;AAAA,QAMnDR,SANmD;AAAA,QAMzCS,MANyC;;AAW1D,QAAMP,YAAWrC,WACfV,QADe,EAEf,CAAC6C,SAAD,EAAWS,MAAX,CAFe,EAGfhD,SAHe,EAIf+B,aAJe,CAAjB;AAMAlB,sBAAkB4B,UAAS3B,QAA3B;AACAiB,kBAAcZ,MAAd,CAAqBsB,UAAStB,MAA9B,EAlB0D,CAkBnB;AACxC;AACD;AACA,MAAML,WAAWC,eAAeF,eAAf,CAAjB;AACA,MAAMK,cAAcpD,iCAClBD,kBAAkBoD,UAAlB,EAA8BD,QAA9B,EAAwCQ,kBAAxC,CADkB,EAElB,EAAEV,kBAAF,EAAYd,oBAAZ,EAAuBC,kCAAvB,EAAyCP,kBAAzC,EAFkB,EAGlBqC,cAAcZ,MAAd,EAHkB,CAApB;;AAMA,SAAO;AACLtB,YAAQkC,aADH;AAEL/B,wBAFK;AAGLkB,4BAHK;AAILJ,sBAJK;AAKLpB,sBALK;AAMLU;AANK,GAAP;AAQD;;AAED,SAASQ,cAAT,CAAwB7B,KAAxB,EAA+B;AAAA,MAEhBkE,aAFgB,GAOzBlE,KAPyB,CAE3BiB,SAF2B;AAAA,MAGjBkD,YAHiB,GAOzBnE,KAPyB,CAG3BoE,QAH2B;AAAA,MAI3BxD,IAJ2B,GAOzBZ,KAPyB,CAI3BY,IAJ2B;AAAA,MAK3BiC,OAL2B,GAOzB7C,KAPyB,CAK3B6C,OAL2B;AAAA,MAM3BpC,UAN2B,GAOzBT,KAPyB,CAM3BS,UAN2B;;;AAS7B,MAAIgB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCxD,UAAU6B,MAAMc,MAAN,CAAakD,MAAvB,CAA7C,EAA6E;AAC3E,SAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAIzD,KAAK0D,MAAzB,EAAiCD,GAAjC,EAAsC;AACpC,UAAME,OAAO3D,KAAKyD,IAAI,CAAT,CAAb;AACA,UAAMG,OAAO5D,KAAKyD,CAAL,CAAb;AACA,UAAIH,cAAcK,IAAd,IAAsBL,cAAcM,IAAd,CAA1B,EAA+C;AAC7C,cAAM,IAAIC,KAAJ,CACJ,2FADI,CAAN;AAGD;AACF;AACF;;AAED,MAAM1B,YAAYvC,mBAAmBC,UAAnB,CAAlB;AACA,MAAMyB,aAAanC,cAAcC,KAAd,CAAnB;;AAEA,MAAMnC,SACJ,OAAOsG,YAAP,KAAwB,UAAxB,GACIA,aAAavD,IAAb,CADJ,GAEI9C,SACEqG,aACGL,GADH,CACO;AAAA,WAAKrF,QAAQiG,CAAR,CAAL;AAAA,GADP,EAEGZ,GAFH,CAEO;AAAA,WAAQa,KAAK/D,IAAL,EAAWsD,aAAX,CAAR;AAAA,GAFP,CADF,CAHN;;AAxB6B,2BAkC3BxD,kBAAkBV,KAAlB,CAlC2B;AAAA,MAiCrBiB,SAjCqB,sBAiCrBA,SAjCqB;AAAA,MAiCVC,gBAjCU,sBAiCVA,gBAjCU;AAAA,MAiCQJ,MAjCR,sBAiCQA,MAjCR;AAAA,MAiCgBH,QAjChB,sBAiCgBA,QAjChB;AAAA,MAiC0BU,UAjC1B,sBAiC0BA,UAjC1B;;AAmC7B,MAAM2B,gBAAgBC,UAAUnC,MAAV,EAAkBoB,UAAlB,EAA8BW,OAA9B,EAAuCE,SAAvC,CAAtB;;AAnC6B,oBAqCA1B,WAC3BV,QAD2B,EAE3B9C,MAF2B,EAG3BqG,aAH2B,EAI3BlB,aAJ2B,CArCA;AAAA,MAqCrBjB,QArCqB,eAqCrBA,QArCqB;AAAA,MAqCXK,MArCW,eAqCXA,MArCW;;AA4C7B,MAAIX,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCI,SAASuC,MAAT,IAAmB,CAAhE,EAAmE;AACjE,UAAM,IAAIG,KAAJ,cACO1C,SAASuC,MADhB,8DAAN;AAGD;AACD,SAAO;AACLvC,sBADK;AAELjB,YAAQkC,cAAcZ,MAAd,CAAqBA,MAArB,CAFH;AAGLnB,wBAHK;AAILC,sCAJK;AAKLP,sBALK;AAMLU;AANK,GAAP;AAQD;;AAED,SAAS4B,SAAT,CAAmBnC,MAAnB,EAA2BoB,UAA3B,EAAuCW,OAAvC,EAA+D;AAAA,MAAfE,SAAe,uEAAH,CAAG;;AAC7D,MAAIjC,OAAO8D,gBAAX,EAA6B;AAC3B,QAAIC,MAAMhC,OAAN,CAAJ,EACE,MAAM,IAAI4B,KAAJ,CAAU,8CAAV,CAAN;AACF3D,WAAO8D,gBAAP,CAAwB,CAAC,CAAD,EAAI1C,WAAW7B,KAAf,CAAxB,EAA+CwC,OAA/C;AACD,GAJD,MAIO,IAAI/B,OAAO+B,OAAX,EAAoB;AACzB,QAAIgC,MAAMhC,OAAN,CAAJ,EACE,MAAM,IAAI4B,KAAJ,CAAU,8CAAV,CAAN;AACF3D,WAAOoC,KAAP,CAAa,CAAC,CAAD,EAAIhB,WAAW7B,KAAf,CAAb;AACAS,WAAO+B,OAAP,CAAeA,UAAU,CAAzB;AACD,GALM,MAKA;AAAA,eACmBgC,MAAMhC,OAAN,IACpBA,OADoB,GAEpB,EAAEvC,MAAMuC,OAAR,EAAiBtC,OAAOsC,OAAxB,EAHC;AAAA,QACGvC,IADH,QACGA,IADH;AAAA,QACSC,KADT,QACSA,KADT;;AAIL,QAAIwC,YAAY,CAAhB,EAAmB;AACjBjC,aAAOoC,KAAP,CAAa,CAAC5C,IAAD,EAAO4B,WAAW7B,KAAX,GAAmBE,KAA1B,CAAb;AACD,KAFD,MAEO;AACLO,aAAOoC,KAAP,CAAa,CAAChB,WAAW7B,KAAX,GAAmBE,KAApB,EAA2BD,IAA3B,CAAb;AACD;AACF;AACD,SAAOQ,MAAP;AACD;;AAED,SAASgE,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,MACvBC,SADuB,GACED,KADF,CACvBC,SADuB;AAAA,MACZC,SADY,GACEF,KADF,CACZE,SADY;;;AAG/B,SAAO;AACLC,aAAS,CACPC,KAAKpH,GAAL,CAASiH,UAAU,CAAV,CAAT,EAAuBC,UAAU,CAAV,CAAvB,CADO,EAEPE,KAAKpH,GAAL,CAASiH,UAAU,CAAV,CAAT,EAAuBC,UAAU,CAAV,CAAvB,CAFO,CADJ;AAKLG,iBAAa,CACXD,KAAKnH,GAAL,CAASgH,UAAU,CAAV,CAAT,EAAuBC,UAAU,CAAV,CAAvB,CADW,EAEXE,KAAKnH,GAAL,CAASgH,UAAU,CAAV,CAAT,EAAuBC,UAAU,CAAV,CAAvB,CAFW;AALR,GAAP;AAUD;;IAEKI,W;;;AACJ,yBAAc;AAAA;;AAAA;;AAEZ,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,OAAzB;;AAEA,UAAKE,eAAL,GAAuB,MAAKA,eAAL,CAAqBF,IAArB,OAAvB;AACA,UAAKG,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBH,IAAtB,OAAxB;AACA,UAAKI,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBJ,IAAtB,OAAxB;AACA,UAAKK,UAAL,GAAkB,MAAKA,UAAL,CAAgBL,IAAhB,OAAlB;AACA,UAAKM,eAAL,GAAuB,MAAKA,eAAL,CAAqBN,IAArB,OAAvB;AACA,UAAKO,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBP,IAAxB,OAA1B;AACA,UAAKQ,SAAL,GAAiB,MAAKA,SAAL,CAAeR,IAAf,OAAjB;AACA,UAAKS,YAAL,GAAoB,MAAKA,YAAL,CAAkBT,IAAlB,OAApB;AACA,UAAKU,WAAL,GAAmB,MAAKA,WAAL,CAAiBV,IAAjB,OAAnB;AACA,UAAKW,eAAL,GAAuB,MAAKA,eAAL,CAAqBX,IAArB,OAAvB;AACA,UAAKY,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBZ,IAAvB,OAAzB;AACA,UAAKa,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBb,IAAvB,OAAzB;AACA,UAAKc,eAAL,GAAuB,MAAKA,eAAL,CAAqBd,IAArB,OAAvB;AACA,UAAKe,UAAL,GAAkB,MAAKA,UAAL,CAAgBf,IAAhB,OAAlB;AACA,UAAKgB,aAAL,GAAqB,MAAKA,aAAL,CAAmBhB,IAAnB,OAArB;;AAEA,UAAKiB,SAAL,GAAiB,MAAKA,SAAL,CAAejB,IAAf,OAAjB;AACA,UAAKkB,eAAL,GAAuB,MAAKA,eAAL,CAAqBlB,IAArB,OAAvB;AACA,UAAKmB,SAAL,GAAiB,MAAKA,SAAL,CAAenB,IAAf,OAAjB;AACA,UAAKoB,SAAL,GAAiB,MAAKA,SAAL,CAAepB,IAAf,OAAjB;AACA,UAAKqB,YAAL,GAAoB,MAAKA,YAAL,CAAkBrB,IAAlB,OAApB;AACA,UAAKsB,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BtB,IAA7B,OAA/B;AACA,UAAKuB,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BvB,IAA5B,OAA9B;AACA,UAAKwB,IAAL,GAAY,MAAKA,IAAL,CAAUxB,IAAV,OAAZ;AACA,UAAKyB,MAAL,GAAc,MAAKA,MAAL,CAAYzB,IAAZ,OAAd;AACA,UAAK0B,mBAAL,GAA2B,MAAKA,mBAAL,CAAyB1B,IAAzB,OAA3B;;AAEA,UAAK2B,aAAL,GAAqB,EAArB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAe5B,IAAf,OAAjB;AACA,UAAK6B,WAAL,GAAmB,MAAKA,WAAL,CAAiB7B,IAAjB,OAAnB;AACA,UAAK8B,QAAL,GAAgB,MAAKA,QAAL,CAAc9B,IAAd,OAAhB;AACA,UAAK+B,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B/B,IAA1B,OAA5B;AACA,UAAKgC,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BhC,IAA7B,OAA/B;AACA,UAAKiC,cAAL,GAAsB,MAAKA,cAAL,CAAoBjC,IAApB,OAAtB;AACA,UAAKkC,eAAL,GAAuB,MAAKA,eAAL,CAAqBlC,IAArB,OAAvB;AACA;AACA,UAAKmC,gBAAL,GAAwB,EAAxB;AACA,UAAKC,aAAL,GAAqB,KAArB;;AAEA,UAAK/F,KAAL,GAAa,EAAb;AACA,UAAKgG,YAAL,GAAoB,EAApB;AACA,UAAKC,kBAAL,GAA0B,CAA1B;AA9CY;AA+Cb;;;;yCACoBC,I,EAAM;AACzB,WAAKC,gBAAL,GAAwBD,IAAxB;AACD;;;4CACuBA,I,EAAM;AAC5B,WAAKE,mBAAL,GAA2BF,IAA3B;AACD;;;sCACiB;AAChB,aAAO,KAAKF,YAAZ;AACD;;;kCACa;AACZ,0BACK,KAAKhG,KADV;AAEEjB,kBAAU,KAAKA;AAFjB;AAID;;;wCACmB;AAClB,UAAI,KAAKqH,mBAAT,EAA8B;AAC5B,eAAO,KAAKA,mBAAL,CAAyBxC,iBAAzB,EAAP;AACD;AACF;;;6CACwB;AACvB,WAAKqC,kBAAL;AACA,aAAO,KAAKA,kBAAZ;AACD;;;sCACiB;AAChB,UAAMI,WAAW,KAAKzC,iBAAL,EAAjB;AACA,UAAIyC,YAAYA,SAASC,IAAzB,EAA+B;AAC7B7J,oBACE,CACE4J,SAASC,IADX;AAEE;AACAD,iBAASE,UAHX,CADF,EAME,KAAKnI,KAAL,CAAWoI,KANb;AAQD;AACF;;;uCACkB;AACjB,UAAMH,WAAW,KAAKzC,iBAAL,EAAjB;AACA,UAAIyC,YAAYA,SAASE,UAAzB,EAAqC;AACnC9J,oBACE,CACE4J,SAASE,UADX,CADF,EAKE,KAAKnI,KAAL,CAAWoI,KALb;AAOD;AACF;;;uCACkB;AACjB,UAAMH,WAAW,KAAKzC,iBAAL,EAAjB;AACA,UAAIyC,YAAYA,SAASC,IAAzB,EAA+B;AAC7B7J,oBACE,CACE4J,SAASC,IADX;AAEE;AACAD,iBAASE,UAHX,EAIEF,SAASI,EAJX,CADF,EAOE,KAAKrI,KAAL,CAAWoI,KAPb;AASD;AACF;;;8BACSE,E,EAAIC,I,EAAM;AAAA,kCAMdA,IANc,CAEhBC,gBAFgB;AAAA,UAEhBA,gBAFgB,yCAEG/J,QAAQ;AACzBgK,mBAAW,KADc;AAEzBC,oBAAY;AAFa,OAAR,CAFH;;AAOlB,WAAKxB,aAAL,GAAqB,KAAKA,aAAL,CAAmByB,MAAnB;AACnBL;AADmB,SAEhBC,IAFgB;AAGnBC;AAHmB,SAArB;AAKD;;;gCACWF,E,EAAI;AACd,WAAKpB,aAAL,GAAqB,KAAKA,aAAL,CAAmB0B,MAAnB,CAA0B;AAAA,eAAQjE,KAAK2D,EAAL,KAAYA,EAApB;AAAA,OAA1B,CAArB;AACD;;;0CACqB;AACpB,aAAO,KAAKpB,aAAL,CAAmBpD,GAAnB,CAAuB;AAAA,eAAQa,KAAK6D,gBAAL,EAAR;AAAA,OAAvB,CAAP;AACD;;;mCACcK,S,EAAW;AACxB,UAAI,KAAKd,gBAAL,IAAyB,IAA7B,EAAmC;AACjC,aAAKA,gBAAL,CAAsBP,cAAtB,CAAqCqB,SAArC;AACD;AACF;;;6BACQP,E,EAAI;AACX,UAAMQ,qBAAqB,KAAK5B,aAAL,CAAmB0B,MAAnB,CACzB;AAAA,eAAQjE,KAAK6D,gBAAL,GAAwBC,SAAhC;AAAA,OADyB,CAA3B;;AAIA,aAAOK,mBAAmBxE,MAAnB,GAA4B,CAA5B,IAAiCpG,KAAK4K,kBAAL,EAAyBR,EAAzB,KAAgCA,EAAxE;AACD;;;sCACiBS,O,EAASC,C,EAAG;AAAA,mBACyB,KAAKpH,KAD9B;AAAA,UACpBX,SADoB,UACpBA,SADoB;AAAA,UACTkB,WADS,UACTA,WADS;AAAA,UACIJ,QADJ,UACIA,QADJ;AAAA,UACcjB,MADd,UACcA,MADd;;;AAG5B,UAAMmI,gBAAgBjK,iBAAiBmD,WAAjB,EAA8B4G,OAA9B,CAAtB;AACA,UAAMG,cAAcjK,eAAe6B,MAAf,EAAuBG,SAAvB,EAAkC8H,OAAlC,EAA2ChH,QAA3C,CAApB;;AAEA,WAAKoH,YAAL,CACE,aADF,EAEE;AACEJ,wBADF;AAEEG,gCAFF;AAGED;AAHF,OAFF,EAOED,CAPF;AASD;;;4CACuBI,S,EAAW;AAAA,oBAO7B,KAAKxH,KAPwB;AAAA,UAE/BX,SAF+B,WAE/BA,SAF+B;AAAA,UAG/BC,gBAH+B,WAG/BA,gBAH+B;AAAA,UAIvBqB,aAJuB,WAI/BzB,MAJ+B;AAAA,UAKlB2B,kBALkB,WAK/BN,WAL+B;AAAA,UAMrBL,eANqB,WAM/BC,QAN+B;AAAA,UAQzBV,UARyB,GAQV,KAAKO,KARK,CAQzBP,UARyB;AAAA,UASzBV,QATyB,GASZ,IATY,CASzBA,QATyB;AAAA,UAUzBqB,cAVyB,GAUN,KAAKhC,KAVC,CAUzBgC,cAVyB;;AAAA,yBAYYX,WAC3CV,QAD2C,EAE3CyI,SAF2C,EAG3CnI,SAH2C,EAI3CsB,aAJ2C,EAK3C;AACE8G,yBAAiBvH,eADnB;AAEEwH,uBAAe/G,cAAcH,MAAd;AAFjB,OAL2C,CAZZ;AAAA,UAYfmH,cAZe,gBAYzBxH,QAZyB;AAAA,UAYCK,MAZD,gBAYCA,MAZD;;AAuBjC,UAAML,WAAWC,eAAeuH,cAAf,CAAjB;AACA,UAAMC,eAAejH,cAAcjB,IAAd,GAAqBc,MAArB,CAA4BA,MAA5B,CAArB;AACA,UAAMD,cAAcpD,iCAClB0D,kBADkB,EAElB,EAAEV,kBAAF,EAAYd,oBAAZ,EAAuBC,kCAAvB,EAAyCP,kBAAzC,EAFkB,EAGlB6I,aAAapH,MAAb,EAHkB,CAApB;;AAMA,aAAO;AACLtB,gBAAQ0I,YADH;AAELzH,0BAFK;AAGLI;AAHK,OAAP;AAKD;;;oCACesH,Y,EAAcC,U,EAAY;AAAA,UACxBC,kBADwB,GACDF,YADC,CAChC3I,MADgC;AAAA,oBASpC,KAAKc,KAT+B;AAAA,UAI9BW,aAJ8B,WAItCzB,MAJsC;AAAA,UAKzB2B,kBALyB,WAKtCN,WALsC;AAAA,UAM5BL,eAN4B,WAMtCC,QANsC;AAAA,UAOtCd,SAPsC,WAOtCA,SAPsC;AAAA,UAQtCC,gBARsC,WAQtCA,gBARsC;AAAA,UAUhCG,UAVgC,GAUjB,KAAKO,KAVY,CAUhCP,UAVgC;AAAA,UAWhCV,QAXgC,GAWnB,IAXmB,CAWhCA,QAXgC;AAAA,UAYhCqB,cAZgC,GAYb,KAAKhC,KAZQ,CAYhCgC,cAZgC;;AAAA,8BAcG8C,iBAAiB2E,YAAjB,CAdH;AAAA,UAcvBG,GAduB,qBAchC1E,OAdgC;AAAA,UAcL2E,GAdK,qBAclBzE,WAdkB;;AAAA,+BAeGN,iBAAiB4E,UAAjB,CAfH;AAAA,UAevBI,GAfuB,sBAehC5E,OAfgC;AAAA,UAeL6E,GAfK,sBAelB3E,WAfkB;;AAiBxC,UAAM4D,IAAIW,mBAAmBzG,KAAnB,GAA2B,CAA3B,CAAV;;AAEA,UAAM8G,QAAQ7E,KAAK8E,KAAL,CACZ,EAAEJ,IAAI,CAAJ,IAASC,IAAI,CAAJ,CAAT,GAAkBF,IAAI,CAAJ,IAASG,IAAI,CAAJ,CAA7B,KAAwCH,IAAI,CAAJ,IAASC,IAAI,CAAJ,CAAjD,CADY,CAAd;AAGA,UAAMK,QAAQ/E,KAAK8E,KAAL,CACZjB,IACE,CAAC,CAACA,IAAIa,IAAI,CAAJ,CAAL,KAAgBb,IAAIc,IAAI,CAAJ,CAApB,IAA8B,CAACd,IAAIY,IAAI,CAAJ,CAAL,KAAgBZ,IAAIe,IAAI,CAAJ,CAApB,CAA/B,KACGf,IAAIY,IAAI,CAAJ,CAAJ,IAAcZ,IAAIa,IAAI,CAAJ,CAAlB,CADH,CAFU,CAAd;;AAMA,UAAM9F,IAAIoB,KAAK8E,KAAL,CAAY,CAACD,KAAD,GAASJ,IAAI,CAAJ,CAAV,IAAqB,CAACI,KAAD,GAASF,IAAI,CAAJ,CAA9B,CAAX,CAAV;AACA,UAAMK,IAAIhF,KAAK8E,KAAL,CACRjB,IAAK,CAACkB,QAAQlB,CAAT,KAAeA,IAAIY,IAAI,CAAJ,CAAnB,CAAD,IAAgCM,SAASlB,IAAIc,IAAI,CAAJ,CAAb,CAAhC,CADI,CAAV;;AAIA,UAAMV,YAAY,CAACrF,CAAD,EAAIoG,CAAJ,EAAOrG,GAAP,CAAW6F,mBAAmB3F,MAA9B,CAAlB;AACA;;AAlCwC,yBAoCK3C,WAC3CV,QAD2C,EAE3CyI,SAF2C,EAG3CnI,SAH2C,EAI3C0I,kBAJ2C,EAK3C;AACEN,yBAAiBvH,eADnB;AAEEwH,uBAAe/G,cAAcH,MAAd;AAFjB,OAL2C,CApCL;AAAA,UAoCtBmH,cApCsB,gBAoChCxH,QApCgC;AAAA,UAoCNK,MApCM,gBAoCNA,MApCM;;AA+CxC,UAAML,WAAWC,eAAeuH,cAAf,CAAjB;AACA,UAAMC,eAAejH,cAAcjB,IAAd,GAAqBc,MAArB,CAA4BA,MAA5B,CAArB;;AAEA,UAAM2G,UAAUW,WAAW1E,SAA3B;AACA,UAAM7C,cAAcpD,iCAClB0D,kBADkB,EAElB,EAAEV,kBAAF,EAAYd,oBAAZ,EAAuBC,kCAAvB,EAAyCP,kBAAzC,EAFkB,EAGlB6I,aAAapH,MAAb,EAHkB,CAApB;AAKA,UAAM8G,cAAcjK,eAClBuK,YADkB,EAElBvI,SAFkB,EAGlB8H,OAHkB,EAIlBhH,QAJkB,CAApB;;AAOA,aAAO;AACLI,gCADK;AAELrB,gBAAQ0I,YAFH;AAGLzH,0BAHK;AAILgH,wBAJK;AAKLG;AALK,OAAP;AAOD;;;iCACY;AACX,WAAKnB,gBAAL,CAAsBqC,UAAtB;AACA,WAAKjB,YAAL,CAAkB,YAAlB;AACD;;;oCACeM,Y,EAAcC,U,EAAYV,C,EAAG;AAAA;;AAC3C,UAAI,CAAC,KAAKqB,iCAAV,EAA6C;AAC3C,aAAKA,iCAAL,GAAyC,IAAzC;AACA,YAAMzI,QAAQ,KAAK6E,eAAL,CAAqBgD,YAArB,EAAmCC,UAAnC,CAAd;;AAEA,aAAKP,YAAL,CAAkB,WAAlB,EAA+BvH,KAA/B,EAAsCoH,CAAtC;;AAEA,aAAKU,UAAL,GAAkBA,UAAlB;;AAEAY,8BAAsB,YAAM;AAC1B,iBAAKC,eAAL;AACA,iBAAKxD,IAAL,CAAU,EAAEyD,SAAS,WAAX,EAAV;AACA,iBAAKH,iCAAL,GAAyC,KAAzC;AACD,SAJD;AAKD;AACF;;;uCACkBZ,Y,EAAcT,C,EAAG;AAAA,UAC1B/H,SAD0B,GACZ,KAAKW,KADO,CAC1BX,SAD0B;;;AAGlC,UAAI,KAAKyI,UAAT,EAAqB;AACnB,YAAM9H,QAAQ,KAAK6E,eAAL,CAAqBgD,YAArB,EAAmC,KAAKC,UAAxC,CAAd;AADmB,YAEX5I,MAFW,GAEAc,KAFA,CAEXd,MAFW;;AAGnB,aAAKqI,YAAL,CAAkB,WAAlB,EAA+BvH,KAA/B,EAAsCoH,CAAtC;;AAEA,aAAKU,UAAL,GAAkB,IAAlB;;AAEA,aAAKe,gBAAL;;AAPmB,YASX9J,QATW,GASE,IATF,CASXA,QATW;;AAUnB,YAAM+J,YAAYzM,KAAK0C,QAAL,CAAlB;;AAEA,YAAMgC,QAAQ1E,KAAK6C,OAAOsB,MAAP,EAAL,CAAd;AACA,YAAMQ,MAAM3B,UAAUyJ,SAAV,CAAZ;AAbmB,YAcXC,UAdW,GAcI,KAAK3K,KAdT,CAcX2K,UAdW;;;AAgBnB,aAAKC,QAAL,CAAchJ,KAAd,EAAqB,YAAM;AACzB,cAAIe,QAAQC,GAAZ,EAAiB;AACf+H,uBAAWhI,KAAX,EAAkBC,GAAlB;AACD;AACF,SAJD;AAKD;AACF;;;+BACUiI,a,EAAe9B,O,EAASC,C,EAAG;AACpC,UAAI,KAAKrB,aAAT,EAAwB;AACxB;AAFoC,oBAOhC,KAAK/F,KAP2B;AAAA,UAIlCX,SAJkC,WAIlCA,SAJkC;AAAA,UAK1BsB,aAL0B,WAKlCzB,MALkC;AAAA,UAMxBgB,eANwB,WAMlCC,QANkC;AAAA,mBAQG,KAAK/B,KARR;AAAA,UAQ5B8K,cAR4B,UAQ5BA,cAR4B;AAAA,UAQZC,UARY,UAQZA,UARY;AAAA,UAS5BpK,QAT4B,GASf,IATe,CAS5BA,QAT4B;;AAUpC,UAAMqK,OAAOD,WAAW;AACtBjK,gBAAQyB,aADc;AAEtBtB,4BAFsB;AAGtB8H,wBAHsB;AAItBhH,kBAAUD,eAJY;AAKtBnB;AALsB,OAAX,CAAb;;AAQA,UAAMsK,KAAK1I,cAAcyI,IAAd,CAAX;AACA,UAAME,IAAIL,gBAAgB,CAAhB,GAAoB,IAAIC,cAAxB,GAAyC,IAAIA,cAAvD;AACA,UAAM1B,YAAY7G,cACfW,KADe,GAEfY,GAFe,CAEX;AAAA,eAAKmH,KAAK,CAAClH,IAAIkH,EAAL,IAAWC,CAArB;AAAA,OAFW,EAGfpH,GAHe,CAGXvB,cAAcyB,MAHH,CAAlB;;AApBoC,kCA0BlC,KAAK6C,uBAAL,CAA6BuC,SAA7B,CA1BkC;AAAA,UAyB5BtI,MAzB4B,yBAyB5BA,MAzB4B;AAAA,UAyBpBiB,QAzBoB,yBAyBpBA,QAzBoB;AAAA,UAyBVI,WAzBU,yBAyBVA,WAzBU;;AA4BpC,UAAM+G,cAAcjK,eAAe6B,MAAf,EAAuBG,SAAvB,EAAkC8H,OAAlC,EAA2ChH,QAA3C,CAApB;AACA,UAAMkH,gBAAgBjK,iBAAiBmD,WAAjB,EAA8B4G,OAA9B,CAAtB;;AAEA,WAAK0B,gBAAL;;AAEA,UAAMC,YAAYzM,KAAK0C,QAAL,CAAlB;;AAEA,UAAMgC,QAAQ1E,KAAK6C,OAAOsB,MAAP,EAAL,CAAd;AACA,UAAMQ,MAAM3B,UAAUyJ,SAAV,CAAZ;AApCoC,UAqC5BC,UArC4B,GAqCb,KAAK3K,KArCQ,CAqC5B2K,UArC4B;;;AAuCpC,WAAK/C,YAAL,GAAoB;AAClBmB,iBAASA,OADS;AAElBG,qBAAaA,WAFK;AAGlBD,uBAAeA;AAHG,OAApB;;AAMA,WAAKE,YAAL,CACE,MADF,EAEE;AACErI,sBADF;AAEEiB,0BAFF;AAGEI,gCAHF;AAIE4G,wBAJF;AAKEE,oCALF;AAMEC,gCANF;AAOEiC,cAAM;AAPR,OAFF,EAWEnC,CAXF;;AAcA,WAAK4B,QAAL,CACE;AACE9J,sBADF;AAEEiB,0BAFF;AAGEI;AAHF,OADF,EAME,YAAM;AACJ,YAAIQ,QAAQC,GAAZ,EAAiB;AACf+H,qBAAWhI,KAAX,EAAkBC,GAAlB;AACD;AACF,OAVH;AAYD;;;8BACSwG,S,EAAW;AAAA,mCAEjB,KAAKvC,uBAAL,CAA6BuC,SAA7B,CAFiB;AAAA,UACXtI,MADW,0BACXA,MADW;AAAA,UACHiB,QADG,0BACHA,QADG;AAAA,UACOI,WADP,0BACOA,WADP;;AAGnB,WAAKsI,gBAAL;;AAHmB,UAKXxJ,SALW,GAKG,KAAKW,KALR,CAKXX,SALW;AAAA,UAMXN,QANW,GAME,IANF,CAMXA,QANW;;AAOnB,UAAM+J,YAAYzM,KAAK0C,QAAL,CAAlB;AACA,UAAMgC,QAAQ1E,KAAK6C,OAAOsB,MAAP,EAAL,CAAd;AACA,UAAMQ,MAAM3B,UAAUyJ,SAAV,CAAZ;AATmB,UAUXC,UAVW,GAUI,KAAK3K,KAVT,CAUX2K,UAVW;;;AAYnB,WAAKC,QAAL,CACE;AACE9J,sBADF;AAEEiB,0BAFF;AAGEI;AAHF,OADF,EAME,YAAM;AACJ,YAAIQ,QAAQC,GAAZ,EAAiB+H,WAAWhI,KAAX,EAAkBC,GAAlB;AAClB,OARH;AAUD;;;8BACSwI,O,EAAShC,S,EAAW;AAC5B,WAAKqB,gBAAL;AAD4B,UAEPhI,kBAFO,GAEgB,KAAKb,KAFrB,CAEpBO,WAFoB;;AAG5B,UAAMA,cAAcM,mBAAmBqB,GAAnB,CAAuB,gBAAQ;AACjD,YAAIa,KAAK2D,EAAL,KAAY8C,OAAhB,EAAyB;AAAA,cACfC,MADe,GACJ1G,IADI,CACf0G,MADe;;AAEvB,8BACK1G,IADL;AAEE0G,oBAAQA,OAAO/J,IAAP,GAAcc,MAAd,CAAqBgH,SAArB,CAFV;AAGEkC,yBAAa;AAHf;AAKD,SAPD,MAOO;AACL,iBAAO3G,IAAP;AACD;AACF,OAXmB,CAApB;;AAaA,WAAKiG,QAAL,CAAc;AACZzI;AADY,OAAd;AAGD;;;iCACYoJ,I,EAAMvL,K,EAAOgJ,C,EAAG;AAAA;;AAC3B;;AAEA,WAAK9B,aAAL,CAAmBsE,OAAnB,CAA2B,gBAAQ;AACjC,YAAM5J,qBACD,OAAKA,KADJ;AAEJjB,oBAAU,OAAKA,QAFX;AAGJuG,yBAAe,OAAKA;AAHhB,UAAN;AAKAvC,aAAK8G,QAAL,CAAcF,IAAd,EAAoBvL,KAApB,EAA2B4B,KAA3B,EAAkCoH,CAAlC;AACD,OAPD;AAQD;;;yBACIhJ,K,EAAO;AACV,WAAKkH,aAAL,CAAmBsE,OAAnB,CAA2B,gBAAQ;AACjC,YAAIrN,UAAUwG,KAAKoC,IAAf,CAAJ,EAA0BpC,KAAKoC,IAAL,CAAU/G,KAAV;AAC3B,OAFD;AAGD;;;6BACQ;AACP,WAAKyK,gBAAL;AACA,WAAK1D,IAAL,CAAU,EAAE2E,OAAO,IAAT,EAAV;AACD;;;8BACS3C,O,EAASxG,a,SAA2BoJ,W,EAAa;AAAA,UAAvB9H,EAAuB,SAAvBA,EAAuB;AAAA,UAAnB+H,EAAmB,SAAnBA,EAAmB;AAAA,oBAKrD,KAAKhK,KALgD;AAAA,UAEvDX,SAFuD,WAEvDA,SAFuD;AAAA,UAGvDC,gBAHuD,WAGvDA,gBAHuD;AAAA,UAI1CuB,kBAJ0C,WAIvDN,WAJuD;AAAA,UAMjDd,UANiD,GAMlC,KAAKO,KAN6B,CAMjDP,UANiD;AAAA,UAOjDV,QAPiD,GAOpC,IAPoC,CAOjDA,QAPiD;AAAA,UAQjDqB,cARiD,GAQ9B,KAAKhC,KARyB,CAQjDgC,cARiD;;AAUzD;;AACA,UAAI5D,aAAamE,cAAcyB,MAA3B,CAAJ,EACE,MAAM,IAAIS,KAAJ,CACJ,sDACE,8EAFE,CAAN;;AAKF,UAAM2E,YAAY7G,cACfW,KADe,GAEfY,GAFe,CAEX;AAAA,eAAKC,IAAIF,EAAT;AAAA,OAFW,EAGfC,GAHe,CAGXvB,cAAcyB,MAHH,CAAlB;;AAjByD,yBAsBZ3C,WAC3CV,QAD2C,EAE3CyI,SAF2C,EAG3CnI,SAH2C,EAI3CsB,aAJ2C,EAK3C;AACE8G,yBAAiB,KAAKwC,uCADxB;AAEEvC,uBAAe,KAAKwC;AAFtB,OAL2C,CAtBY;AAAA,UAsBvCvC,cAtBuC,gBAsBjDxH,QAtBiD;AAAA,UAsBvBK,MAtBuB,gBAsBvBA,MAtBuB;;AAiCzD,UAAMoH,eAAejH,cAAcjB,IAAd,GAAqBc,MAArB,CAA4BA,MAA5B,CAArB;AACA,UAAML,WAAWC,eAAeuH,cAAf,CAAjB;AACA;;AAEA,UAAML,cAAcjK,eAClBuK,YADkB,EAElBvI,SAFkB,EAGlB8H,OAHkB,EAIlBhH,QAJkB,CAApB;AAMA,UAAMI,cAAcpD,iCAClB0D,kBADkB,EAElB,EAAEV,kBAAF,EAAYd,oBAAZ,EAAuBC,kCAAvB,EAAyCP,kBAAzC,EAFkB,EAGlB6I,aAAapH,MAAb,EAHkB,EAIlBwJ,EAJkB,EAKlBD,WALkB,CAApB;AAOA,UAAM1C,gBAAgBjK,iBAAiBmD,WAAjB,EAA8B4G,OAA9B,CAAtB;;AAEA;AACA,aAAO;AACLjI,gBAAQ0I,YADH;AAELzH,0BAFK;AAGLI,gCAHK;AAIL4G,wBAJK;AAKLE,oCALK;AAMLC;AANK,OAAP;AAQD;;;8BACS6C,a,EAAeC,c,EAAgBC,I,EAAMN,W,EAAa3C,C,EAAG;AAAA;;AAC7D,UAAI,CAAC,KAAKkD,2BAAV,EAAuC;AACrC,aAAKA,2BAAL,GAAmC,IAAnC;;AAEA,aAAKL,uCAAL,GACE,KAAKA,uCAAL,IAAgD,KAAKjK,KAAL,CAAWG,QAD7D;AAEA,aAAK+J,qCAAL,GACE,KAAKA,qCAAL,IACA,KAAKlK,KAAL,CAAWd,MAAX,CAAkBsB,MAAlB,EAFF;;AAIA,YAAMR,QAAQ,KAAK4E,SAAL,CACZuF,aADY,EAEZC,cAFY,EAGZC,IAHY,EAIZN,WAJY,CAAd;;AAOA,aAAKE,uCAAL,GAA+CjK,MAAMG,QAArD;AACA,aAAK+J,qCAAL,GAA6ClK,MAAMd,MAAN,CAAasB,MAAb,EAA7C;;AAEA,aAAKuF,aAAL,GAAqB,IAArB;AACA;;AAEA,aAAKwB,YAAL,CAAkB,KAAlB,EAAyBvH,KAAzB,EAAgCoH,CAAhC;;AAEA,aAAKpB,YAAL,GAAoB;AAClBmB,mBAASnH,MAAMmH,OADG;AAElBG,uBAAatH,MAAMsH,WAFD;AAGlBD,yBAAerH,MAAMqH;AAHH,SAApB;AAKAqB,8BAAsB,YAAM;AAC1B,iBAAK4B,2BAAL,GAAmC,KAAnC;AACA,iBAAK3B,eAAL;AACA,iBAAKxD,IAAL,CAAU,EAAEyD,SAAS,KAAX,EAAV;AACD,SAJD;AAKD;AACF;;;iCACYuB,a,EAAeC,c,EAAgBC,I,EAAMN,W,EAAa3C,C,EAAG;AAAA;;AAChE,UAAMpH,QAAQ,KAAK4E,SAAL,CACZuF,aADY,EAEZC,cAFY,EAGZC,IAHY,EAIZN,WAJY,CAAd;AAMA;AACA,WAAKE,uCAAL,GAA+C,IAA/C;AACA,WAAKC,qCAAL,GAA6C,IAA7C;;AAEA,WAAKnE,aAAL,GAAqB,KAArB;;AAEA;AAbgE,UAcxD7G,MAdwD,GActBc,KAdsB,CAcxDd,MAdwD;AAAA,UAchDiB,QAdgD,GActBH,KAdsB,CAchDG,QAdgD;AAAA,UActCI,WAdsC,GActBP,KAdsB,CActCO,WAdsC;;;AAgBhE,WAAKgH,YAAL,CAAkB,QAAlB,EAA4BvH,KAA5B,EAAmCoH,CAAnC;;AAEAsB,4BAAsB,YAAM;AAAA,YAClBrJ,SADkB,GACJ,OAAKW,KADD,CAClBX,SADkB;AAAA,YAElBN,QAFkB,GAEL,MAFK,CAElBA,QAFkB;;;AAI1B,YAAM+J,YAAYzM,KAAK0C,QAAL,CAAlB;AACA,YAAMgC,QAAQ1E,KAAK6C,OAAOsB,MAAP,EAAL,CAAd;AACA,YAAMQ,MAAM3B,UAAUyJ,SAAV,CAAZ;AACA;;AAP0B,YASlBC,UATkB,GASH,OAAK3K,KATF,CASlB2K,UATkB;;;AAW1B,eAAKF,gBAAL;;AAEA,eAAKG,QAAL,CACE;AACE9J,wBADF;AAEEiB,4BAFF;AAGEI;AAHF,SADF,EAME,YAAM;AACJ,cAAIQ,QAAQC,GAAZ,EAAiB+H,WAAWhI,KAAX,EAAkBC,GAAlB;AAClB,SARH;AAUD,OAvBD;AAwBD;;;oCACemJ,a,EAAe9C,a,EAAeD,C,EAAG;AAC/C,WAAKG,YAAL,CAAkB,WAAlB,EAA+B,KAAKvB,YAApC,EAAkDoB,CAAlD;AACD;;;qCACgBA,C,EAAG;AAClB,WAAKG,YAAL,CACE,YADF,EAEE;AACEgC,cAAM;AADR,OAFF,EAKEnC,CALF;AAOD;;;oCACeD,O,EAASoD,S,EAAWnD,C,EAAG;AAAA;;AACrC,UAAI,CAAC,KAAKoD,iCAAV,EAA6C;AAC3C,aAAKA,iCAAL,GAAyC,IAAzC;;AAD2C,sBAGU,KAAKxK,KAHf;AAAA,YAGnCO,WAHmC,WAGnCA,WAHmC;AAAA,YAGtBJ,QAHsB,WAGtBA,QAHsB;AAAA,YAGZjB,MAHY,WAGZA,MAHY;AAAA,YAGJG,SAHI,WAGJA,SAHI;;AAI3C,YAAMgI,gBAAgBjK,iBAAiBmD,WAAjB,EAA8B4G,OAA9B,CAAtB;AACA,YAAMG,cAAcjK,eAAe6B,MAAf,EAAuBG,SAAvB,EAAkC8H,OAAlC,EAA2ChH,QAA3C,CAApB;AACA,aAAKoH,YAAL,CACE,WADF,EAEE;AACEgC,gBAAM,IADR;AAEEpC,0BAFF;AAGE;AACAsD,uBAAa,KAAKA,WAJpB;AAKEnD,kCALF;AAMED;AANF,SAFF,EAUED,CAVF;;AAaA,aAAKqD,WAAL,GAAmBtD,OAAnB;AACA,aAAKnB,YAAL,GAAoB;AAClBmB,0BADkB;AAElBG,kCAFkB;AAGlBD;AAHkB,SAApB;;AAMAqB,8BAAsB,YAAM;AAC1B,iBAAKgC,gBAAL;AACA,iBAAKvF,IAAL,CAAU,EAAEyD,SAAS,WAAX,EAAV;AACA,iBAAK4B,iCAAL,GAAyC,KAAzC;AACD,SAJD;AAKD;AACF;;;qCACgBpD,C,EAAG;AAClB,WAAKG,YAAL,CAAkB,YAAlB,EAAgC,EAAEgC,MAAM,KAAR,EAAhC,EAAiDnC,CAAjD;AACA,WAAKsD,gBAAL;AACA,WAAKvF,IAAL,CAAU,EAAEyD,SAAS,YAAX,EAAV;AACD;;;2CAC6BxB,C,EAAG;AAAA,UAAfuD,QAAe,SAAfA,QAAe;;AAC/B,WAAKpD,YAAL,CAAkB,WAAlB,EAA+B,EAAEoD,kBAAF,EAA/B,EAA6CvD,CAA7C;AACD;;;sCACiCA,C,EAAG;AAAA;;AAAA,UAAxBuD,QAAwB,SAAxBA,QAAwB;AAAA,UAAdxD,OAAc,SAAdA,OAAc;AAAA,oBACkB,KAAKnH,KADvB;AAAA,UAC3BO,WAD2B,WAC3BA,WAD2B;AAAA,UACdJ,QADc,WACdA,QADc;AAAA,UACJjB,MADI,WACJA,MADI;AAAA,UACIG,SADJ,WACIA,SADJ;;AAEnC,UAAMgI,gBAAgBjK,iBAAiBmD,WAAjB,EAA8B4G,OAA9B,CAAtB;AACA,UAAMG,cAAcjK,eAAe6B,MAAf,EAAuBG,SAAvB,EAAkC8H,OAAlC,EAA2ChH,QAA3C,CAApB;;AAEA,WAAKoH,YAAL,CACE,MADF,EAEE;AACEoD,0BADF;AAEExD,wBAFF;AAGEG,gCAHF;AAIED;AAJF,OAFF,EAQED,CARF;;AAWA,WAAKpB,YAAL,GAAoB;AAClBmB,wBADkB;AAElBG,gCAFkB;AAGlBD;AAHkB,OAApB;;AAMAqB,4BAAsB,YAAM;AAC1B,eAAKgC,gBAAL;AACA,eAAKvF,IAAL,CAAU,EAAEyD,SAAS,MAAX,EAAV;AACD,OAHD;AAID;;;yCAC0BxB,C,EAAG;AAAA;;AAAA,UAAdD,OAAc,SAAdA,OAAc;;AAC5B,WAAKI,YAAL,CAAkB,SAAlB,EAA6B,EAAEJ,gBAAF,EAA7B,EAA0CC,CAA1C;;AAEAsB,4BAAsB,YAAM;AAC1B,eAAKgC,gBAAL;AACA,eAAKvF,IAAL,CAAU,EAAEyD,SAAS,SAAX,EAAV;AACD,OAHD;AAID;;;gCACWuB,a,EAAe/C,C,EAAG;AAAA;;AAC5B,WAAKG,YAAL,CAAkB,OAAlB,EAA2B,KAAKvB,YAAhC,EAA8CoB,CAA9C;;AAEAsB,4BAAsB,YAAM;AAC1B,eAAKgC,gBAAL;AACA,eAAKvF,IAAL,CAAU,EAAEyD,SAAS,OAAX,EAAV;AACD,OAHD;AAID;;;sCACiBuB,a,EAAe/C,C,EAAG;AAClC,WAAKG,YAAL,CAAkB,UAAlB,EAA8B,EAA9B,EAAkCH,CAAlC;AACD;;;sCACiB;AAChB,UAAM9G,aAAanC,cAAc,KAAKC,KAAnB,CAAnB;AACA,aAAO;AACLW,kBAAU,KAAKA,QADV;AAELoB,kBAAU,KAAKH,KAAL,CAAWG,QAFhB;AAGL1B,eAAO6B,WAAW7B,KAHb;AAILJ,gBAAQiC,WAAWjC,MAJd;AAKLkC,qBAAa,KAAKP,KAAL,CAAWO,WALnB;AAMLrB,gBAAQ,KAAKc,KAAL,CAAWd,MANd;AAOLG,mBAAW,KAAKW,KAAL,CAAWX,SAPjB;AAQLC,0BAAkB,KAAKU,KAAL,CAAWV,gBARxB;AASLsL,yBAAiB,KAAKxM,KAAL,CAAWuL,IATvB;AAULrL,gBAAQ,KAAKF,KAAL,CAAWE,MAVd;AAWLkI,eAAO,KAAKpI,KAAL,CAAWoI,KAXb;AAYL1B,mBAAW,KAAKA,SAZX;AAaLC,mBAAW,KAAKA,SAbX;AAcLnB,2BAAmB,KAAKA,iBAdnB;AAeLwB,gBAAQ,KAAKA,MAfR;AAgBLG,mBAAW,KAAKA,SAhBX;AAiBLC,qBAAa,KAAKA,WAjBb;AAkBLN,gCAAwB,KAAKA,sBAlBxB;AAmBLW,yBAAiB,KAAKA,eAnBjB;AAoBLJ,kBAAU,KAAKA,QApBV;AAqBLG,wBAAgB,KAAKA;AArBhB,OAAP;AAuBD;;;yCACoB;AAAA,wBACYjG,WAAW,KAAKvB,KAAhB,EAAuB,IAAvB,CADZ;AAAA,UACXW,QADW,eACXA,QADW;AAAA,UACEiB,KADF;;AAEnB,WAAKgJ,QAAL,CAAchJ,KAAd;AACA,WAAKjB,QAAL,GAAgBA,QAAhB;AACD;;;8CACyBlB,S,EAAW;AACnC,UAAMgN,QAAQlN,iBAAiB,KAAKS,KAAtB,EAA6BP,SAA7B,CAAd;;AAEA,UAAMiN,cAAcC,qBAClB,KAAK/K,KAAL,CAAWd,MADO,EAElB,KAAKc,KAAL,CAAWX,SAFO,EAGlB,KAAKW,KAAL,CAAWG,QAHO,CAApB;AAHmC,UAQdU,kBARc,GAQS,KAAKb,KARd,CAQ3BO,WAR2B;;;AAUnC,UAAIG,iBAAJ;AACA,UACE,CAACoK,WAAD,IACAD,KADA,IAEA,CAACnO,aAAa,KAAK0B,KAAL,CAAWoE,QAAxB,EAAkC3E,UAAU2E,QAA5C,CAHH,EAIE;AACA,YAAI3C,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,cAAI,CAAC+K,WAAL,EACErN,IAAI,iDAAJ,EADF,KAEK,IAAIoN,KAAJ,EACHpN,IACE,iDADF,EAEEC,oBAFF,EADG,KAKAD,IAAI,kBAAJ;AACN;AACD;AACAiD,mBAAWf,WAAW9B,SAAX,CAAX;AACA,aAAKmI,YAAL,GAAoB,EAApB;AACD,OAlBD,MAkBO;AAAA,mCACgB,KAAKhG,KAAL,CAAWd,MAAX,CAAkBsB,MAAlB,EADhB;AAAA;AAAA,YACEO,KADF;AAAA,YACSC,GADT;;AAEL,YAAMgK,eAAe1O,KAAK,KAAKyC,QAAV,CAArB;;AAEA,YAAMkM,kBAAkBnM,kBAAkBjB,SAAlB,CAAxB;AAJK,YAKGwB,SALH,GAKiB4L,eALjB,CAKG5L,SALH;;AAML,YAAMuB,qBACJvB,UAAU2L,YAAV,KAA2BhK,GAA3B,IAAkC3B,UAAU2L,YAAV,KAA2BjK,KAD/D;;AAGA,YAAIlB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,cAAI,KAAK3B,KAAL,CAAWY,IAAX,KAAoBnB,UAAUmB,IAAlC,EACEvB,IACE,wHADF,EAEEmD,kBAFF,EADF,KAMEnD,IACE,+EADF;AAGH;;AAEDiD,mBAAWD,YACTwK,eADS,EAET,KAAKjL,KAAL,CAAWd,MAFF,EAGTrB,SAHS,EAIT+C,kBAJS,EAKTC,kBALS,CAAX;AAOD;;AAzDkC,sBA2DJH,QA3DI;AAAA,UA2D3B3B,QA3D2B,aA2D3BA,QA3D2B;AAAA,UA2DdiB,KA3Dc;;AA6DnC,UAAI,KAAK+F,aAAT,EAAwB;AACtB,YAAIlG,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCtC,cAAI,oBAAJ;AACD;AACF,OAJD,MAIO;AACL;;;;;;;;;;;;;AAaA,aAAKoL,gBAAL;;AAEA,aAAKG,QAAL,CAAchJ,KAAd;AACD;AACD,WAAKjB,QAAL,GAAgBA,QAAhB;AACD;AACD;;;;;;;;iCAKayK,O,EAAS;AAAA,UACZjJ,WADY,GACI,KAAKP,KADT,CACZO,WADY;;AAEpB,UAAI2K,UAAU,KAAd;AACA,UAAMC,iBAAiB5K,YAAY2B,GAAZ,CAAgB,gBAAQ;AAC7C,YACE,CAAC1F,aAAagN,OAAb,KAAyBzG,KAAK2D,EAAL,KAAY8C,OAAtC,KACA,CAAC9M,aAAaqG,KAAK0G,MAAL,CAAYjJ,MAAZ,EAAb,EAAmCuC,KAAKqI,WAAxC,CAFH,EAGE;AACAF,oBAAU,IAAV;AACA,8BACKnI,IADL;AAEE0G,oBAAQ1G,KAAK0G,MAAL,CAAYjJ,MAAZ,CAAmBuC,KAAKqI,WAAxB,CAFV;AAGE1B,yBAAa;AAHf;AAKD;AACD,eAAO3G,IAAP;AACD,OAbsB,CAAvB;;AAeA,UAAImI,OAAJ,EAAa;AACX,aAAKrC,gBAAL;AACA,aAAKG,QAAL,CAAc;AACZzI,uBAAa4K;AADD,SAAd;AAGD;AACF;;;4CACuB;AACtB;AACA,aAAO,CAAC,KAAKpF,aAAb;AACD;;;6BACQ;AAAA,oBAaH,KAAK3H,KAbF;AAAA,UAELuL,IAFK,WAELA,IAFK;AAAA,UAGLtL,MAHK,WAGLA,MAHK;AAAA,UAILI,KAJK,WAILA,KAJK;AAAA,UAKLH,MALK,WAKLA,MALK;AAAA,UAML2I,SANK,WAMLA,SANK;AAAA,UAOLoE,MAPK,WAOLA,MAPK;AAAA,UAQLC,YARK,WAQLA,YARK;AAAA,UASL9E,KATK,WASLA,KATK;AAAA,UAUL+E,cAVK,WAULA,cAVK;AAAA,UAWLC,QAXK,WAWLA,QAXK;AAAA,UAYLC,SAZK,WAYLA,SAZK;AAAA,oBAcuC,KAAKrN,KAd5C;AAAA,UAcCsN,uBAdD,WAcCA,uBAdD;AAAA,UAc0BC,QAd1B,WAc0BA,QAd1B;AAAA,oBAgB8C,KAAK3L,KAhBnD;AAAA,UAgBCG,QAhBD,WAgBCA,QAhBD;AAAA,UAgBWjB,MAhBX,WAgBWA,MAhBX;AAAA,UAgBmBG,SAhBnB,WAgBmBA,SAhBnB;AAAA,UAgB8BkB,WAhB9B,WAgB8BA,WAhB9B;;AAiBP,UAAMD,aAAanC,cAAc,KAAKC,KAAnB,CAAnB;;AAEA,UAAM0M,cAAcC,qBAAqB7L,MAArB,EAA6BG,SAA7B,EAAwCc,QAAxC,CAApB;;AAEA,UAAMyL,cAAcF,2BAA2BZ,WAA/C;AACA,UAAMe,SAAS5N,gBAAf;AACA,aACE;AAAA;AAAA;AACE,iBAAO,EAAE6N,UAAU,UAAZ,EAAwBrN,YAAxB,EAA+BJ,cAA/B,EADT;AAEE,qBAAW4I,SAFb;AAGE,mBAAS0E;AAHX;AAKE,4BAAC,eAAD;AACE,eAAK,KAAKhG,uBADZ;AAEE,gBAAMgE,IAFR;AAGE,iBAAOnD,KAHT;AAIE,iBAAO/H,KAJT;AAKE,kBAAQJ,MALV;AAME,kBAAQgN;AANV,UALF;AAaE;AAAA;AAAA;AACE,uBAAWpE,SADb;AAEE,mBAAOxI,KAFT;AAGE,oBAAQJ,MAHV;AAIE,mBAAO,EAAEyN,UAAU,UAAZ,EAAwBT,QAAQA,SAAS,CAAzC;AAJT;AAMGQ,gBANH;AAOE;AAAA;AAAA;AACE;AAAA;AAAA,gBAAU,IAAG,iBAAb;AACE;AACE,mBAAE,GADJ;AAEE,mBAAE,GAFJ;AAGE,uBAAOvL,WAAW7B,KAHpB;AAIE,wBAAQ6B,WAAWjC;AAJrB;AADF,aADF;AASGkC,wBAAY2B,GAAZ,CAAgB,UAACa,IAAD,EAAOgJ,GAAP;AAAA,qBACf;AAAA;AAAA,kBAAU,KAAKA,GAAf,EAAoB,yBAAuBhJ,KAAK2D,EAAhD;AACE,8CAAM,GAAE,GAAR,EAAY,GAAE,GAAd,EAAkB,OAAO3D,KAAKtE,KAA9B,EAAqC,QAAQsE,KAAK1E,MAAlD;AADF,eADe;AAAA,aAAhB;AATH,WAPF;AAsBE;AAAA;AAAA,cAAG,2BAAwBC,OAAOI,IAAP,GAAc,GAAtC,YAA8CJ,OAAOC,GAAP,GAAa,GAA3D,OAAH;AACE,gCAAC,YAAD;AACE,mBAAK,KAAKmH,oBADZ;AAEE,uCAAyBkG,WAF3B;AAGE,yBAAWL,kBAAkBT,WAH/B;AAIE,oBAAMW,aAAaX,WAJrB;AAKE,mBAAKU,YAAYV,WALnB;AAME,qBAAOxK,WAAW7B,KANpB;AAOE,sBAAQ6B,WAAWjC,MAPrB;AAQE,2BAAakC,WARf;AASE,sBAAQrB,MATV;AAUE,yBAAWG,SAVb;AAWE,qBAAOiM,YAXT;AAYE,kCAAoB,KAAKlN,KAAL,CAAW4N,kBAZjC;AAaE,mCAAqB,KAAK3G,mBAb5B;AAcE,6BAAe,KAAKb,iBAdtB;AAeE,uBAAS,KAAKH,WAfhB;AAgBE,6BAAe,KAAKE,iBAhBtB;AAiBE,2BAAa,KAAKD,eAjBpB;AAkBE,2BAAa,KAAKT,eAlBpB;AAmBE,4BAAc,KAAKC,gBAnBrB;AAoBE,4BAAc,KAAKC,gBApBrB;AAqBE,2BAAa,KAAKU,eArBpB;AAsBE,sBAAQ,KAAKC,UAtBf;AAuBE,8BAAgB,KAAKC,aAvBvB;AAwBE,sBAAQ,KAAKX,UAxBf;AAyBE,2BAAa,KAAKC,eAzBpB;AA0BE,8BAAgB,KAAKC,kBA1BvB;AA2BE,qBAAO,KAAKC,SA3Bd;AA4BE,wBAAU,KAAKC;AA5BjB,cADF;AAgCE;AAAA;AAAA,gBAAG,WAAU,qCAAb;AACG,mBAAKhG,KAAL,CAAWiC;AADd;AAhCF;AAtBF;AAbF,OADF;AA2ED;;;;EA36BuBtE,S;;AA86B1B,SAASgP,oBAAT,CAA8B7L,MAA9B,EAAsCG,SAAtC,EAAiDL,IAAjD,EAAuD;AACrD,MAAM8L,cACJ,CAAC7H,MAAM/D,OAAOG,UAAUhD,KAAK2C,IAAL,CAAV,CAAP,CAAN,CAAD,IAAyCzC,UAAU2C,OAAOkD,MAAjB,CAD3C;AAEA,SAAO0I,WAAP;AACD;;AAEDrH,YAAYwI,SAAZ,GAAwB;AACtBxN,SAAOzC,UAAUkQ,MAAV,CAAiBC,UADF;AAEtB9N,UAAQrC,UAAUkQ,MAAV,CAAiBC,UAFH;AAGtB7N,UAAQtC,UAAUoQ,MAHI;AAItB5F,SAAOxK,UAAUkQ,MAAV,CAAiBC,UAJF;AAKtB;AACAxC,QAAM3N,UAAUqQ,KAAV,CAAgB,CAAC,KAAD,EAAQ,QAAR,CAAhB,CANgB;AAOtBjN,wBAAsBpD,UAAUkQ,MAPV;AAQtB3M,2BAAyBvD,UAAUkQ,MARb;AAStBlN,QAAMhD,UAAUsQ,KAAV,CAAgBH,UATA;AAUtB;AACA9M,aAAWrD,UAAUuQ,IAXC;AAYtB/J,YAAUxG,UAAUwQ,SAAV,CAAoB,CAACxQ,UAAUsQ,KAAX,EAAkBtQ,UAAUuQ,IAA5B,CAApB,CAZY;AAatBpD,cAAYnN,UAAUuQ,IAbA;;AAetBtF,aAAWjL,UAAUyQ,MAfC;AAgBtBC,cAAY1Q,UAAUyQ,MAAV,CAAiBN,UAhBP;AAiBtBd,UAAQrP,UAAUkQ,MAjBI;AAkBtB7L,YAAUrE,UAAUkK,IAAV,CAAeiG,UAlBH;AAmBtBjN,UAAQlD,UAAUuQ,IAAV,CAAeJ,UAnBD;AAoBtB/L,kBAAgBpE,UAAUuQ,IApBJ;AAqBtB1N,cAAY7C,UAAU2Q,IArBA;AAsBtBjB,2BAAyB1P,UAAU2Q,IAtBb;AAuBtB1L,WAASjF,UAAUwQ,SAAV,CAAoB,CAC3BxQ,UAAUkQ,MADiB,EAE3BlQ,UAAU4Q,KAAV,CAAgB;AACdlO,UAAM1C,UAAUkQ,MADF;AAEdvN,WAAO3C,UAAUkQ;AAFH,GAAhB,CAF2B,CAApB,CAvBa;AA8BtBZ,gBAActP,UAAU2Q,IA9BF;AA+BtBzD,kBAAgBlN,UAAUkQ,MA/BJ;AAgCtBnD,cAAY/M,UAAUuQ,IAhCA;AAiCtBjN,oBAAkB,0BAAUlB,KAAV,EAAiByO,QAAjB,CAA0B,qBAA1B,EAAiD;AACjE,QAAIrQ,aAAa4B,MAAMyO,QAAN,CAAb,CAAJ,EAAmC;AACjCC,cAAQC,IAAR,CACE,uCACE,6DADF,GAEE,2DAFF,GAGE,oEAJJ;AAMD,KAPD,MAOO,IAAI,OAAO3O,MAAMyO,QAAN,CAAP,KAA2B,UAA/B,EAA2C;AAChD,aAAO,IAAIhK,KAAJ,CAAU,uCAAV,CAAP;AACD;AACF,GA5CqB;AA6CtB0I,kBAAgBvP,UAAU2Q,IA7CJ;AA8CtBnB,YAAUxP,UAAU2Q,IA9CE;AA+CtBxN,SAAOnD,UAAUwQ,SAAV,CAAoB,CACzBxQ,UAAUyQ,MADe,EAEzBzQ,UAAU2Q,IAFe,EAGzB3Q,UAAUuQ,IAHe,CAApB,CA/Ce;AAoDtBd,aAAWzP,UAAU2Q,IApDC;AAqDtBhB,YAAU3P,UAAUuQ,IArDE;AAsDtBrL,kCAAgClF,UAAU2Q,IAtDpB;AAuDtBX,sBAAoBhQ,UAAU2Q;AAvDR,CAAxB;;AA0DAlJ,YAAYuJ,YAAZ,GAA2B;AACzB1O,UAAQ,EAAEC,KAAK,EAAP,EAAWI,OAAO,EAAlB,EAAsBH,QAAQ,EAA9B,EAAkCE,MAAM,EAAxC,EADiB;AAEzBiL,QAAM,QAFmB;AAGzBvK,wBAAsB,CAHG;AAIzBG,2BAAyB,IAAI,GAJJ;AAKzB0H,aAAW,kBALc;AAMzBoE,UAAQ,CANiB;AAOzB7I,YAAU,CAACrG,GAAD,EAAMC,GAAN,CAPe;AAQzBgE,kBAAgBzD,QARS;AASzBsE,WAAS,CATgB;AAUzB5B,aAAW1C,QAVc;AAWzBkC,cAAY,KAXa;AAYzB6M,2BAAyB,IAZA;AAazBJ,gBAAc,IAbW;AAczBvC,cAAYnM,IAda;AAezB+O,YAAU/O,IAfe;AAgBzB2O,kBAAgB,IAhBS;AAiBzBC,YAAU,IAjBe;AAkBzBC,aAAW,IAlBc;AAmBzBvC,kBAAgB,GAnBS;AAoBzB/J,SAAO,KApBkB;AAqBzBgK,cAAYpM,oBArBa;AAsBzBmE,kCAAgC,IAtBP;AAuBzB;AACA8K,sBAAoB;AAxBK,CAA3B;;AA2BAvI,YAAYwJ,iBAAZ,GAAgC;AAC9B9M,YAAUnE,UAAUsQ,KADU;AAE9BvN,YAAU/C,UAAUsQ,KAFU;AAG9B/L,eAAavE,UAAUkR,OAAV,CACXlR,UAAU4Q,KAAV,CAAgB;AACdlG,QAAI1K,UAAUwQ,SAAV,CAAoB,CAACxQ,UAAUkQ,MAAX,EAAmBlQ,UAAUyQ,MAA7B,CAApB,EAA0DN,UADhD;AAEdgB,YAAQnR,UAAUkR,OAAV,CAAkBlR,UAAUkQ,MAA5B,EAAoCC,UAF9B;AAGdlL,aAASjF,UAAUwQ,SAAV,CAAoB,CAC3BxQ,UAAUkQ,MADiB,EAE3BlQ,UAAU4Q,KAAV,CAAgB;AACdrO,WAAKvC,UAAUkQ,MADD;AAEd1N,cAAQxC,UAAUkQ;AAFJ,KAAhB,CAF2B,CAApB,CAHK;AAUdkB,cAAUpR,UAAUkR,OAAV,CAAkBlR,UAAUuQ,IAA5B,CAVI;AAWdc,sBAAkBrR,UAAUuQ,IAXd;AAYd9C,YAAQzN,UAAUuQ,IAAV,CAAeJ,UAZT;AAadmB,sBAAkBtR,UAAU4Q,KAAV,CAAgB;AAChCW,UAAIvR,UAAUyQ,MADkB;AAEhCe,cAAQxR,UAAUuQ;AAFc,KAAhB,CAbJ;AAiBd9N,WAAOzC,UAAUkQ,MAAV,CAAiBC,UAjBV;AAkBd9N,YAAQrC,UAAUkQ,MAAV,CAAiBC;AAlBX,GAAhB,CADW,EAqBXA,UAxB4B;AAyB9BjN,UAAQlD,UAAUuQ,IAAV,CAAeJ,UAzBO;AA0B9B9M,aAAWrD,UAAUuQ,IAAV,CAAeJ,UA1BI;AA2B9B7M,oBAAkBtD,UAAUuQ,IAAV,CAAeJ,UA3BH;AA4B9B1N,SAAOzC,UAAUkQ,MAAV,CAAiBC,UA5BM;AA6B9B9N,UAAQrC,UAAUkQ,MAAV,CAAiBC,UA7BK;AA8B9BvB,mBAAiB5O,UAAUqQ,KAAV,CAAgB,CAAC,KAAD,EAAQ,QAAR,CAAhB,EAAmCF,UA9BtB;AA+B9B7N,UAAQtC,UAAUoQ,MAAV,CAAiBD,UA/BK;AAgC9B3F,SAAOxK,UAAUkQ,MAAV,CAAiBC,UAhCM;AAiC9BvI,qBAAmB5H,UAAUuQ,IAjCC;AAkC9BzH,aAAW9I,UAAUuQ,IAlCS;AAmC9BxH,aAAW/I,UAAUuQ,IAnCS;AAoC9B9G,YAAUzJ,UAAUuQ,IApCU;AAqC9BnH,UAAQpJ,UAAUuQ,IArCY;AAsC9BhH,aAAWvJ,UAAUuQ,IAtCS;AAuC9B/G,eAAaxJ,UAAUuQ,IAvCO;AAwC9B3G,kBAAgB5J,UAAUuQ,IAxCI;AAyC9BrH,0BAAwBlJ,UAAUuQ,IAzCJ;AA0C9B1G,mBAAiB7J,UAAUuQ;AA1CG,CAAhC;;AA6CA9I,YAAYgK,KAAZ,GAAoB;AAAA,SAAM;AACxBC,UAAM5K,EAAE4K,IADgB;AAExBC,UAAM7K,EAAE6K,IAFgB;AAGxBC,UAAM9K,EAAE8K,IAHgB;AAIxBC,SAAK/K,EAAE+K,GAJiB;AAKxBC,WAAOhL,EAAEgL,KALe;AAMxBC,YAAQjL,EAAEiL;AANc,GAAN;AAAA,CAApB;;AASA,eAAetK,WAAf","file":"ChartCanvas.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent, min, max } from 'd3-array';\n\nimport {\n  head,\n  last,\n  isDefined,\n  isNotDefined,\n  clearCanvas,\n  shallowEqual,\n  identity,\n  noop,\n  functor,\n  getLogger,\n} from './utils';\n\n/* eslint-disable no-unused-vars */\nimport {\n  mouseBasedZoomAnchor,\n  lastVisibleItemBasedZoomAnchor,\n  rightDomainBasedZoomAnchor,\n} from './utils/zoomBehavior';\n/* eslint-enable no-unused-vars */\n\nimport {\n  getNewChartConfig,\n  getChartConfigWithUpdatedYScales,\n  getCurrentCharts,\n  getCurrentItem,\n} from './utils/ChartDataUtil';\n\nimport EventCapture from './EventCapture';\n\nimport CanvasContainer from './CanvasContainer';\nimport evaluator from './scale/evaluator';\n\nconst log = getLogger('ChartCanvas');\n\nconst CANDIDATES_FOR_RESET = [\n  'seriesName',\n  /* \"data\",*/\n  /* \"xAccessor\",*/\n];\n\nfunction shouldResetChart(thisProps, nextProps) {\n  return !CANDIDATES_FOR_RESET.every(key => {\n    const result = shallowEqual(thisProps[key], nextProps[key]);\n    // console.log(key, result);\n    return result;\n  });\n}\n\nfunction getCursorStyle() {\n  const tooltipStyle = `\n\t.react-stockcharts-grabbing-cursor {\n\t\tpointer-events: all;\n\t\tcursor: -moz-grabbing;\n\t\tcursor: -webkit-grabbing;\n\t\tcursor: grabbing;\n\t}\n\t.react-stockcharts-crosshair-cursor {\n\t\tpointer-events: all;\n\t\tcursor: crosshair;\n\t}\n\t.react-stockcharts-tooltip-hover {\n\t\tpointer-events: all;\n\t\tcursor: pointer;\n\t}\n\t.react-stockcharts-avoid-interaction {\n\t\tpointer-events: none;\n\t}\n\t.react-stockcharts-enable-interaction {\n\t\tpointer-events: all;\n\t}\n\t.react-stockcharts-tooltip {\n\t\tpointer-events: all;\n\t\tcursor: pointer;\n\t}\n\t.react-stockcharts-default-cursor {\n\t\tcursor: default;\n\t}\n\t.react-stockcharts-move-cursor {\n\t\tcursor: move;\n\t}\n\t.react-stockcharts-pointer-cursor {\n\t\tcursor: pointer;\n\t}\n\t.react-stockcharts-ns-resize-cursor {\n\t\tcursor: ns-resize;\n\t}\n\t.react-stockcharts-ew-resize-cursor {\n\t\tcursor: ew-resize;\n\t}`;\n  return <style type=\"text/css\">{tooltipStyle}</style>;\n}\n\nfunction getDimensions(props) {\n  return {\n    height: props.height - props.margin.top - props.margin.bottom,\n    width: props.width - props.margin.left - props.margin.right,\n  };\n}\n\nfunction getXScaleDirection(flipXScale) {\n  return flipXScale ? -1 : 1;\n}\n\nfunction calculateFullData(props) {\n  const {\n    data: fullData,\n    plotFull,\n    xScale,\n    clamp,\n    pointsPerPxThreshold,\n    flipXScale,\n  } = props;\n  const { xAccessor, displayXAccessor, minPointsPerPxThreshold } = props;\n\n  const useWholeData = isDefined(plotFull) ? plotFull : xAccessor === identity;\n\n  const { filterData } = evaluator({\n    xScale,\n    useWholeData,\n    clamp,\n    pointsPerPxThreshold,\n    minPointsPerPxThreshold,\n    flipXScale,\n  });\n\n  return {\n    xAccessor,\n    displayXAccessor: displayXAccessor || xAccessor,\n    xScale: xScale.copy(),\n    fullData,\n    filterData,\n  };\n}\nfunction resetChart(props, firstCalculation = false) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!firstCalculation) log('CHART RESET');\n  }\n\n  const state = calculateState(props);\n  const { xAccessor, displayXAccessor, fullData } = state;\n  const { plotData: initialPlotData, xScale } = state;\n  const { postCalculator, children } = props;\n\n  const plotData = postCalculator(initialPlotData);\n\n  const dimensions = getDimensions(props);\n  const chartConfig = getChartConfigWithUpdatedYScales(\n    getNewChartConfig(dimensions, children),\n    { plotData, xAccessor, displayXAccessor, fullData },\n    xScale.domain()\n  );\n\n  return {\n    ...state,\n    xScale,\n    plotData,\n    chartConfig,\n  };\n}\n\nfunction updateChart(\n  newState,\n  initialXScale,\n  props,\n  lastItemWasVisible,\n  initialChartConfig\n) {\n  const { fullData, xScale, xAccessor, displayXAccessor, filterData } =\n    newState;\n\n  const lastItem = last(fullData);\n  const [start, end] = initialXScale.domain();\n\n  if (process.env.NODE_ENV !== 'production') {\n    log('TRIVIAL CHANGE');\n  }\n\n  const { postCalculator, children, padding, flipXScale } = props;\n  const { maintainPointsPerPixelOnResize } = props;\n  const direction = getXScaleDirection(flipXScale);\n  const dimensions = getDimensions(props);\n\n  const updatedXScale = setXRange(xScale, dimensions, padding, direction);\n\n  // console.log(\"lastItemWasVisible =\", lastItemWasVisible, end, xAccessor(lastItem), end >= xAccessor(lastItem));\n  let initialPlotData;\n  if (!lastItemWasVisible || end >= xAccessor(lastItem)) {\n    // resize comes here...\n    // get plotData between [start, end] and do not change the domain\n    const [rangeStart, rangeEnd] = initialXScale.range();\n    const [newRangeStart, newRangeEnd] = updatedXScale.range();\n    const newDomainExtent =\n      ((newRangeEnd - newRangeStart) / (rangeEnd - rangeStart)) * (end - start);\n    const newStart = maintainPointsPerPixelOnResize\n      ? end - newDomainExtent\n      : start;\n\n    const lastItemX = initialXScale(xAccessor(lastItem));\n    // console.log(\"pointsPerPixel => \", newStart, start, end, updatedXScale(end));\n    const response = filterData(\n      fullData,\n      [newStart, end],\n      xAccessor,\n      updatedXScale,\n      { fallbackStart: start, fallbackEnd: { lastItem, lastItemX } }\n    );\n    initialPlotData = response.plotData;\n    updatedXScale.domain(response.domain);\n    // console.log(\"HERE!!!!!\", start, end);\n  } else if (lastItemWasVisible && end < xAccessor(lastItem)) {\n    // this is when a new item is added and last item was visible\n    // so slide over and show the new item also\n\n    // get plotData between [xAccessor(l) - (end - start), xAccessor(l)] and DO change the domain\n    const dx = initialXScale(xAccessor(lastItem)) - initialXScale.range()[1];\n    const [newStart, newEnd] = initialXScale\n      .range()\n      .map(x => x + dx)\n      .map(initialXScale.invert);\n\n    const response = filterData(\n      fullData,\n      [newStart, newEnd],\n      xAccessor,\n      updatedXScale\n    );\n    initialPlotData = response.plotData;\n    updatedXScale.domain(response.domain); // if last item was visible, then shift\n  }\n  // plotData = getDataOfLength(fullData, showingInterval, plotData.length)\n  const plotData = postCalculator(initialPlotData);\n  const chartConfig = getChartConfigWithUpdatedYScales(\n    getNewChartConfig(dimensions, children, initialChartConfig),\n    { plotData, xAccessor, displayXAccessor, fullData },\n    updatedXScale.domain()\n  );\n\n  return {\n    xScale: updatedXScale,\n    xAccessor,\n    chartConfig,\n    plotData,\n    fullData,\n    filterData,\n  };\n}\n\nfunction calculateState(props) {\n  const {\n    xAccessor: inputXAccesor,\n    xExtents: xExtentsProp,\n    data,\n    padding,\n    flipXScale,\n  } = props;\n\n  if (process.env.NODE_ENV !== 'production' && isDefined(props.xScale.invert)) {\n    for (let i = 1; i < data.length; i++) {\n      const prev = data[i - 1];\n      const curr = data[i];\n      if (inputXAccesor(prev) > inputXAccesor(curr)) {\n        throw new Error(\n          \"'data' is not sorted on 'xAccessor', send 'data' sorted in ascending order of 'xAccessor'\"\n        );\n      }\n    }\n  }\n\n  const direction = getXScaleDirection(flipXScale);\n  const dimensions = getDimensions(props);\n\n  const extent =\n    typeof xExtentsProp === 'function'\n      ? xExtentsProp(data)\n      : d3Extent(\n          xExtentsProp\n            .map(d => functor(d))\n            .map(each => each(data, inputXAccesor))\n        );\n\n  const { xAccessor, displayXAccessor, xScale, fullData, filterData } =\n    calculateFullData(props);\n  const updatedXScale = setXRange(xScale, dimensions, padding, direction);\n\n  const { plotData, domain } = filterData(\n    fullData,\n    extent,\n    inputXAccesor,\n    updatedXScale\n  );\n\n  if (process.env.NODE_ENV !== 'production' && plotData.length <= 1) {\n    throw new Error(\n      `Showing ${plotData.length} datapoints, review the 'xExtents' prop of ChartCanvas`\n    );\n  }\n  return {\n    plotData,\n    xScale: updatedXScale.domain(domain),\n    xAccessor,\n    displayXAccessor,\n    fullData,\n    filterData,\n  };\n}\n\nfunction setXRange(xScale, dimensions, padding, direction = 1) {\n  if (xScale.rangeRoundPoints) {\n    if (isNaN(padding))\n      throw new Error('padding has to be a number for ordinal scale');\n    xScale.rangeRoundPoints([0, dimensions.width], padding);\n  } else if (xScale.padding) {\n    if (isNaN(padding))\n      throw new Error('padding has to be a number for ordinal scale');\n    xScale.range([0, dimensions.width]);\n    xScale.padding(padding / 2);\n  } else {\n    const { left, right } = isNaN(padding)\n      ? padding\n      : { left: padding, right: padding };\n    if (direction > 0) {\n      xScale.range([left, dimensions.width - right]);\n    } else {\n      xScale.range([dimensions.width - right, left]);\n    }\n  }\n  return xScale;\n}\n\nfunction pinchCoordinates(pinch) {\n  const { touch1Pos, touch2Pos } = pinch;\n\n  return {\n    topLeft: [\n      Math.min(touch1Pos[0], touch2Pos[0]),\n      Math.min(touch1Pos[1], touch2Pos[1]),\n    ],\n    bottomRight: [\n      Math.max(touch1Pos[0], touch2Pos[0]),\n      Math.max(touch1Pos[1], touch2Pos[1]),\n    ],\n  };\n}\n\nclass ChartCanvas extends Component {\n  constructor() {\n    super();\n    this.getDataInfo = this.getDataInfo.bind(this);\n    this.getCanvasContexts = this.getCanvasContexts.bind(this);\n\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.handlePinchZoom = this.handlePinchZoom.bind(this);\n    this.handlePinchZoomEnd = this.handlePinchZoomEnd.bind(this);\n    this.handlePan = this.handlePan.bind(this);\n    this.handlePanEnd = this.handlePanEnd.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleDoubleClick = this.handleDoubleClick.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleDragStart = this.handleDragStart.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.handleDragEnd = this.handleDragEnd.bind(this);\n\n    this.panHelper = this.panHelper.bind(this);\n    this.pinchZoomHelper = this.pinchZoomHelper.bind(this);\n    this.xAxisZoom = this.xAxisZoom.bind(this);\n    this.yAxisZoom = this.yAxisZoom.bind(this);\n    this.resetYDomain = this.resetYDomain.bind(this);\n    this.calculateStateForDomain = this.calculateStateForDomain.bind(this);\n    this.generateSubscriptionId = this.generateSubscriptionId.bind(this);\n    this.draw = this.draw.bind(this);\n    this.redraw = this.redraw.bind(this);\n    this.getAllPanConditions = this.getAllPanConditions.bind(this);\n\n    this.subscriptions = [];\n    this.subscribe = this.subscribe.bind(this);\n    this.unsubscribe = this.unsubscribe.bind(this);\n    this.amIOnTop = this.amIOnTop.bind(this);\n    this.saveEventCaptureNode = this.saveEventCaptureNode.bind(this);\n    this.saveCanvasContainerNode = this.saveCanvasContainerNode.bind(this);\n    this.setCursorClass = this.setCursorClass.bind(this);\n    this.getMutableState = this.getMutableState.bind(this);\n    // this.canvasDrawCallbackList = [];\n    this.interactiveState = [];\n    this.panInProgress = false;\n\n    this.state = {};\n    this.mutableState = {};\n    this.lastSubscriptionId = 0;\n  }\n  saveEventCaptureNode(node) {\n    this.eventCaptureNode = node;\n  }\n  saveCanvasContainerNode(node) {\n    this.canvasContainerNode = node;\n  }\n  getMutableState() {\n    return this.mutableState;\n  }\n  getDataInfo() {\n    return {\n      ...this.state,\n      fullData: this.fullData,\n    };\n  }\n  getCanvasContexts() {\n    if (this.canvasContainerNode) {\n      return this.canvasContainerNode.getCanvasContexts();\n    }\n  }\n  generateSubscriptionId() {\n    this.lastSubscriptionId++;\n    return this.lastSubscriptionId;\n  }\n  clearBothCanvas() {\n    const canvases = this.getCanvasContexts();\n    if (canvases && canvases.axes) {\n      clearCanvas(\n        [\n          canvases.axes,\n          // canvases.hover,\n          canvases.mouseCoord,\n        ],\n        this.props.ratio\n      );\n    }\n  }\n  clearMouseCanvas() {\n    const canvases = this.getCanvasContexts();\n    if (canvases && canvases.mouseCoord) {\n      clearCanvas(\n        [\n          canvases.mouseCoord,\n          // canvases.hover,\n        ],\n        this.props.ratio\n      );\n    }\n  }\n  clearThreeCanvas() {\n    const canvases = this.getCanvasContexts();\n    if (canvases && canvases.axes) {\n      clearCanvas(\n        [\n          canvases.axes,\n          // canvases.hover,\n          canvases.mouseCoord,\n          canvases.bg,\n        ],\n        this.props.ratio\n      );\n    }\n  }\n  subscribe(id, rest) {\n    const {\n      getPanConditions = functor({\n        draggable: false,\n        panEnabled: true,\n      }),\n    } = rest;\n    this.subscriptions = this.subscriptions.concat({\n      id,\n      ...rest,\n      getPanConditions,\n    });\n  }\n  unsubscribe(id) {\n    this.subscriptions = this.subscriptions.filter(each => each.id !== id);\n  }\n  getAllPanConditions() {\n    return this.subscriptions.map(each => each.getPanConditions());\n  }\n  setCursorClass(className) {\n    if (this.eventCaptureNode != null) {\n      this.eventCaptureNode.setCursorClass(className);\n    }\n  }\n  amIOnTop(id) {\n    const dragableComponents = this.subscriptions.filter(\n      each => each.getPanConditions().draggable\n    );\n\n    return dragableComponents.length > 0 && last(dragableComponents).id === id;\n  }\n  handleContextMenu(mouseXY, e) {\n    const { xAccessor, chartConfig, plotData, xScale } = this.state;\n\n    const currentCharts = getCurrentCharts(chartConfig, mouseXY);\n    const currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n\n    this.triggerEvent(\n      'contextmenu',\n      {\n        mouseXY,\n        currentItem,\n        currentCharts,\n      },\n      e\n    );\n  }\n  calculateStateForDomain(newDomain) {\n    const {\n      xAccessor,\n      displayXAccessor,\n      xScale: initialXScale,\n      chartConfig: initialChartConfig,\n      plotData: initialPlotData,\n    } = this.state;\n    const { filterData } = this.state;\n    const { fullData } = this;\n    const { postCalculator } = this.props;\n\n    const { plotData: beforePlotData, domain } = filterData(\n      fullData,\n      newDomain,\n      xAccessor,\n      initialXScale,\n      {\n        currentPlotData: initialPlotData,\n        currentDomain: initialXScale.domain(),\n      }\n    );\n\n    const plotData = postCalculator(beforePlotData);\n    const updatedScale = initialXScale.copy().domain(domain);\n    const chartConfig = getChartConfigWithUpdatedYScales(\n      initialChartConfig,\n      { plotData, xAccessor, displayXAccessor, fullData },\n      updatedScale.domain()\n    );\n\n    return {\n      xScale: updatedScale,\n      plotData,\n      chartConfig,\n    };\n  }\n  pinchZoomHelper(initialPinch, finalPinch) {\n    const { xScale: initialPinchXScale } = initialPinch;\n\n    const {\n      xScale: initialXScale,\n      chartConfig: initialChartConfig,\n      plotData: initialPlotData,\n      xAccessor,\n      displayXAccessor,\n    } = this.state;\n    const { filterData } = this.state;\n    const { fullData } = this;\n    const { postCalculator } = this.props;\n\n    const { topLeft: iTL, bottomRight: iBR } = pinchCoordinates(initialPinch);\n    const { topLeft: fTL, bottomRight: fBR } = pinchCoordinates(finalPinch);\n\n    const e = initialPinchXScale.range()[1];\n\n    const xDash = Math.round(\n      -(iBR[0] * fTL[0] - iTL[0] * fBR[0]) / (iTL[0] - iBR[0])\n    );\n    const yDash = Math.round(\n      e +\n        ((e - iBR[0]) * (e - fTL[0]) - (e - iTL[0]) * (e - fBR[0])) /\n          (e - iTL[0] - (e - iBR[0]))\n    );\n\n    const x = Math.round((-xDash * iTL[0]) / (-xDash + fTL[0]));\n    const y = Math.round(\n      e - ((yDash - e) * (e - iTL[0])) / (yDash + (e - fTL[0]))\n    );\n\n    const newDomain = [x, y].map(initialPinchXScale.invert);\n    // var domainR = initial.right + right;\n\n    const { plotData: beforePlotData, domain } = filterData(\n      fullData,\n      newDomain,\n      xAccessor,\n      initialPinchXScale,\n      {\n        currentPlotData: initialPlotData,\n        currentDomain: initialXScale.domain(),\n      }\n    );\n\n    const plotData = postCalculator(beforePlotData);\n    const updatedScale = initialXScale.copy().domain(domain);\n\n    const mouseXY = finalPinch.touch1Pos;\n    const chartConfig = getChartConfigWithUpdatedYScales(\n      initialChartConfig,\n      { plotData, xAccessor, displayXAccessor, fullData },\n      updatedScale.domain()\n    );\n    const currentItem = getCurrentItem(\n      updatedScale,\n      xAccessor,\n      mouseXY,\n      plotData\n    );\n\n    return {\n      chartConfig,\n      xScale: updatedScale,\n      plotData,\n      mouseXY,\n      currentItem,\n    };\n  }\n  cancelDrag() {\n    this.eventCaptureNode.cancelDrag();\n    this.triggerEvent('dragcancel');\n  }\n  handlePinchZoom(initialPinch, finalPinch, e) {\n    if (!this.waitingForPinchZoomAnimationFrame) {\n      this.waitingForPinchZoomAnimationFrame = true;\n      const state = this.pinchZoomHelper(initialPinch, finalPinch);\n\n      this.triggerEvent('pinchzoom', state, e);\n\n      this.finalPinch = finalPinch;\n\n      requestAnimationFrame(() => {\n        this.clearBothCanvas();\n        this.draw({ trigger: 'pinchzoom' });\n        this.waitingForPinchZoomAnimationFrame = false;\n      });\n    }\n  }\n  handlePinchZoomEnd(initialPinch, e) {\n    const { xAccessor } = this.state;\n\n    if (this.finalPinch) {\n      const state = this.pinchZoomHelper(initialPinch, this.finalPinch);\n      const { xScale } = state;\n      this.triggerEvent('pinchzoom', state, e);\n\n      this.finalPinch = null;\n\n      this.clearThreeCanvas();\n\n      const { fullData } = this;\n      const firstItem = head(fullData);\n\n      const start = head(xScale.domain());\n      const end = xAccessor(firstItem);\n      const { onLoadMore } = this.props;\n\n      this.setState(state, () => {\n        if (start < end) {\n          onLoadMore(start, end);\n        }\n      });\n    }\n  }\n  handleZoom(zoomDirection, mouseXY, e) {\n    if (this.panInProgress) return;\n    // console.log(\"zoomDirection \", zoomDirection, \" mouseXY \", mouseXY);\n    const {\n      xAccessor,\n      xScale: initialXScale,\n      plotData: initialPlotData,\n    } = this.state;\n    const { zoomMultiplier, zoomAnchor } = this.props;\n    const { fullData } = this;\n    const item = zoomAnchor({\n      xScale: initialXScale,\n      xAccessor,\n      mouseXY,\n      plotData: initialPlotData,\n      fullData,\n    });\n\n    const cx = initialXScale(item);\n    const c = zoomDirection > 0 ? 1 * zoomMultiplier : 1 / zoomMultiplier;\n    const newDomain = initialXScale\n      .range()\n      .map(x => cx + (x - cx) * c)\n      .map(initialXScale.invert);\n\n    const { xScale, plotData, chartConfig } =\n      this.calculateStateForDomain(newDomain);\n\n    const currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n    const currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\n    this.clearThreeCanvas();\n\n    const firstItem = head(fullData);\n\n    const start = head(xScale.domain());\n    const end = xAccessor(firstItem);\n    const { onLoadMore } = this.props;\n\n    this.mutableState = {\n      mouseXY: mouseXY,\n      currentItem: currentItem,\n      currentCharts: currentCharts,\n    };\n\n    this.triggerEvent(\n      'zoom',\n      {\n        xScale,\n        plotData,\n        chartConfig,\n        mouseXY,\n        currentCharts,\n        currentItem,\n        show: true,\n      },\n      e\n    );\n\n    this.setState(\n      {\n        xScale,\n        plotData,\n        chartConfig,\n      },\n      () => {\n        if (start < end) {\n          onLoadMore(start, end);\n        }\n      }\n    );\n  }\n  xAxisZoom(newDomain) {\n    const { xScale, plotData, chartConfig } =\n      this.calculateStateForDomain(newDomain);\n    this.clearThreeCanvas();\n\n    const { xAccessor } = this.state;\n    const { fullData } = this;\n    const firstItem = head(fullData);\n    const start = head(xScale.domain());\n    const end = xAccessor(firstItem);\n    const { onLoadMore } = this.props;\n\n    this.setState(\n      {\n        xScale,\n        plotData,\n        chartConfig,\n      },\n      () => {\n        if (start < end) onLoadMore(start, end);\n      }\n    );\n  }\n  yAxisZoom(chartId, newDomain) {\n    this.clearThreeCanvas();\n    const { chartConfig: initialChartConfig } = this.state;\n    const chartConfig = initialChartConfig.map(each => {\n      if (each.id === chartId) {\n        const { yScale } = each;\n        return {\n          ...each,\n          yScale: yScale.copy().domain(newDomain),\n          yPanEnabled: true,\n        };\n      } else {\n        return each;\n      }\n    });\n\n    this.setState({\n      chartConfig,\n    });\n  }\n  triggerEvent(type, props, e) {\n    // console.log(\"triggering ->\", type);\n\n    this.subscriptions.forEach(each => {\n      const state = {\n        ...this.state,\n        fullData: this.fullData,\n        subscriptions: this.subscriptions,\n      };\n      each.listener(type, props, state, e);\n    });\n  }\n  draw(props) {\n    this.subscriptions.forEach(each => {\n      if (isDefined(each.draw)) each.draw(props);\n    });\n  }\n  redraw() {\n    this.clearThreeCanvas();\n    this.draw({ force: true });\n  }\n  panHelper(mouseXY, initialXScale, { dx, dy }, chartsToPan) {\n    const {\n      xAccessor,\n      displayXAccessor,\n      chartConfig: initialChartConfig,\n    } = this.state;\n    const { filterData } = this.state;\n    const { fullData } = this;\n    const { postCalculator } = this.props;\n\n    // console.log(dx, dy);\n    if (isNotDefined(initialXScale.invert))\n      throw new Error(\n        'xScale provided does not have an invert() method.' +\n          'You are likely using an ordinal scale. This scale does not support zoom, pan'\n      );\n\n    const newDomain = initialXScale\n      .range()\n      .map(x => x - dx)\n      .map(initialXScale.invert);\n\n    const { plotData: beforePlotData, domain } = filterData(\n      fullData,\n      newDomain,\n      xAccessor,\n      initialXScale,\n      {\n        currentPlotData: this.hackyWayToStopPanBeyondBounds__plotData,\n        currentDomain: this.hackyWayToStopPanBeyondBounds__domain,\n      }\n    );\n\n    const updatedScale = initialXScale.copy().domain(domain);\n    const plotData = postCalculator(beforePlotData);\n    // console.log(last(plotData));\n\n    const currentItem = getCurrentItem(\n      updatedScale,\n      xAccessor,\n      mouseXY,\n      plotData\n    );\n    const chartConfig = getChartConfigWithUpdatedYScales(\n      initialChartConfig,\n      { plotData, xAccessor, displayXAccessor, fullData },\n      updatedScale.domain(),\n      dy,\n      chartsToPan\n    );\n    const currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\n    // console.log(initialXScale.domain(), newDomain, updatedScale.domain());\n    return {\n      xScale: updatedScale,\n      plotData,\n      chartConfig,\n      mouseXY,\n      currentCharts,\n      currentItem,\n    };\n  }\n  handlePan(mousePosition, panStartXScale, dxdy, chartsToPan, e) {\n    if (!this.waitingForPanAnimationFrame) {\n      this.waitingForPanAnimationFrame = true;\n\n      this.hackyWayToStopPanBeyondBounds__plotData =\n        this.hackyWayToStopPanBeyondBounds__plotData || this.state.plotData;\n      this.hackyWayToStopPanBeyondBounds__domain =\n        this.hackyWayToStopPanBeyondBounds__domain ||\n        this.state.xScale.domain();\n\n      const state = this.panHelper(\n        mousePosition,\n        panStartXScale,\n        dxdy,\n        chartsToPan\n      );\n\n      this.hackyWayToStopPanBeyondBounds__plotData = state.plotData;\n      this.hackyWayToStopPanBeyondBounds__domain = state.xScale.domain();\n\n      this.panInProgress = true;\n      // console.log(panStartXScale.domain(), state.xScale.domain());\n\n      this.triggerEvent('pan', state, e);\n\n      this.mutableState = {\n        mouseXY: state.mouseXY,\n        currentItem: state.currentItem,\n        currentCharts: state.currentCharts,\n      };\n      requestAnimationFrame(() => {\n        this.waitingForPanAnimationFrame = false;\n        this.clearBothCanvas();\n        this.draw({ trigger: 'pan' });\n      });\n    }\n  }\n  handlePanEnd(mousePosition, panStartXScale, dxdy, chartsToPan, e) {\n    const state = this.panHelper(\n      mousePosition,\n      panStartXScale,\n      dxdy,\n      chartsToPan\n    );\n    // console.log(this.canvasDrawCallbackList.map(d => d.type));\n    this.hackyWayToStopPanBeyondBounds__plotData = null;\n    this.hackyWayToStopPanBeyondBounds__domain = null;\n\n    this.panInProgress = false;\n\n    // console.log(\"PANEND\", panEnd++);\n    const { xScale, plotData, chartConfig } = state;\n\n    this.triggerEvent('panend', state, e);\n\n    requestAnimationFrame(() => {\n      const { xAccessor } = this.state;\n      const { fullData } = this;\n\n      const firstItem = head(fullData);\n      const start = head(xScale.domain());\n      const end = xAccessor(firstItem);\n      // console.log(start, end, start < end ? \"Load more\" : \"I have it\");\n\n      const { onLoadMore } = this.props;\n\n      this.clearThreeCanvas();\n\n      this.setState(\n        {\n          xScale,\n          plotData,\n          chartConfig,\n        },\n        () => {\n          if (start < end) onLoadMore(start, end);\n        }\n      );\n    });\n  }\n  handleMouseDown(mousePosition, currentCharts, e) {\n    this.triggerEvent('mousedown', this.mutableState, e);\n  }\n  handleMouseEnter(e) {\n    this.triggerEvent(\n      'mouseenter',\n      {\n        show: true,\n      },\n      e\n    );\n  }\n  handleMouseMove(mouseXY, inputType, e) {\n    if (!this.waitingForMouseMoveAnimationFrame) {\n      this.waitingForMouseMoveAnimationFrame = true;\n\n      const { chartConfig, plotData, xScale, xAccessor } = this.state;\n      const currentCharts = getCurrentCharts(chartConfig, mouseXY);\n      const currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n      this.triggerEvent(\n        'mousemove',\n        {\n          show: true,\n          mouseXY,\n          // prevMouseXY is used in interactive components\n          prevMouseXY: this.prevMouseXY,\n          currentItem,\n          currentCharts,\n        },\n        e\n      );\n\n      this.prevMouseXY = mouseXY;\n      this.mutableState = {\n        mouseXY,\n        currentItem,\n        currentCharts,\n      };\n\n      requestAnimationFrame(() => {\n        this.clearMouseCanvas();\n        this.draw({ trigger: 'mousemove' });\n        this.waitingForMouseMoveAnimationFrame = false;\n      });\n    }\n  }\n  handleMouseLeave(e) {\n    this.triggerEvent('mouseleave', { show: false }, e);\n    this.clearMouseCanvas();\n    this.draw({ trigger: 'mouseleave' });\n  }\n  handleDragStart({ startPos }, e) {\n    this.triggerEvent('dragstart', { startPos }, e);\n  }\n  handleDrag({ startPos, mouseXY }, e) {\n    const { chartConfig, plotData, xScale, xAccessor } = this.state;\n    const currentCharts = getCurrentCharts(chartConfig, mouseXY);\n    const currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n\n    this.triggerEvent(\n      'drag',\n      {\n        startPos,\n        mouseXY,\n        currentItem,\n        currentCharts,\n      },\n      e\n    );\n\n    this.mutableState = {\n      mouseXY,\n      currentItem,\n      currentCharts,\n    };\n\n    requestAnimationFrame(() => {\n      this.clearMouseCanvas();\n      this.draw({ trigger: 'drag' });\n    });\n  }\n  handleDragEnd({ mouseXY }, e) {\n    this.triggerEvent('dragend', { mouseXY }, e);\n\n    requestAnimationFrame(() => {\n      this.clearMouseCanvas();\n      this.draw({ trigger: 'dragend' });\n    });\n  }\n  handleClick(mousePosition, e) {\n    this.triggerEvent('click', this.mutableState, e);\n\n    requestAnimationFrame(() => {\n      this.clearMouseCanvas();\n      this.draw({ trigger: 'click' });\n    });\n  }\n  handleDoubleClick(mousePosition, e) {\n    this.triggerEvent('dblclick', {}, e);\n  }\n  getChildContext() {\n    const dimensions = getDimensions(this.props);\n    return {\n      fullData: this.fullData,\n      plotData: this.state.plotData,\n      width: dimensions.width,\n      height: dimensions.height,\n      chartConfig: this.state.chartConfig,\n      xScale: this.state.xScale,\n      xAccessor: this.state.xAccessor,\n      displayXAccessor: this.state.displayXAccessor,\n      chartCanvasType: this.props.type,\n      margin: this.props.margin,\n      ratio: this.props.ratio,\n      xAxisZoom: this.xAxisZoom,\n      yAxisZoom: this.yAxisZoom,\n      getCanvasContexts: this.getCanvasContexts,\n      redraw: this.redraw,\n      subscribe: this.subscribe,\n      unsubscribe: this.unsubscribe,\n      generateSubscriptionId: this.generateSubscriptionId,\n      getMutableState: this.getMutableState,\n      amIOnTop: this.amIOnTop,\n      setCursorClass: this.setCursorClass,\n    };\n  }\n  componentWillMount() {\n    const { fullData, ...state } = resetChart(this.props, true);\n    this.setState(state);\n    this.fullData = fullData;\n  }\n  componentWillReceiveProps(nextProps) {\n    const reset = shouldResetChart(this.props, nextProps);\n\n    const interaction = isInteractionEnabled(\n      this.state.xScale,\n      this.state.xAccessor,\n      this.state.plotData\n    );\n    const { chartConfig: initialChartConfig } = this.state;\n\n    let newState;\n    if (\n      !interaction ||\n      reset ||\n      !shallowEqual(this.props.xExtents, nextProps.xExtents)\n    ) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!interaction)\n          log('RESET CHART, changes to a non interactive chart');\n        else if (reset)\n          log(\n            'RESET CHART, one or more of these props changed',\n            CANDIDATES_FOR_RESET\n          );\n        else log('xExtents changed');\n      }\n      // do reset\n      newState = resetChart(nextProps);\n      this.mutableState = {};\n    } else {\n      const [start, end] = this.state.xScale.domain();\n      const prevLastItem = last(this.fullData);\n\n      const calculatedState = calculateFullData(nextProps);\n      const { xAccessor } = calculatedState;\n      const lastItemWasVisible =\n        xAccessor(prevLastItem) <= end && xAccessor(prevLastItem) >= start;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.props.data !== nextProps.data)\n          log(\n            'data is changed but seriesName did not, change the seriesName if you wish to reset the chart and lastItemWasVisible = ',\n            lastItemWasVisible\n          );\n        else\n          log(\n            'Trivial change, may be width/height or type changed, but that does not matter'\n          );\n      }\n\n      newState = updateChart(\n        calculatedState,\n        this.state.xScale,\n        nextProps,\n        lastItemWasVisible,\n        initialChartConfig\n      );\n    }\n\n    const { fullData, ...state } = newState;\n\n    if (this.panInProgress) {\n      if (process.env.NODE_ENV !== 'production') {\n        log('Pan is in progress');\n      }\n    } else {\n      /*\n\t\t\tif (!reset) {\n\t\t\t\tstate.chartConfig\n\t\t\t\t\t.forEach((each) => {\n\t\t\t\t\t\t// const sourceChartConfig = initialChartConfig.filter(d => d.id === each.id);\n\t\t\t\t\t\tconst prevChartConfig = find(initialChartConfig, d => d.id === each.id);\n\t\t\t\t\t\tif (isDefined(prevChartConfig) && prevChartConfig.yPanEnabled) {\n\t\t\t\t\t\t\teach.yScale.domain(prevChartConfig.yScale.domain());\n\t\t\t\t\t\t\teach.yPanEnabled = prevChartConfig.yPanEnabled;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\t*/\n      this.clearThreeCanvas();\n\n      this.setState(state);\n    }\n    this.fullData = fullData;\n  }\n  /*\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconsole.error(this.state.chartConfig, this.state.chartConfig.map(d => d.yScale.domain()));\n\t}\n\t*/\n  resetYDomain(chartId) {\n    const { chartConfig } = this.state;\n    let changed = false;\n    const newChartConfig = chartConfig.map(each => {\n      if (\n        (isNotDefined(chartId) || each.id === chartId) &&\n        !shallowEqual(each.yScale.domain(), each.realYDomain)\n      ) {\n        changed = true;\n        return {\n          ...each,\n          yScale: each.yScale.domain(each.realYDomain),\n          yPanEnabled: false,\n        };\n      }\n      return each;\n    });\n\n    if (changed) {\n      this.clearThreeCanvas();\n      this.setState({\n        chartConfig: newChartConfig,\n      });\n    }\n  }\n  shouldComponentUpdate() {\n    // console.log(\"Happneing.....\", !this.panInProgress)\n    return !this.panInProgress;\n  }\n  render() {\n    const {\n      type,\n      height,\n      width,\n      margin,\n      className,\n      zIndex,\n      defaultFocus,\n      ratio,\n      mouseMoveEvent,\n      panEvent,\n      zoomEvent,\n    } = this.props;\n    const { useCrossHairStyleCursor, onSelect } = this.props;\n\n    const { plotData, xScale, xAccessor, chartConfig } = this.state;\n    const dimensions = getDimensions(this.props);\n\n    const interaction = isInteractionEnabled(xScale, xAccessor, plotData);\n\n    const cursorStyle = useCrossHairStyleCursor && interaction;\n    const cursor = getCursorStyle();\n    return (\n      <div\n        style={{ position: 'relative', width, height }}\n        className={className}\n        onClick={onSelect}\n      >\n        <CanvasContainer\n          ref={this.saveCanvasContainerNode}\n          type={type}\n          ratio={ratio}\n          width={width}\n          height={height}\n          zIndex={zIndex}\n        />\n        <svg\n          className={className}\n          width={width}\n          height={height}\n          style={{ position: 'absolute', zIndex: zIndex + 5 }}\n        >\n          {cursor}\n          <defs>\n            <clipPath id=\"chart-area-clip\">\n              <rect\n                x=\"0\"\n                y=\"0\"\n                width={dimensions.width}\n                height={dimensions.height}\n              />\n            </clipPath>\n            {chartConfig.map((each, idx) => (\n              <clipPath key={idx} id={`chart-area-clip-${each.id}`}>\n                <rect x=\"0\" y=\"0\" width={each.width} height={each.height} />\n              </clipPath>\n            ))}\n          </defs>\n          <g transform={`translate(${margin.left + 0.5}, ${margin.top + 0.5})`}>\n            <EventCapture\n              ref={this.saveEventCaptureNode}\n              useCrossHairStyleCursor={cursorStyle}\n              mouseMove={mouseMoveEvent && interaction}\n              zoom={zoomEvent && interaction}\n              pan={panEvent && interaction}\n              width={dimensions.width}\n              height={dimensions.height}\n              chartConfig={chartConfig}\n              xScale={xScale}\n              xAccessor={xAccessor}\n              focus={defaultFocus}\n              disableInteraction={this.props.disableInteraction}\n              getAllPanConditions={this.getAllPanConditions}\n              onContextMenu={this.handleContextMenu}\n              onClick={this.handleClick}\n              onDoubleClick={this.handleDoubleClick}\n              onMouseDown={this.handleMouseDown}\n              onMouseMove={this.handleMouseMove}\n              onMouseEnter={this.handleMouseEnter}\n              onMouseLeave={this.handleMouseLeave}\n              onDragStart={this.handleDragStart}\n              onDrag={this.handleDrag}\n              onDragComplete={this.handleDragEnd}\n              onZoom={this.handleZoom}\n              onPinchZoom={this.handlePinchZoom}\n              onPinchZoomEnd={this.handlePinchZoomEnd}\n              onPan={this.handlePan}\n              onPanEnd={this.handlePanEnd}\n            />\n\n            <g className=\"react-stockcharts-avoid-interaction\">\n              {this.props.children}\n            </g>\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nfunction isInteractionEnabled(xScale, xAccessor, data) {\n  const interaction =\n    !isNaN(xScale(xAccessor(head(data)))) && isDefined(xScale.invert);\n  return interaction;\n}\n\nChartCanvas.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  margin: PropTypes.object,\n  ratio: PropTypes.number.isRequired,\n  // interval: PropTypes.oneOf([\"D\", \"W\", \"M\"]), // ,\"m1\", \"m5\", \"m15\", \"W\", \"M\"\n  type: PropTypes.oneOf(['svg', 'hybrid']),\n  pointsPerPxThreshold: PropTypes.number,\n  minPointsPerPxThreshold: PropTypes.number,\n  data: PropTypes.array.isRequired,\n  // initialDisplay: PropTypes.number,\n  xAccessor: PropTypes.func,\n  xExtents: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n  zoomAnchor: PropTypes.func,\n\n  className: PropTypes.string,\n  seriesName: PropTypes.string.isRequired,\n  zIndex: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  xScale: PropTypes.func.isRequired,\n  postCalculator: PropTypes.func,\n  flipXScale: PropTypes.bool,\n  useCrossHairStyleCursor: PropTypes.bool,\n  padding: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      left: PropTypes.number,\n      right: PropTypes.number,\n    }),\n  ]),\n  defaultFocus: PropTypes.bool,\n  zoomMultiplier: PropTypes.number,\n  onLoadMore: PropTypes.func,\n  displayXAccessor: function (props, propName /* , componentName */) {\n    if (isNotDefined(props[propName])) {\n      console.warn(\n        '`displayXAccessor` is not defined,' +\n          ' will use the value from `xAccessor` as `displayXAccessor`.' +\n          ' This might be ok if you do not use a discontinuous scale' +\n          ' but if you do, provide a `displayXAccessor` prop to `ChartCanvas`'\n      );\n    } else if (typeof props[propName] !== 'function') {\n      return new Error('displayXAccessor has to be a function');\n    }\n  },\n  mouseMoveEvent: PropTypes.bool,\n  panEvent: PropTypes.bool,\n  clamp: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n    PropTypes.func,\n  ]),\n  zoomEvent: PropTypes.bool,\n  onSelect: PropTypes.func,\n  maintainPointsPerPixelOnResize: PropTypes.bool,\n  disableInteraction: PropTypes.bool,\n};\n\nChartCanvas.defaultProps = {\n  margin: { top: 20, right: 30, bottom: 30, left: 80 },\n  type: 'hybrid',\n  pointsPerPxThreshold: 2,\n  minPointsPerPxThreshold: 1 / 100,\n  className: 'react-stockchart',\n  zIndex: 1,\n  xExtents: [min, max],\n  postCalculator: identity,\n  padding: 0,\n  xAccessor: identity,\n  flipXScale: false,\n  useCrossHairStyleCursor: true,\n  defaultFocus: true,\n  onLoadMore: noop,\n  onSelect: noop,\n  mouseMoveEvent: true,\n  panEvent: true,\n  zoomEvent: true,\n  zoomMultiplier: 1.1,\n  clamp: false,\n  zoomAnchor: mouseBasedZoomAnchor,\n  maintainPointsPerPixelOnResize: true,\n  // ratio: 2,\n  disableInteraction: false,\n};\n\nChartCanvas.childContextTypes = {\n  plotData: PropTypes.array,\n  fullData: PropTypes.array,\n  chartConfig: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      origin: PropTypes.arrayOf(PropTypes.number).isRequired,\n      padding: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n          top: PropTypes.number,\n          bottom: PropTypes.number,\n        }),\n      ]),\n      yExtents: PropTypes.arrayOf(PropTypes.func),\n      yExtentsProvider: PropTypes.func,\n      yScale: PropTypes.func.isRequired,\n      mouseCoordinates: PropTypes.shape({\n        at: PropTypes.string,\n        format: PropTypes.func,\n      }),\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  xScale: PropTypes.func.isRequired,\n  xAccessor: PropTypes.func.isRequired,\n  displayXAccessor: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  chartCanvasType: PropTypes.oneOf(['svg', 'hybrid']).isRequired,\n  margin: PropTypes.object.isRequired,\n  ratio: PropTypes.number.isRequired,\n  getCanvasContexts: PropTypes.func,\n  xAxisZoom: PropTypes.func,\n  yAxisZoom: PropTypes.func,\n  amIOnTop: PropTypes.func,\n  redraw: PropTypes.func,\n  subscribe: PropTypes.func,\n  unsubscribe: PropTypes.func,\n  setCursorClass: PropTypes.func,\n  generateSubscriptionId: PropTypes.func,\n  getMutableState: PropTypes.func,\n};\n\nChartCanvas.ohlcv = d => ({\n  date: d.date,\n  open: d.open,\n  high: d.high,\n  low: d.low,\n  close: d.close,\n  volume: d.volume,\n});\n\nexport default ChartCanvas;\n"]}