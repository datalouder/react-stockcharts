{"version":3,"sources":["../../../../src/lib/calculator/pointAndFigure.js"],"names":["isNotDefined","PointAndFigure","defaultOptions","createBox","d","dateAccessor","dateMutator","box","open","fromDate","toDate","startOfYear","startOfQuarter","startOfMonth","startOfWeek","updateColumns","columnData","forEach","boxes","eachBox","close","high","Math","max","low","min","date","options","calculator","rawData","reversal","boxSize","sourcePath","source","pricingMethod","column","push","volume","length","upwardMovement","downwardMovement","abs","direction","noOfBoxes","floor","i","prevBoxClose","x","arguments"],"mappings":"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","file":"pointAndFigure.js","sourcesContent":["import { isNotDefined } from '../utils';\nimport { PointAndFigure as defaultOptions } from './defaultOptionsForComputation';\n\nfunction createBox(d, dateAccessor, dateMutator) {\n  const box = {\n    open: d.open,\n    fromDate: dateAccessor(d),\n    toDate: dateAccessor(d),\n    startOfYear: d.startOfYear,\n    startOfQuarter: d.startOfQuarter,\n    startOfMonth: d.startOfMonth,\n    startOfWeek: d.startOfWeek,\n  };\n  dateMutator(box, dateAccessor(d));\n  return box;\n}\n\nfunction updateColumns(columnData, dateAccessor, dateMutator) {\n  columnData.forEach(function (d) {\n    // var lastBox = d.boxes[d.boxes.length - 1];\n\n    d.startOfYear = false;\n    d.startOfQuarter = false;\n    d.startOfMonth = false;\n    d.startOfWeek = false;\n\n    d.boxes.forEach(function (eachBox) {\n      if (isNotDefined(d.open)) d.open = eachBox.open;\n      d.close = eachBox.close;\n      d.high = Math.max(d.open, d.close);\n      d.low = Math.min(d.open, d.close);\n\n      if (isNotDefined(d.fromDate)) d.fromDate = eachBox.fromDate;\n      if (isNotDefined(d.date)) d.date = eachBox.date;\n      d.toDate = eachBox.toDate;\n\n      if (eachBox.startOfYear) {\n        d.startOfYear = d.startOfYear || eachBox.startOfYear;\n        d.startOfQuarter = eachBox.startOfQuarter;\n        d.startOfMonth = eachBox.startOfMonth;\n        d.startOfWeek = eachBox.startOfWeek;\n\n        dateMutator(d, dateAccessor(eachBox));\n      }\n      if (d.startOfQuarter !== true && eachBox.startOfQuarter) {\n        d.startOfQuarter = eachBox.startOfQuarter;\n        d.startOfMonth = eachBox.startOfMonth;\n        d.startOfWeek = eachBox.startOfWeek;\n        // d.displayDate = eachBox.displayDate;\n        dateMutator(d, dateAccessor(eachBox));\n      }\n      if (d.startOfMonth !== true && eachBox.startOfMonth) {\n        d.startOfMonth = eachBox.startOfMonth;\n        d.startOfWeek = eachBox.startOfWeek;\n        // d.displayDate = eachBox.displayDate;\n        dateMutator(d, dateAccessor(eachBox));\n      }\n      if (d.startOfWeek !== true && eachBox.startOfWeek) {\n        d.startOfWeek = eachBox.startOfWeek;\n        // d.displayDate = eachBox.displayDate;\n        dateMutator(d, dateAccessor(eachBox));\n      }\n    });\n  });\n\n  // console.table(columnData);\n  // console.table(rawData);\n  return columnData;\n}\n\nexport default function () {\n  let options = defaultOptions;\n  let dateAccessor = d => d.date;\n  let dateMutator = (d, date) => {\n    d.date = date;\n  };\n\n  function calculator(rawData) {\n    const { reversal, boxSize, sourcePath } = options;\n\n    const source =\n      sourcePath === 'high/low'\n        ? d => {\n            return { high: d.high, low: d.low };\n          }\n        : d => {\n            return { high: d.close, low: d.close };\n          };\n\n    const pricingMethod = source;\n    const columnData = [];\n\n    let column = {\n        boxes: [],\n        open: rawData[0].open,\n      },\n      box = createBox(rawData[0], dateAccessor, dateMutator);\n\n    columnData.push(column);\n\n    rawData.forEach(function (d) {\n      column.volume = (column.volume || 0) + d.volume;\n\n      if (!box.startOfYear) {\n        box.startOfYear = d.startOfYear;\n        if (box.startOfYear) {\n          dateMutator(box, dateAccessor(d));\n          // box.displayDate = d.displayDate;\n        }\n      }\n\n      if (!box.startOfYear && !box.startOfQuarter) {\n        box.startOfQuarter = d.startOfQuarter;\n        if (box.startOfQuarter && !box.startOfYear) {\n          dateMutator(box, dateAccessor(d));\n          // box.displayDate = d.displayDate;\n        }\n      }\n\n      if (!box.startOfQuarter && !box.startOfMonth) {\n        box.startOfMonth = d.startOfMonth;\n        if (box.startOfMonth && !box.startOfQuarter) {\n          dateMutator(box, dateAccessor(d));\n          // box.displayDate = d.displayDate;\n        }\n      }\n      if (!box.startOfMonth && !box.startOfWeek) {\n        box.startOfWeek = d.startOfWeek;\n        if (box.startOfWeek && !box.startOfMonth) {\n          dateMutator(box, dateAccessor(d));\n          // box.displayDate = d.displayDate;\n        }\n      }\n\n      if (columnData.length === 1 && column.boxes.length === 0) {\n        const upwardMovement = Math.max(pricingMethod(d).high - column.open, 0); // upward movement\n        const downwardMovement = Math.abs(\n          Math.min(column.open - pricingMethod(d).low, 0)\n        ); // downward movement\n        column.direction = upwardMovement > downwardMovement ? 1 : -1;\n        if (\n          boxSize * reversal < upwardMovement ||\n          boxSize * reversal < downwardMovement\n        ) {\n          // enough movement to trigger a reversal\n          box.toDate = dateAccessor(d);\n          box.open = column.open;\n          const noOfBoxes =\n            column.direction > 0\n              ? Math.floor(upwardMovement / boxSize)\n              : Math.floor(downwardMovement / boxSize);\n          for (let i = 0; i < noOfBoxes; i++) {\n            box.close = box.open + column.direction * boxSize;\n            const prevBoxClose = box.close;\n            column.boxes.push(box);\n            box = createBox(box, dateAccessor, dateMutator);\n            // box = cloneMe(box);\n            box.open = prevBoxClose;\n          }\n          box.fromDate = dateAccessor(d);\n          box.date = dateAccessor(d);\n        }\n      } else {\n        // one or more boxes already formed in the current column\n        const upwardMovement = Math.max(pricingMethod(d).high - box.open, 0); // upward movement\n        const downwardMovement = Math.abs(\n          Math.min(pricingMethod(d).low - box.open, 0)\n        ); // downward movement\n\n        if (\n          (column.direction > 0 &&\n            upwardMovement >\n              boxSize) /* rising column AND box can be formed */ ||\n          (column.direction < 0 &&\n            downwardMovement >\n              boxSize) /* falling column AND box can be formed */\n        ) {\n          // form another box\n          box.close = box.open + column.direction * boxSize;\n          box.toDate = dateAccessor(d);\n          const prevBoxClose = box.close;\n          column.boxes.push(box);\n          box = createBox(d, dateAccessor, dateMutator);\n          box.open = prevBoxClose;\n          box.fromDate = dateAccessor(d);\n          dateMutator(box, dateAccessor(d));\n        } else if (\n          (column.direction > 0 &&\n            downwardMovement >\n              boxSize *\n                reversal) /* rising column and there is downward movement to trigger a reversal */ ||\n          (column.direction < 0 &&\n            upwardMovement >\n              boxSize *\n                reversal) /* falling column and there is downward movement to trigger a reversal */\n        ) {\n          // reversal\n\n          box.open = box.open + -1 * column.direction * boxSize;\n          box.toDate = dateAccessor(d);\n          // box.displayDate = d.displayDate;\n          dateMutator(box, dateAccessor(d));\n          // box.startOfYear = d.startOfYear;\n          // box.startOfQuarter = d.startOfQuarter;\n          // box.startOfMonth = d.startOfMonth;\n          // box.startOfWeek = d.startOfWeek;\n          // console.table(column.boxes);\n          // var idx = index + 1;\n          column = {\n            boxes: [],\n            volume: 0,\n            direction: -1 * column.direction,\n          };\n          const noOfBoxes =\n            column.direction > 0\n              ? Math.floor(upwardMovement / boxSize)\n              : Math.floor(downwardMovement / boxSize);\n          for (let i = 0; i < noOfBoxes; i++) {\n            box.close = box.open + column.direction * boxSize;\n            const prevBoxClose = box.close;\n            column.boxes.push(box);\n            box = createBox(d, dateAccessor, dateMutator);\n            box.open = prevBoxClose;\n          }\n\n          columnData.push(column);\n        }\n      }\n    });\n    updateColumns(columnData, dateAccessor, dateMutator);\n\n    return columnData;\n  }\n  calculator.options = function (x) {\n    if (!arguments.length) {\n      return options;\n    }\n    options = { ...defaultOptions, ...x };\n    return calculator;\n  };\n  calculator.dateMutator = function (x) {\n    if (!arguments.length) return dateMutator;\n    dateMutator = x;\n    return calculator;\n  };\n  calculator.dateAccessor = function (x) {\n    if (!arguments.length) return dateAccessor;\n    dateAccessor = x;\n    return calculator;\n  };\n\n  return calculator;\n}\n"]}