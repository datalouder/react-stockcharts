{"version":3,"sources":["../../../../src/lib/calculator/compare.js"],"names":["head","path","isDefined","isNotDefined","Change","defaultOptions","options","calculator","data","basePath","mainKeys","compareKeys","base","first","b","firsts","compareData","map","result","forEach","d","key","Object","keys","subkey","x","arguments","length"],"mappings":";;;;AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,UAApD;AACA,SAASC,UAAUC,cAAnB,QAAyC,gCAAzC;;AAEA,eAAe,YAAY;AACzB,MAAIC,UAAUD,cAAd;;AAEA,WAASE,UAAT,CAAoBC,IAApB,EAA0B;AAAA,mBACoBF,OADpB;AAAA,QAChBG,QADgB,YAChBA,QADgB;AAAA,QACNC,QADM,YACNA,QADM;AAAA,QACIC,WADJ,YACIA,WADJ;;AAExB,QAAMC,OAAOX,KAAKQ,QAAL,CAAb;;AAEA,QAAMI,QAAQb,KAAKQ,IAAL,CAAd;AACA,QAAMM,IAAIF,KAAKC,KAAL,CAAV;;AAEA;AACA,QAAIE,SAAS,EAAb;;AAEA,QAAMC,cAAcR,KAAKS,GAAL,CAAS,aAAK;AAChC;AACA,UAAIC,SAAS,EAAb;;AAEAR,eAASS,OAAT,CAAiB,eAAO;AACtB,YAAI,QAAOC,EAAEC,GAAF,CAAP,MAAkB,QAAtB,EAAgC;AAC9BH,iBAAOG,GAAP,IAAc,EAAd;AACAC,iBAAOC,IAAP,CAAYH,EAAEC,GAAF,CAAZ,EAAoBF,OAApB,CAA4B,kBAAU;AACpCD,mBAAOG,GAAP,EAAYG,MAAZ,IAAsB,CAACJ,EAAEC,GAAF,EAAOG,MAAP,IAAiBV,CAAlB,IAAuBA,CAA7C;AACD,WAFD;AAGD,SALD,MAKO;AACLI,iBAAOG,GAAP,IAAc,CAACD,EAAEC,GAAF,IAASP,CAAV,IAAeA,CAA7B;AACD;AACF,OATD;;AAWAH,kBAAYQ,OAAZ,CAAoB,eAAO;AACzB,YAAIjB,UAAUkB,EAAEC,GAAF,CAAV,KAAqBlB,aAAaY,OAAOM,GAAP,CAAb,CAAzB,EAAoD;AAClDN,iBAAOM,GAAP,IAAcD,EAAEC,GAAF,CAAd;AACD;AACD,YAAInB,UAAUkB,EAAEC,GAAF,CAAV,KAAqBnB,UAAUa,OAAOM,GAAP,CAAV,CAAzB,EAAiD;AAC/CH,iBAAOG,GAAP,IAAc,CAACD,EAAEC,GAAF,IAASN,OAAOM,GAAP,CAAV,IAAyBN,OAAOM,GAAP,CAAvC;AACD;AACF,OAPD;AAQA,aAAOH,MAAP;AACD,KAxBmB,CAApB;AAyBA;AACA,WAAOF,WAAP;AACD;AACDT,aAAWD,OAAX,GAAqB,UAAUmB,CAAV,EAAa;AAChC,QAAI,CAACC,UAAUC,MAAf,EAAuB;AACrB,aAAOrB,OAAP;AACD;AACDA,2BAAeD,cAAf,EAAkCoB,CAAlC;AACA,WAAOlB,UAAP;AACD,GAND;AAOA,SAAOA,UAAP;AACD","file":"compare.js","sourcesContent":["import { head, path, isDefined, isNotDefined } from '../utils';\nimport { Change as defaultOptions } from './defaultOptionsForComputation';\n\nexport default function () {\n  let options = defaultOptions;\n\n  function calculator(data) {\n    const { basePath, mainKeys, compareKeys } = options;\n    const base = path(basePath);\n\n    const first = head(data);\n    const b = base(first);\n\n    // eslint-disable-next-line prefer-const\n    let firsts = {};\n\n    const compareData = data.map(d => {\n      // eslint-disable-next-line prefer-const\n      let result = {};\n\n      mainKeys.forEach(key => {\n        if (typeof d[key] === 'object') {\n          result[key] = {};\n          Object.keys(d[key]).forEach(subkey => {\n            result[key][subkey] = (d[key][subkey] - b) / b;\n          });\n        } else {\n          result[key] = (d[key] - b) / b;\n        }\n      });\n\n      compareKeys.forEach(key => {\n        if (isDefined(d[key]) && isNotDefined(firsts[key])) {\n          firsts[key] = d[key];\n        }\n        if (isDefined(d[key]) && isDefined(firsts[key])) {\n          result[key] = (d[key] - firsts[key]) / firsts[key];\n        }\n      });\n      return result;\n    });\n    // console.log(compareData[20]);\n    return compareData;\n  }\n  calculator.options = function (x) {\n    if (!arguments.length) {\n      return options;\n    }\n    options = { ...defaultOptions, ...x };\n    return calculator;\n  };\n  return calculator;\n}\n"]}